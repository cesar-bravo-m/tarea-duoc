var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AgendaComponent.html",[0,0.226,1,0.921]],["body/components/AgendaComponent.html",[0,0.299,1,1.345,2,1.11,3,0.518,4,0.199,5,1.558,6,0.814,7,0.814,8,0.169,9,1.992,10,0.66,11,1.559,12,0.388,13,0.711,14,0.684,15,3.904,16,0.455,17,0.699,18,1.641,19,1.309,20,2.016,21,0.814,22,1.737,23,1.737,24,1.022,25,0.576,26,1.022,27,1.216,28,2.211,29,3.511,30,1.345,31,2.438,32,0.033,33,2.272,34,2.094,35,3.054,36,2.594,37,0.817,38,2.016,39,2.315,40,2.094,41,4.583,42,4.095,43,2.339,44,1.926,45,2.374,46,2.413,47,2.183,48,2.281,49,2.272,50,2.439,51,2.374,52,2.965,53,2.272,54,3.27,55,2.657,56,3.27,57,3.27,58,4.207,59,2.094,60,2.315,61,2.475,62,2.094,63,2.094,64,1.695,65,2.374,66,1.846,67,1.846,68,1.846,69,1.846,70,1.846,71,2.475,72,2.475,73,0.648,74,2.732,75,2.426,76,2.475,77,2.358,78,2.518,79,4.339,80,1.695,81,1.695,82,4.207,83,5.198,84,3.013,85,4.207,86,1.846,87,2.272,88,1.846,89,2.438,90,2.281,91,1.028,92,2.094,93,2.491,94,4.207,95,3.511,96,4.207,97,4.207,98,2.211,99,1.695,100,1.695,101,2.491,102,2.491,103,2.491,104,2.09,105,2.281,106,2.712,107,2.712,108,2.243,109,2.438,110,2.712,111,2.712,112,2.712,113,2.211,114,3.054,115,2.732,116,1.693,117,2.211,118,3.511,119,4.207,120,3.511,121,2.211,122,1.846,123,1.221,124,3.054,125,3.511,126,3.054,127,2.211,128,3.511,129,2.712,130,3.511,131,1.695,132,3.511,133,5.198,134,4.207,135,3.511,136,4.207,137,6.054,138,3.054,139,4.207,140,4.207,141,3.375,142,3.511,143,4.394,144,3.013,145,1.558,146,2.704,147,3.511,148,3.054,149,2.877,150,4.095,151,4.207,152,4.207,153,4.207,154,4.207,155,1.435,156,1.435,157,1.435,158,0.141,159,0.295,160,3.511,161,4.339,162,3.054,163,3.511,164,3.054,165,3.533,166,2.949,167,3.533,168,1.022,169,0.644,170,3.882,171,3.533,172,3.533,173,3.533,174,3.533,175,3.533,176,2.211,177,4.207,178,3.511,179,2.949,180,3.882,181,4.207,182,3.533,183,4.207,184,0.749,185,1.538,186,0.583,187,1.826,188,2.386,189,1.689,190,0.699,191,0.508,192,1.431,193,0.884,194,2.386,195,3.533,196,3.533,197,2.048,198,0.801,199,0.512,200,3.882,201,3.533,202,2.386,203,0.864,204,3.511,205,0.73,206,0.907,207,3.533,208,2.386,209,4.144,210,0.864,211,3.054,212,4.859,213,3.533,214,2.997,215,2.949,216,2.386,217,2.949,218,0.721,219,2.444,220,0.67,221,3.882,222,2.949,223,3.533,224,1.773,225,2.386,226,2.949,227,0.98,228,1.431,229,3.054,230,3.533,231,1.321,232,2.386,233,1.857,234,1.857,235,2.438,236,3.533,237,2.386,238,2.695,239,1.214,240,3.511,241,2.386,242,0.635,243,3.533,244,2.386,245,2.386,246,1.992,247,1.383,248,3.054,249,3.467,250,2.564,251,2.386,252,2.564,253,0.648,254,2.712,255,3.603,256,2.386,257,2.048,258,2.048,259,2.564,260,2.386,261,2.695,262,2.564,263,3.511,264,2.949,265,2.386,266,2.949,267,0.716,268,1.631,269,1.501,270,2.949,271,3.511,272,3.511,273,3.511,274,2.949,275,3.511,276,2.386,277,2.564,278,2.386,279,2.229,280,3.533,281,0.94,282,2.386,283,2.048,284,0.49,285,1.216,286,2.386,287,1.205,288,0.648,289,1.144,290,1.992,291,0.544,292,2.386,293,0.801,294,1.383,295,0.977,296,2.386,297,2.386,298,0.94,299,2.386,300,2.277,301,2.386,302,1.992,303,2.386,304,0.447,305,1.538,306,0.884,307,2.016,308,0.553,309,1.992,310,1.992,311,0.199,312,0.635,313,0.884,314,0.749,315,2.949,316,1.732,317,1.732,318,1.732,319,1.732,320,1.732,321,1.732,322,1.538,323,0.884,324,2.386,325,0.884,326,0.23,327,0.23,328,1.538,329,1.732,330,1.992,331,0.716,332,1.992,333,2.949,334,1.732,335,1.732,336,2.386,337,0.885,338,3.375,339,2.386,340,1.538,341,1.992,342,2.386,343,1.254,344,1.11,345,1.992,346,2.949,347,1.992,348,1.992,349,1.992,350,1.992,351,1.992,352,1.254,353,1.992,354,2.386,355,1.992,356,2.949,357,1.732,358,2.386,359,1.992,360,1.254,361,2.386,362,3.533,363,0.447,364,2.386,365,2.386,366,4.207,367,0.749,368,1.144,369,1.435,370,0.725,371,2.386,372,1.695,373,2.386,374,2.386,375,2.386,376,2.386,377,3.533,378,0.725,379,0.716,380,2.949,381,1.992,382,3.533,383,2.949,384,2.386,385,2.386,386,1.732,387,2.386,388,0.884,389,0.961,390,0.884,391,1.992,392,1.992,393,1.992,394,0.814,395,1.205,396,1.205,397,0.814,398,1.586,399,0.814,400,0.814,401,0.69,402,0.814,403,0.69,404,0.814,405,0.635,406,0.814,407,0.69,408,0.814,409,0.69,410,0.814,411,0.69,412,0.814,413,0.814,414,0.69,415,0.814,416,1.586,417,0.635,418,0.814,419,0.69,420,0.814,421,0.69,422,0.583,423,0.814,424,0.814,425,0.017,426,0.017]],["title/components/AppComponent.html",[0,0.226,401,0.921]],["body/components/AppComponent.html",[0,0.357,1,0.955,2,1.397,3,0.318,4,0.276,5,1.224,6,1.127,7,1.127,8,0.234,10,0.635,11,1.886,13,0.409,14,0.681,16,0.466,17,0.666,18,1.572,19,1.647,20,2.409,21,1.127,22,1.828,23,1.828,24,1.286,25,0.666,26,1.286,27,1.454,28,2.642,30,0.955,31,3.253,32,0.033,33,1.331,34,2.166,36,2.329,37,0.762,38,2.131,39,2.225,40,2.166,43,2.33,44,2.079,45,1.331,46,2.342,47,2.141,48,1.45,49,2.261,50,1.331,51,1.331,52,2.642,53,1.791,55,2.206,59,1.791,60,2.141,61,1.45,62,2.261,63,2.166,64,1.331,65,1.791,66,1.45,67,1.45,68,2.206,69,1.951,70,2.206,71,2.463,72,2.463,73,0.509,75,2.393,76,1.45,77,1.647,78,1.331,86,1.951,87,2.329,90,1.45,91,1.315,92,1.791,93,2.131,98,1.736,99,2.025,101,2.131,102,2.409,103,2.409,104,1.992,105,2.206,108,1.647,109,1.915,113,1.736,114,2.398,116,1.127,122,1.45,123,0.941,131,1.791,138,2.398,144,1.915,146,1.583,158,0.195,159,0.371,168,1.286,169,0.796,176,2.826,184,1.579,185,2.129,186,0.745,187,1.857,189,1.037,190,0.623,191,0.532,192,0.879,193,1.862,199,0.449,205,0.551,206,0.509,220,0.591,227,0.509,231,1.337,238,1.915,239,1.087,242,1.431,253,0.685,267,0.685,268,1.759,269,1.619,279,2.995,284,0.913,285,1.286,287,1.517,288,0.828,291,0.828,293,0.685,295,0.915,308,0.569,311,0.276,312,0.879,313,1.224,314,1.037,326,0.484,327,0.318,328,2.129,337,0.562,344,1.397,370,0.678,378,0.678,379,0.89,388,1.647,390,1.647,394,1.127,395,1.517,396,1.517,397,1.127,398,1.834,399,1.127,400,1.127,401,1.555,402,1.127,403,0.955,404,1.127,405,0.879,406,1.127,407,0.955,408,1.127,409,0.955,410,1.127,411,0.955,412,1.127,413,1.127,414,0.955,415,1.127,416,1.834,417,0.879,418,1.127,419,0.955,420,1.127,421,1.555,422,0.808,423,1.127,424,1.127,425,0.022,426,0.022,427,2.758,428,1.397,429,1.315,430,4.196,431,1.397,432,5.027,433,1.951,434,5.027,435,1.791,436,4.447,437,1.708,438,5.027,439,2.188,440,5.027,441,1.855,442,5.027,443,5.027,444,5.377,445,5.027,446,1.708,447,5.027,448,2.261,449,5.027,450,4.489,451,1.579,452,4.447,453,1.286,454,2.188,455,1.911,456,3.303,457,1.206,458,5.78,459,3.712,460,3.303,461,1.579,462,3.303,463,3.117,464,5.249,465,1.454,466,3.303,467,2.866,468,3.303,469,3.303,470,1.951,471,1.791,472,1.372,473,3.303,474,3.303,475,2.025,476,3.303,477,1.517,478,3.303,479,3.303,480,4.447,481,3.303,482,4.447,483,3.228,484,1.454,485,3.303,486,4.447,487,3.303,488,3.303,489,3.303,490,1.45,491,3.303,492,0.955,493,1.331,494,2.129,495,3.303,496,2.398,497,4.447,498,2.129,499,2.129,500,4.447,501,2.758,502,4.447,503,2.758,504,2.758,505,4.447,506,3.303,507,3.303,508,4.447,509,3.303,510,3.303,511,4.447,512,3.303,513,3.303,514,2.398,515,1.127,516,2.758,517,2.398,518,4.447,519,1.331,520,3.303,521,3.303,522,1.331,523,1.331,524,3.303,525,2.758,526,2.758,527,2.758,528,2.758,529,1.331,530,3.303,531,3.303,532,3.303,533,3.303,534,3.303,535,3.303,536,1.331,537,3.303,538,2.398,539,2.758,540,1.647,541,3.712,542,2.758,543,2.758,544,2.758,545,2.758,546,2.578,547,3.303,548,3.303,549,1.45,550,1.992,551,5.78,552,2.866,553,2.398,554,2.398,555,4.447,556,2.129,557,3.303,558,3.303,559,3.303,560,5.78,561,2.577,562,2.758,563,3.303,564,2.758,565,0.955,566,4.196,567,5.027,568,2.866,569,2.758,570,3.303,571,4.447,572,5.027,573,2.398,574,3.303,575,2.758,576,3.303,577,3.303,578,3.303,579,1.397,580,2.129,581,1.915,582,3.303,583,2.337,584,3.228,585,2.129,586,2.758]],["title/interfaces/Cita.html",[461,1,587,0.266]],["body/interfaces/Cita.html",[3,0.201,4,0.174,8,0.227,10,0.582,12,0.62,13,0.258,14,0.609,16,0.423,17,0.637,18,0.555,25,0.699,32,0.033,37,0.797,73,0.91,91,1.145,123,1.187,145,1.964,155,1.088,156,1.088,157,0.711,158,0.123,159,0.266,169,0.725,186,0.289,190,0.395,191,0.323,198,0.597,199,0.391,203,0.51,205,0.538,206,0.918,210,1.062,218,0.732,220,0.565,224,2.14,227,0.669,228,1.724,231,1.246,239,0.51,242,1.032,253,0.597,267,0.321,281,1.246,284,0.961,288,0.792,291,0.976,293,0.669,295,1.1,298,0.849,304,0.598,308,0.374,311,0.174,325,2.146,326,0.524,327,0.201,331,0.99,337,0.875,344,0.655,363,1.096,367,1.364,369,1.322,370,0.655,372,2.381,378,0.655,379,0.597,425,0.016,426,0.016,428,0.655,429,0.51,431,0.655,437,0.603,439,0.772,441,0.655,446,1.121,448,0.84,451,1.002,453,0.923,454,1.964,455,1.742,457,0.87,461,1.471,465,1.121,471,1.562,472,1.431,475,1.286,477,1.088,484,1.693,492,0.603,493,0.84,515,0.711,519,0.84,522,0.84,523,0.84,529,1.286,536,1.562,540,0.772,550,0.772,565,1.486,579,1.937,587,0.442,588,0.655,589,0.772,590,1.572,591,2.234,592,1.702,593,2.327,594,2.327,595,0.923,596,1.401,597,1.286,598,2.055,599,0.772,600,1.401,601,0.915,602,0.603,603,0.711,604,0.772,605,0.711,606,0.915,607,0.915,608,0.915,609,0.915,610,0.915,611,0.915,612,0.915,613,0.711,614,0.915,615,1.014,616,0.915,617,0.915,618,0.915,619,0.915,620,0.915,621,0.915,622,0.915,623,0.915,624,0.915,625,0.915,626,0.915,627,0.915,628,0.915,629,0.915,630,0.915,631,0.915,632,0.915,633,1.753,634,0.915,635,0.915,636,0.915,637,0.915,638,0.915,639,1.562,640,0.915,641,0.915,642,1.401,643,2.327,644,0.915,645,0.915,646,0.915,647,0.915,648,2.511,649,2.327,650,2.136,651,2.385,652,2.511,653,2.593,654,2.593,655,2.256,656,1.659,657,2.754,658,1.847,659,1.847,660,2.036,661,1.844,662,1.856,663,1.937,664,1.897,665,2.256,666,2.256,667,0.915,668,2.593,669,2.4,670,2.4,671,2.4,672,2.385,673,2.234,674,2.234,675,2.448,676,2.136,677,1.401,678,0.915,679,1.437,680,1.182,681,1.702,682,1.428,683,1.401,684,1.702,685,0.915,686,1.702,687,0.915,688,0.915,689,1.906,690,0.915,691,2.385,692,2.475,693,0.915,694,0.915,695,0.915,696,1.906,697,0.915,698,1.702,699,0.915,700,1.401,701,0.915,702,0.915,703,1.401,704,1.401,705,0.915,706,1.702,707,1.437,708,1.437,709,1.437,710,0.915,711,0.915,712,0.84,713,0.915,714,2.761,715,2.828,716,0.915,717,0.915,718,0.915,719,0.915,720,0.915,721,0.915,722,0.915,723,0.915,724,2.681,725,0.915,726,0.915,727,2.434,728,0.915,729,0.915,730,0.915,731,0.915,732,0.915,733,1.367,734,0.915,735,0.915,736,0.915,737,0.915,738,0.915,739,1.964,740,0.915,741,0.915,742,0.915,743,0.915,744,0.915,745,2.055,746,0.915,747,0.915,748,0.915,749,0.915,750,0.915,751,1.401,752,0.915,753,0.915,754,0.915,755,0.915,756,0.915,757,0.915,758,0.915,759,0.915,760,0.915,761,0.915,762,0.915,763,0.915,764,0.915,765,0.915,766,0.915,767,0.915,768,0.915,769,0.915,770,0.915,771,0.915,772,0.915,773,0.915,774,0.915,775,0.915,776,0.915,777,0.915,778,0.915,779,0.915,780,0.915,781,0.915,782,0.915,783,1.401,784,0.84,785,2.055,786,2.055,787,0.915,788,0.915,789,0.915,790,0.915,791,0.915,792,0.915,793,0.915,794,0.915,795,0.915,796,1.886,797,2.055,798,0.915,799,0.915,800,0.915,801,0.915,802,0.915,803,0.915,804,0.915,805,0.915,806,0.84,807,0.915,808,0.915,809,0.915,810,0.915,811,0.915,812,0.915,813,0.915,814,0.915,815,0.915,816,0.915,817,0.915,818,0.915,819,0.915,820,0.915,821,0.915,822,0.915,823,0.915,824,0.915,825,0.915,826,0.915,827,2.127,828,0.915,829,0.915,830,0.915,831,0.915,832,0.915,833,0.915,834,0.915,835,0.915,836,0.915,837,1.286,838,0.915,839,0.915,840,0.915,841,0.915,842,0.915,843,0.915,844,0.915,845,0.915,846,0.915,847,0.915,848,0.915,849,0.915,850,0.915,851,0.915,852,0.915,853,0.915,854,0.915,855,0.915,856,0.915,857,0.915,858,0.915,859,0.915,860,0.915,861,0.915,862,0.915,863,0.915,864,0.915,865,0.915,866,0.915,867,0.915,868,0.915,869,0.915,870,0.915,871,0.915,872,0.915,873,0.915,874,0.915,875,2.167,876,0.915,877,0.915,878,0.915,879,0.915,880,2.167,881,0.915,882,2.494,883,0.915,884,2.071,885,2.272,886,1.401,887,2.055,888,1.702,889,1.401,890,1.702,891,1.906,892,0.915,893,1.702,894,1.702,895,0.915,896,2.256,897,1.702,898,1.002,899,0.915,900,0.915,901,2.055,902,0.915,903,0.915,904,0.915,905,2.327,906,1.906,907,1.533,908,0.915,909,0.915,910,0.84,911,0.915,912,2.542,913,2.511,914,0.915,915,2.727,916,0.915,917,1.909,918,2.256,919,2.055,920,2.167,921,2.055,922,2.055,923,2.667,924,0.915,925,2.256,926,2.167,927,2.167,928,2.167,929,1.906,930,0.915,931,2.256,932,1.906,933,1.702,934,1.702,935,1.401,936,0.915,937,0.915,938,0.915,939,0.915,940,0.915,941,0.915,942,0.915,943,0.915,944,0.915,945,0.915,946,0.915,947,0.915,948,2.055,949,2.511,950,0.915,951,2.055,952,0.915,953,0.915,954,0.915,955,0.772,956,0.915,957,0.915,958,0.915,959,1.286,960,0.915,961,1.562,962,1.182,963,1.182,964,0.84,965,1.609,966,2.167,967,1.906,968,1.286,969,0.84,970,0.915,971,0.915,972,0.84,973,0.84,974,1.286,975,0.915,976,1.401,977,0.915,978,0.915,979,0.772,980,0.915,981,0.915,982,0.915,983,1.218,984,0.915,985,0.915,986,0.915,987,0.915,988,0.915,989,0.915,990,0.915,991,0.915,992,0.915,993,0.915,994,0.915,995,0.915,996,0.915,997,0.923,998,1.088,999,1.401,1000,1.088,1001,1.401,1002,1.088,1003,1.286,1004,0.915,1005,1.182,1006,0.915,1007,0.915,1008,1.002,1009,0.915,1010,2.055,1011,2.055,1012,2.055,1013,1.702,1014,0.915,1015,1.401,1016,1.286,1017,1.401,1018,1.401,1019,1.401,1020,0.915,1021,1.401,1022,0.915,1023,0.915,1024,1.702,1025,1.906,1026,2.055,1027,1.182,1028,0.915,1029,1.702,1030,0.655,1031,0.655,1032,0.915,1033,0.915,1034,0.915,1035,0.915,1036,0.915,1037,0.915,1038,0.915,1039,0.915,1040,1.401,1041,0.915,1042,0.915,1043,0.915,1044,0.915,1045,0.915,1046,0.915,1047,0.915,1048,1.401,1049,1.906,1050,0.84,1051,0.84,1052,0.915,1053,0.915,1054,0.915,1055,1.286,1056,0.915,1057,0.915,1058,0.915,1059,0.915,1060,0.915,1061,1.702,1062,0.915,1063,0.915,1064,0.915,1065,0.915,1066,0.915,1067,0.84,1068,1.401,1069,0.915,1070,0.915,1071,1.401,1072,0.915,1073,0.84,1074,0.915,1075,0.772,1076,1.401,1077,0.915,1078,1.286,1079,0.84,1080,0.51,1081,0.915,1082,0.915,1083,0.772]],["title/interfaces/Cupo.html",[465,0.921,587,0.266]],["body/interfaces/Cupo.html",[3,0.2,4,0.173,8,0.226,10,0.582,12,0.619,13,0.258,14,0.609,16,0.426,17,0.636,18,0.553,25,0.698,32,0.033,37,0.797,73,0.91,91,1.143,123,1.186,145,1.962,155,1.086,156,1.086,157,0.709,158,0.123,159,0.266,169,0.725,186,0.288,190,0.395,191,0.39,198,0.596,199,0.39,203,0.508,205,0.537,206,0.917,210,0.946,218,0.738,220,0.564,224,2.126,227,0.668,228,1.724,231,1.244,239,0.508,242,1.03,253,0.596,267,0.32,281,1.244,284,0.96,288,0.791,291,0.984,293,0.668,295,1.099,298,0.847,304,0.596,308,0.373,311,0.173,325,2.168,326,0.523,327,0.2,331,0.99,337,0.874,344,0.653,363,1.095,367,1.362,369,1.32,370,0.653,372,2.379,378,0.653,379,0.596,425,0.016,426,0.016,428,0.653,429,0.508,431,0.653,437,0.601,439,0.77,441,0.653,446,1.119,448,0.837,451,1,453,0.921,454,1.962,455,1.74,457,0.868,461,1.215,465,1.352,471,1.559,472,1.43,475,1.283,477,1.086,484,1.692,492,0.601,493,0.837,515,0.709,519,0.837,522,0.837,523,0.837,529,1.283,536,1.559,540,0.77,550,0.77,565,1.485,579,1.936,587,0.442,588,0.653,589,0.77,590,1.57,591,2.232,592,1.397,593,2.052,594,2.052,595,0.921,596,1.397,597,1.283,598,2.053,599,0.77,600,1.397,601,0.912,602,0.601,603,0.709,604,0.77,605,0.709,606,0.912,607,0.912,608,0.912,609,0.912,610,0.912,611,0.912,612,0.912,613,0.709,614,0.912,615,1.014,616,0.912,617,0.912,618,0.912,619,0.912,620,0.912,621,0.912,622,0.912,623,0.912,624,0.912,625,0.912,626,0.912,627,0.912,628,0.912,629,0.912,630,0.912,631,0.912,632,0.912,633,1.751,634,0.912,635,0.912,636,0.912,637,0.912,638,0.912,639,1.559,640,0.912,641,0.912,642,1.397,643,2.324,644,0.912,645,0.912,646,0.912,647,0.912,648,2.509,649,2.324,650,2.134,651,2.383,652,2.509,653,2.592,654,2.592,655,2.253,656,1.659,657,2.753,658,1.847,659,1.847,660,2.035,661,1.843,662,1.855,663,1.936,664,1.896,665,2.253,666,2.253,667,0.912,668,2.592,669,2.399,670,2.399,671,2.399,672,2.383,673,2.332,674,2.332,675,2.447,676,2.134,677,1.397,678,0.912,679,1.434,680,1.18,681,1.698,682,1.63,683,2.052,684,1.698,685,0.912,686,1.698,687,0.912,688,0.912,689,1.903,690,0.912,691,2.383,692,2.473,693,0.912,694,0.912,695,0.912,696,1.903,697,0.912,698,1.698,699,0.912,700,1.397,701,0.912,702,0.912,703,1.397,704,1.397,705,0.912,706,1.698,707,1.434,708,1.434,709,1.434,710,0.912,711,0.912,712,0.837,713,0.912,714,2.76,715,2.828,716,0.912,717,0.912,718,0.912,719,0.912,720,0.912,721,0.912,722,0.912,723,0.912,724,2.68,725,0.912,726,0.912,727,2.432,728,0.912,729,0.912,730,0.912,731,0.912,732,0.912,733,1.366,734,0.912,735,0.912,736,0.912,737,0.912,738,0.912,739,1.962,740,0.912,741,0.912,742,0.912,743,0.912,744,0.912,745,2.052,746,0.912,747,0.912,748,0.912,749,0.912,750,0.912,751,1.397,752,0.912,753,0.912,754,0.912,755,0.912,756,0.912,757,0.912,758,0.912,759,0.912,760,0.912,761,0.912,762,0.912,763,0.912,764,0.912,765,0.912,766,0.912,767,0.912,768,0.912,769,0.912,770,0.912,771,0.912,772,0.912,773,0.912,774,0.912,775,0.912,776,0.912,777,0.912,778,0.912,779,0.912,780,0.912,781,0.912,782,0.912,783,1.397,784,0.837,785,2.052,786,2.052,787,0.912,788,0.912,789,0.912,790,0.912,791,0.912,792,0.912,793,0.912,794,0.912,795,0.912,796,1.884,797,2.052,798,0.912,799,0.912,800,0.912,801,0.912,802,0.912,803,0.912,804,0.912,805,0.912,806,0.837,807,0.912,808,0.912,809,0.912,810,0.912,811,0.912,812,0.912,813,0.912,814,0.912,815,0.912,816,0.912,817,0.912,818,0.912,819,0.912,820,0.912,821,0.912,822,0.912,823,0.912,824,0.912,825,0.912,826,0.912,827,2.126,828,0.912,829,0.912,830,0.912,831,0.912,832,0.912,833,0.912,834,0.912,835,0.912,836,0.912,837,1.283,838,0.912,839,0.912,840,0.912,841,0.912,842,0.912,843,0.912,844,0.912,845,0.912,846,0.912,847,0.912,848,0.912,849,0.912,850,0.912,851,0.912,852,0.912,853,0.912,854,0.912,855,0.912,856,0.912,857,0.912,858,0.912,859,0.912,860,0.912,861,0.912,862,0.912,863,0.912,864,0.912,865,0.912,866,0.912,867,0.912,868,0.912,869,0.912,870,0.912,871,0.912,872,0.912,873,0.912,874,0.912,875,2.165,876,0.912,877,0.912,878,0.912,879,0.912,880,2.165,881,0.912,882,2.493,883,0.912,884,2.068,885,2.271,886,1.397,887,2.052,888,1.698,889,1.397,890,1.698,891,1.903,892,0.912,893,1.698,894,1.698,895,0.912,896,2.253,897,1.698,898,1,899,0.912,900,0.912,901,2.052,902,0.912,903,0.912,904,0.912,905,2.324,906,1.903,907,1.532,908,0.912,909,0.912,910,0.837,911,0.912,912,2.54,913,2.509,914,0.912,915,2.726,916,0.912,917,1.908,918,2.253,919,2.052,920,2.165,921,2.052,922,2.052,923,2.666,924,0.912,925,2.253,926,2.165,927,2.165,928,2.165,929,1.903,930,0.912,931,2.253,932,1.903,933,1.698,934,1.698,935,1.397,936,0.912,937,0.912,938,0.912,939,0.912,940,0.912,941,0.912,942,0.912,943,0.912,944,0.912,945,0.912,946,0.912,947,0.912,948,2.052,949,2.509,950,0.912,951,2.052,952,0.912,953,0.912,954,0.912,955,0.77,956,0.912,957,0.912,958,0.912,959,1.283,960,0.912,961,1.559,962,1.18,963,1.18,964,0.837,965,1.607,966,2.165,967,1.903,968,1.283,969,0.837,970,0.912,971,0.912,972,0.837,973,0.837,974,1.283,975,0.912,976,1.397,977,0.912,978,0.912,979,0.77,980,0.912,981,0.912,982,0.912,983,1.215,984,0.912,985,0.912,986,0.912,987,0.912,988,0.912,989,0.912,990,0.912,991,0.912,992,0.912,993,0.912,994,0.912,995,0.912,996,0.912,997,0.921,998,1.086,999,1.397,1000,1.086,1001,1.397,1002,1.086,1003,1.283,1004,0.912,1005,1.18,1006,0.912,1007,0.912,1008,1,1009,0.912,1010,2.052,1011,2.052,1012,2.052,1013,1.698,1014,0.912,1015,1.397,1016,1.283,1017,1.397,1018,1.397,1019,1.397,1020,0.912,1021,1.397,1022,0.912,1023,0.912,1024,1.698,1025,1.903,1026,2.052,1027,1.18,1028,0.912,1029,1.698,1030,0.653,1031,0.653,1032,0.912,1033,0.912,1034,0.912,1035,0.912,1036,0.912,1037,0.912,1038,0.912,1039,0.912,1040,1.397,1041,0.912,1042,0.912,1043,0.912,1044,0.912,1045,0.912,1046,0.912,1047,0.912,1048,1.397,1049,1.903,1050,0.837,1051,0.837,1052,0.912,1053,0.912,1054,0.912,1055,1.283,1056,0.912,1057,0.912,1058,0.912,1059,0.912,1060,0.912,1061,1.698,1062,0.912,1063,0.912,1064,0.912,1065,0.912,1066,0.912,1067,0.837,1068,1.397,1069,0.912,1070,0.912,1071,1.397,1072,0.912,1073,0.837,1074,0.912,1075,0.77,1076,1.397,1077,0.912,1078,1.283,1079,0.837,1080,0.508,1081,0.912,1082,0.912,1083,0.77]],["title/components/DashboardComponent.html",[0,0.226,405,0.847]],["body/components/DashboardComponent.html",[0,0.338,1,0.862,2,1.302,3,0.522,4,0.249,5,1.105,6,1.017,7,1.017,8,0.212,10,0.669,11,1.497,12,0.524,13,0.514,14,0.654,15,3.74,16,0.451,17,0.712,21,1.017,22,1.802,23,1.836,24,1.199,25,0.591,26,1.199,27,1.378,30,0.862,32,0.033,33,2.258,34,2.524,36,2.181,37,0.747,38,2.285,39,2.276,40,2.075,43,2.321,44,1.909,45,1.67,46,2.172,47,2.076,50,1.67,51,1.67,52,1.568,53,2.075,54,2.404,55,2.261,59,1.67,60,2.233,61,2.613,62,2.575,63,2.548,64,2.398,65,2.537,66,2.092,67,1.82,68,2.717,69,2.646,70,2.775,71,2.092,72,2.092,73,0.459,75,2.381,76,1.309,77,2.257,78,2.258,79,2.49,80,2.181,81,1.67,84,2.404,86,2.092,87,2.454,88,1.309,91,1.324,92,2.075,93,2.285,100,2.316,104,1.766,105,2.261,108,1.536,116,1.017,122,2.646,125,2.49,129,2.673,131,2.524,141,4.173,142,3.461,143,2.165,146,1.43,148,3.74,158,0.281,159,0.346,168,1.199,169,0.591,184,1.302,186,0.714,187,1.79,189,0.937,190,0.638,191,0.346,192,0.794,193,1.766,198,0.459,199,0.497,205,0.747,206,0.793,218,0.37,220,0.669,227,0.459,239,1.014,247,1.729,253,0.793,254,2.673,257,2.404,258,2.404,267,0.459,268,1.49,269,1.371,279,2.285,285,1.566,287,1.414,288,0.639,291,0.954,293,0.734,294,1.729,300,2.673,306,1.105,308,0.54,311,0.249,312,0.794,314,0.937,322,1.923,326,0.287,327,0.287,331,0.639,343,2.708,363,0.965,388,1.105,389,2.075,390,1.536,394,1.017,395,1.414,396,1.414,397,1.017,398,1.757,399,1.017,400,1.017,401,0.862,402,1.017,403,0.862,404,1.017,405,1.371,406,1.017,407,0.862,408,1.017,409,0.862,410,1.017,411,0.862,412,1.017,413,1.017,414,0.862,415,1.017,416,1.757,417,1.371,418,1.626,419,0.862,420,1.017,421,0.862,422,0.729,423,1.017,424,1.017,425,0.02,426,0.02,428,1.497,429,1.014,433,1.82,435,1.67,437,1.621,446,1.199,457,1.257,463,2.404,477,1.414,490,1.309,514,3.74,546,2.404,549,1.309,561,2.469,562,2.49,564,5.168,566,3.461,569,2.49,573,3.01,579,1.618,580,1.923,587,0.249,590,0.862,603,1.846,604,1.536,615,0.508,633,1.414,656,1.103,707,1.536,708,1.536,709,1.536,733,1.371,907,0.862,910,1.202,997,1.49,1008,1.302,1080,1.513,1084,2.165,1085,3.461,1086,3.46,1087,3.979,1088,3.979,1089,3.979,1090,3.461,1091,3.072,1092,3.979,1093,3.979,1094,3.979,1095,4.3,1096,4.678,1097,4.678,1098,4.678,1099,4.799,1100,4.3,1101,4.3,1102,4.147,1103,3.979,1104,2.983,1105,2.946,1106,1.806,1107,2.983,1108,2.983,1109,2.983,1110,2.983,1111,3.461,1112,2.983,1113,2.983,1114,1.988,1115,3.138,1116,2.983,1117,2.983,1118,4.52,1119,2.673,1120,2.983,1121,3.461,1122,3.49,1123,4.799,1124,3.01,1125,4.376,1126,2.854,1127,3.01,1128,4.173,1129,3.01,1130,2.983,1131,4.52,1132,4.799,1133,3.01,1134,2.983,1135,2.983,1136,3.01,1137,2.983,1138,2.983,1139,3.461,1140,1.309,1141,2.49,1142,1.923,1143,1.923,1144,1.923,1145,3.461,1146,2.165,1147,2.49,1148,2.49,1149,2.49,1150,2.49,1151,1.43,1152,2.165,1153,1.988,1154,2.165,1155,2.165,1156,1.923,1157,2.49,1158,2.49,1159,2.49,1160,2.49,1161,2.49,1162,2.49,1163,1.923,1164,2.49,1165,3.461,1166,2.49,1167,2.165,1168,1.729,1169,2.49,1170,2.165,1171,3.01,1172,2.165,1173,2.165,1174,2.165,1175,3.74,1176,2.165,1177,2.165,1178,2.165,1179,2.165,1180,2.165,1181,2.49,1182,2.165,1183,1.105,1184,2.165,1185,2.165,1186,2.165,1187,2.49,1188,3.461,1189,4.147,1190,4.147,1191,4.147,1192,3.461,1193,3.01,1194,2.673,1195,3.46,1196,2.49,1197,4.894,1198,1.568,1199,3.613,1200,2.18,1201,1.923,1202,4.147,1203,3.979,1204,5.23,1205,4.52,1206,2.983,1207,2.983,1208,5.414,1209,1.568,1210,2.983,1211,5.152,1212,4.147,1213,2.49,1214,2.49,1215,2.708,1216,2.983,1217,2.708,1218,2.18,1219,2.983,1220,4.147,1221,4.147,1222,2.983,1223,4.147,1224,1.568,1225,2.983,1226,2.983,1227,2.49,1228,4.147,1229,2.983,1230,2.983,1231,2.983,1232,2.983,1233,2.983,1234,2.983,1235,2.983,1236,2.983,1237,2.983]],["title/interfaces/Especialidad.html",[472,0.779,587,0.266]],["body/interfaces/Especialidad.html",[3,0.201,4,0.174,8,0.227,10,0.583,12,0.62,13,0.259,14,0.609,16,0.423,17,0.637,18,0.556,25,0.699,32,0.033,37,0.798,73,0.91,91,1.146,123,1.187,145,1.965,155,1.09,156,1.09,157,0.712,158,0.123,159,0.267,169,0.726,186,0.289,190,0.396,191,0.267,198,0.598,199,0.391,203,0.511,205,0.539,206,0.918,210,1.063,218,0.732,220,0.565,224,2.112,227,0.67,228,1.725,231,1.247,239,0.511,242,1.033,253,0.598,267,0.322,281,1.247,284,0.962,288,0.792,291,0.98,293,0.67,295,1.1,298,0.85,304,0.598,308,0.374,311,0.174,325,2.147,326,0.524,327,0.201,331,0.99,337,0.875,344,0.656,363,1.096,367,1.365,369,1.324,370,0.656,372,2.381,378,0.656,379,0.598,425,0.016,426,0.016,428,0.656,429,0.511,431,0.656,437,0.604,439,0.774,441,0.656,446,1.122,448,0.841,451,1.004,453,0.924,454,1.965,455,1.743,457,0.87,461,1.219,465,1.122,471,1.563,472,1.457,475,1.287,477,1.09,484,1.693,492,0.604,493,0.841,515,0.712,519,0.841,522,0.841,523,0.841,529,1.287,536,1.563,540,0.774,550,0.774,565,1.487,579,1.937,587,0.442,588,0.656,589,0.774,590,1.572,591,2.235,592,1.703,593,2.056,594,2.056,595,0.924,596,1.402,597,1.287,598,2.055,599,0.774,600,1.402,601,0.916,602,0.604,603,0.712,604,0.774,605,0.712,606,0.916,607,0.916,608,0.916,609,0.916,610,0.916,611,0.916,612,0.916,613,0.712,614,0.916,615,1.014,616,0.916,617,0.916,618,0.916,619,0.916,620,0.916,621,0.916,622,0.916,623,0.916,624,0.916,625,0.916,626,0.916,627,0.916,628,0.916,629,0.916,630,0.916,631,0.916,632,0.916,633,1.754,634,0.916,635,0.916,636,0.916,637,0.916,638,0.916,639,1.563,640,0.916,641,0.916,642,1.402,643,2.328,644,0.916,645,0.916,646,0.916,647,0.916,648,2.512,649,2.328,650,2.137,651,2.386,652,2.512,653,2.594,654,2.594,655,2.257,656,1.674,657,2.754,658,1.847,659,1.847,660,2.036,661,1.844,662,1.856,663,1.937,664,1.898,665,2.257,666,2.257,667,0.916,668,2.594,669,2.401,670,2.401,671,2.401,672,2.386,673,2.235,674,2.235,675,2.449,676,2.137,677,1.402,678,0.916,679,1.438,680,1.184,681,1.703,682,1.429,683,1.402,684,1.703,685,0.916,686,1.703,687,0.916,688,0.916,689,1.908,690,0.916,691,2.386,692,2.476,693,0.916,694,0.916,695,0.916,696,1.908,697,0.916,698,1.703,699,0.916,700,1.402,701,0.916,702,0.916,703,1.402,704,1.402,705,0.916,706,1.703,707,1.438,708,1.438,709,1.438,710,0.916,711,0.916,712,0.841,713,0.916,714,2.762,715,2.829,716,0.916,717,0.916,718,0.916,719,0.916,720,0.916,721,0.916,722,0.916,723,0.916,724,2.682,725,0.916,726,0.916,727,2.435,728,0.916,729,0.916,730,0.916,731,0.916,732,0.916,733,1.368,734,0.916,735,0.916,736,0.916,737,0.916,738,0.916,739,1.965,740,0.916,741,0.916,742,0.916,743,0.916,744,0.916,745,2.056,746,0.916,747,0.916,748,0.916,749,0.916,750,0.916,751,1.402,752,0.916,753,0.916,754,0.916,755,0.916,756,0.916,757,0.916,758,0.916,759,0.916,760,0.916,761,0.916,762,0.916,763,0.916,764,0.916,765,0.916,766,0.916,767,0.916,768,0.916,769,0.916,770,0.916,771,0.916,772,0.916,773,0.916,774,0.916,775,0.916,776,0.916,777,0.916,778,0.916,779,0.916,780,0.916,781,0.916,782,0.916,783,1.402,784,0.841,785,2.056,786,2.056,787,0.916,788,0.916,789,0.916,790,0.916,791,0.916,792,0.916,793,0.916,794,0.916,795,0.916,796,1.888,797,2.056,798,0.916,799,0.916,800,0.916,801,0.916,802,0.916,803,0.916,804,0.916,805,0.916,806,0.841,807,0.916,808,0.916,809,0.916,810,0.916,811,0.916,812,0.916,813,0.916,814,0.916,815,0.916,816,0.916,817,0.916,818,0.916,819,0.916,820,0.916,821,0.916,822,0.916,823,0.916,824,0.916,825,0.916,826,0.916,827,2.127,828,0.916,829,0.916,830,0.916,831,0.916,832,0.916,833,0.916,834,0.916,835,0.916,836,0.916,837,1.287,838,0.916,839,0.916,840,0.916,841,0.916,842,0.916,843,0.916,844,0.916,845,0.916,846,0.916,847,0.916,848,0.916,849,0.916,850,0.916,851,0.916,852,0.916,853,0.916,854,0.916,855,0.916,856,0.916,857,0.916,858,0.916,859,0.916,860,0.916,861,0.916,862,0.916,863,0.916,864,0.916,865,0.916,866,0.916,867,0.916,868,0.916,869,0.916,870,0.916,871,0.916,872,0.916,873,0.916,874,0.916,875,2.169,876,0.916,877,0.916,878,0.916,879,0.916,880,2.169,881,0.916,882,2.495,883,0.916,884,2.072,885,2.273,886,1.402,887,2.056,888,1.703,889,1.402,890,1.703,891,1.908,892,0.916,893,1.703,894,1.703,895,0.916,896,2.257,897,1.703,898,1.004,899,0.916,900,0.916,901,2.056,902,0.916,903,0.916,904,0.916,905,2.328,906,1.908,907,1.534,908,0.916,909,0.916,910,0.841,911,0.916,912,2.543,913,2.512,914,0.916,915,2.728,916,0.916,917,1.909,918,2.257,919,2.056,920,2.169,921,2.056,922,2.056,923,2.667,924,0.916,925,2.257,926,2.169,927,2.169,928,2.169,929,1.908,930,0.916,931,2.257,932,1.908,933,1.703,934,1.703,935,1.402,936,0.916,937,0.916,938,0.916,939,0.916,940,0.916,941,0.916,942,0.916,943,0.916,944,0.916,945,0.916,946,0.916,947,0.916,948,2.056,949,2.512,950,0.916,951,2.056,952,0.916,953,0.916,954,0.916,955,0.774,956,0.916,957,0.916,958,0.916,959,1.287,960,0.916,961,1.563,962,1.184,963,1.184,964,0.841,965,1.611,966,2.169,967,1.908,968,1.287,969,0.841,970,0.916,971,0.916,972,0.841,973,0.841,974,1.287,975,0.916,976,1.402,977,0.916,978,0.916,979,0.774,980,0.916,981,0.916,982,0.916,983,1.219,984,0.916,985,0.916,986,0.916,987,0.916,988,0.916,989,0.916,990,0.916,991,0.916,992,0.916,993,0.916,994,0.916,995,0.916,996,0.916,997,0.924,998,1.09,999,1.402,1000,1.09,1001,1.402,1002,1.09,1003,1.287,1004,0.916,1005,1.184,1006,0.916,1007,0.916,1008,1.004,1009,0.916,1010,2.056,1011,2.056,1012,2.056,1013,1.703,1014,0.916,1015,1.402,1016,1.287,1017,1.402,1018,1.402,1019,1.402,1020,0.916,1021,1.402,1022,0.916,1023,0.916,1024,1.703,1025,1.908,1026,2.056,1027,1.184,1028,0.916,1029,1.703,1030,0.656,1031,0.656,1032,0.916,1033,0.916,1034,0.916,1035,0.916,1036,0.916,1037,0.916,1038,0.916,1039,0.916,1040,1.402,1041,0.916,1042,0.916,1043,0.916,1044,0.916,1045,0.916,1046,0.916,1047,0.916,1048,1.402,1049,1.908,1050,0.841,1051,0.841,1052,0.916,1053,0.916,1054,0.916,1055,1.287,1056,0.916,1057,0.916,1058,0.916,1059,0.916,1060,0.916,1061,1.703,1062,0.916,1063,0.916,1064,0.916,1065,0.916,1066,0.916,1067,0.841,1068,1.402,1069,0.916,1070,0.916,1071,1.402,1072,0.916,1073,0.841,1074,0.916,1075,0.774,1076,1.402,1077,0.916,1078,1.287,1079,0.841,1080,0.511,1081,0.916,1082,0.916,1083,0.774]],["title/interfaces/Funcionario.html",[123,0.596,587,0.266]],["body/interfaces/Funcionario.html",[3,0.199,4,0.172,8,0.225,10,0.581,12,0.618,13,0.256,14,0.608,16,0.422,17,0.635,18,0.55,25,0.697,32,0.033,37,0.797,73,0.909,91,1.14,123,1.191,145,1.958,155,1.081,156,1.081,157,0.705,158,0.122,159,0.264,169,0.724,186,0.286,190,0.393,191,0.452,192,0.843,198,0.594,199,0.389,203,0.505,205,0.536,206,0.916,210,0.942,218,0.737,220,0.581,224,2.124,227,0.666,228,1.723,231,1.241,239,0.505,242,1.026,253,0.594,267,0.318,281,1.241,284,0.957,288,0.789,291,0.997,293,0.666,295,1.099,298,0.843,304,0.593,308,0.371,311,0.172,325,2.142,326,0.522,327,0.199,331,0.989,337,0.872,344,0.649,363,1.094,367,1.358,369,1.315,370,0.65,372,2.376,378,0.65,379,0.594,425,0.016,426,0.016,428,0.649,429,0.505,431,0.649,437,0.597,439,0.765,441,0.649,446,1.115,448,0.832,451,0.995,453,0.916,454,1.958,455,1.738,457,0.865,461,1.211,465,1.115,471,1.553,472,1.465,475,1.277,477,1.315,484,1.69,492,0.597,493,0.832,515,0.705,519,0.832,522,0.832,523,0.832,529,1.277,536,1.553,540,0.765,550,0.765,565,1.481,579,1.934,587,0.441,588,0.649,589,0.765,590,1.567,591,2.229,592,1.391,593,2.046,594,2.046,595,0.916,596,1.391,597,1.277,598,2.05,599,0.765,600,1.391,601,0.907,602,0.597,603,0.705,604,0.765,605,0.705,606,0.907,607,0.907,608,0.907,609,0.907,610,0.907,611,0.907,612,0.907,613,0.705,614,0.907,615,1.012,616,0.907,617,0.907,618,0.907,619,0.907,620,0.907,621,0.907,622,0.907,623,0.907,624,0.907,625,0.907,626,0.907,627,0.907,628,0.907,629,0.907,630,0.907,631,0.907,632,0.907,633,1.747,634,0.907,635,0.907,636,0.907,637,0.907,638,0.907,639,1.553,640,0.907,641,0.907,642,1.391,643,2.32,644,0.907,645,0.907,646,0.907,647,0.907,648,2.506,649,2.32,650,2.129,651,2.378,652,2.506,653,2.589,654,2.589,655,2.248,656,1.657,657,2.751,658,1.855,659,1.855,660,2.04,661,1.852,662,1.862,663,1.956,664,1.926,665,2.248,666,2.248,667,0.907,668,2.589,669,2.396,670,2.396,671,2.396,672,2.378,673,2.229,674,2.229,675,2.445,676,2.129,677,1.391,678,0.907,679,1.428,680,1.174,681,1.692,682,1.423,683,1.391,684,1.692,685,0.907,686,1.692,687,0.907,688,0.907,689,1.897,690,0.907,691,2.378,692,2.47,693,0.907,694,0.907,695,0.907,696,1.897,697,0.907,698,1.692,699,0.907,700,1.391,701,0.907,702,0.907,703,1.391,704,1.391,705,0.907,706,1.692,707,1.428,708,1.428,709,1.428,710,0.907,711,0.907,712,0.832,713,0.907,714,2.758,715,2.826,716,0.907,717,0.907,718,0.907,719,0.907,720,0.907,721,0.907,722,0.907,723,0.907,724,2.677,725,0.907,726,0.907,727,2.428,728,0.907,729,0.907,730,0.907,731,0.907,732,0.907,733,1.363,734,0.907,735,0.907,736,0.907,737,0.907,738,0.907,739,1.958,740,0.907,741,0.907,742,0.907,743,0.907,744,0.907,745,2.046,746,0.907,747,0.907,748,0.907,749,0.907,750,0.907,751,1.391,752,0.907,753,0.907,754,0.907,755,0.907,756,0.907,757,0.907,758,0.907,759,0.907,760,0.907,761,0.907,762,0.907,763,0.907,764,0.907,765,0.907,766,0.907,767,0.907,768,0.907,769,0.907,770,0.907,771,0.907,772,0.907,773,0.907,774,0.907,775,0.907,776,0.907,777,0.907,778,0.907,779,0.907,780,0.907,781,0.907,782,0.907,783,1.391,784,0.832,785,2.046,786,2.046,787,0.907,788,0.907,789,0.907,790,0.907,791,0.907,792,0.907,793,0.907,794,0.907,795,0.907,796,1.878,797,2.046,798,0.907,799,0.907,800,0.907,801,0.907,802,0.907,803,0.907,804,0.907,805,0.907,806,0.832,807,0.907,808,0.907,809,0.907,810,0.907,811,0.907,812,0.907,813,0.907,814,0.907,815,0.907,816,0.907,817,0.907,818,0.907,819,0.907,820,0.907,821,0.907,822,0.907,823,0.907,824,0.907,825,0.907,826,0.907,827,2.124,828,0.907,829,0.907,830,0.907,831,0.907,832,0.907,833,0.907,834,0.907,835,0.907,836,0.907,837,1.277,838,0.907,839,0.907,840,0.907,841,0.907,842,0.907,843,0.907,844,0.907,845,0.907,846,0.907,847,0.907,848,0.907,849,0.907,850,0.907,851,0.907,852,0.907,853,0.907,854,0.907,855,0.907,856,0.907,857,0.907,858,0.907,859,0.907,860,0.907,861,0.907,862,0.907,863,0.907,864,0.907,865,0.907,866,0.907,867,0.907,868,0.907,869,0.907,870,0.907,871,0.907,872,0.907,873,0.907,874,0.907,875,2.159,876,0.907,877,0.907,878,0.907,879,0.907,880,2.159,881,0.907,882,2.491,883,0.907,884,2.064,885,2.267,886,1.391,887,2.046,888,1.692,889,1.391,890,1.692,891,1.897,892,0.907,893,1.692,894,1.692,895,0.907,896,2.248,897,1.692,898,0.995,899,0.907,900,0.907,901,2.046,902,0.907,903,0.907,904,0.907,905,2.32,906,1.897,907,1.529,908,0.907,909,0.907,910,0.832,911,0.907,912,2.537,913,2.506,914,0.907,915,2.724,916,0.907,917,1.906,918,2.248,919,2.046,920,2.159,921,2.046,922,2.046,923,2.663,924,0.907,925,2.248,926,2.159,927,2.159,928,2.159,929,1.897,930,0.907,931,2.248,932,1.897,933,1.692,934,1.692,935,1.391,936,0.907,937,0.907,938,0.907,939,0.907,940,0.907,941,0.907,942,0.907,943,0.907,944,0.907,945,0.907,946,0.907,947,0.907,948,2.046,949,2.506,950,0.907,951,2.046,952,0.907,953,0.907,954,0.907,955,0.765,956,0.907,957,0.907,958,0.907,959,1.277,960,0.907,961,1.553,962,1.174,963,1.174,964,0.832,965,1.602,966,2.159,967,1.897,968,1.277,969,0.832,970,0.907,971,0.907,972,0.832,973,0.832,974,1.277,975,0.907,976,1.391,977,0.907,978,0.907,979,0.765,980,0.907,981,0.907,982,0.907,983,1.211,984,0.907,985,0.907,986,0.907,987,0.907,988,0.907,989,0.907,990,0.907,991,0.907,992,0.907,993,0.907,994,0.907,995,0.907,996,0.907,997,0.916,998,1.081,999,1.391,1000,1.081,1001,1.391,1002,1.081,1003,1.277,1004,0.907,1005,1.174,1006,0.907,1007,0.907,1008,0.995,1009,0.907,1010,2.046,1011,2.046,1012,2.046,1013,1.692,1014,0.907,1015,1.391,1016,1.277,1017,1.391,1018,1.391,1019,1.391,1020,0.907,1021,1.391,1022,0.907,1023,0.907,1024,1.692,1025,1.897,1026,2.046,1027,1.174,1028,0.907,1029,1.692,1030,0.649,1031,0.649,1032,0.907,1033,0.907,1034,0.907,1035,0.907,1036,0.907,1037,0.907,1038,0.907,1039,0.907,1040,1.391,1041,0.907,1042,0.907,1043,0.907,1044,0.907,1045,0.907,1046,0.907,1047,0.907,1048,1.391,1049,1.897,1050,0.832,1051,0.832,1052,0.907,1053,0.907,1054,0.907,1055,1.277,1056,0.907,1057,0.907,1058,0.907,1059,0.907,1060,0.907,1061,1.692,1062,0.907,1063,0.907,1064,0.907,1065,0.907,1066,0.907,1067,0.832,1068,1.391,1069,0.907,1070,0.907,1071,1.391,1072,0.907,1073,0.832,1074,0.907,1075,0.765,1076,1.391,1077,0.907,1078,1.277,1079,0.832,1080,0.505,1081,0.907,1082,0.907,1083,0.765]],["title/interfaces/FuncionarioWithAvailability.html",[587,0.266,1238,2.312]],["body/interfaces/FuncionarioWithAvailability.html",[0,0.336,3,0.35,4,0.303,8,0.258,10,0.681,11,1.488,12,0.636,13,0.587,14,0.674,16,0.465,17,0.45,18,1.541,19,1.346,20,2.271,22,1.051,23,1.051,24,1.051,25,0.736,26,1.051,27,1.37,28,2.49,29,3.954,32,0.033,37,0.587,73,0.812,99,1.908,123,1.207,141,2.638,149,2.107,150,2.638,158,0.214,159,0.395,160,3.034,161,4.399,162,2.638,163,3.954,164,2.638,166,3.034,169,0.587,170,3.034,180,3.034,186,0.504,191,0.303,192,1.26,198,0.73,199,0.529,200,3.034,203,0.888,204,3.954,209,3.034,212,4.834,214,3.599,215,3.034,217,3.034,218,0.768,219,2.77,220,0.652,221,3.034,222,3.034,224,1.239,227,0.945,228,1.26,231,1.402,238,2.746,239,0.888,240,3.034,248,2.638,249,3.053,250,2.638,252,2.638,253,0.892,254,2.343,255,4.053,257,2.107,258,2.107,259,2.638,261,2.746,262,2.638,263,3.954,264,3.034,266,3.034,267,0.812,270,3.034,271,3.954,272,3.954,273,3.954,274,3.034,275,3.954,277,2.638,279,2.526,281,0.967,284,1.146,285,1.675,287,2.025,288,0.945,289,1.742,290,3.034,291,0.73,293,0.73,295,1.079,300,2.343,304,0.68,305,2.343,306,1.952,307,2.526,308,0.603,309,3.034,310,3.034,311,0.303,312,0.967,313,1.346,314,1.141,315,3.954,316,2.638,317,2.638,318,2.638,319,2.638,320,2.638,323,1.346,326,0.35,327,0.35,328,3.599,329,3.439,330,3.034,331,0.931,332,3.034,333,3.954,334,2.638,335,2.638,337,0.95,338,4.053,340,2.343,341,3.034,343,2.77,344,1.865,345,3.034,346,3.954,347,3.034,348,3.034,349,3.034,350,3.034,351,3.034,352,1.91,353,3.034,355,3.954,356,3.034,363,0.987,369,1.797,370,0.746,378,0.746,379,0.86,383,4.661,388,1.755,389,1.464,390,1.952,391,3.034,392,3.034,403,1.051,425,0.023,426,0.023,433,1.595,435,1.464,437,1.37,446,1.717,457,0.815,461,1.141,463,2.107,467,3.053,470,2.45,484,1.833,503,3.034,504,3.034,552,2.343,554,2.638,585,2.343,586,3.034,587,0.303,588,1.141,590,1.37,615,0.619,660,1.926,679,1.346,680,1.755,796,1.908,917,1.655,955,1.346,959,1.464,979,1.346,983,1.141,1000,1.239,1002,1.239,1027,1.755,1050,1.464,1051,1.464,1080,0.888,1106,1.141,1114,1.742,1140,1.595,1153,2.271,1156,2.343,1183,1.346,1238,4.053,1239,3.034,1240,4.737,1241,4.399,1242,4.737,1243,5.938,1244,4.737,1245,4.737,1246,5.584,1247,4.737,1248,3.634,1249,3.634,1250,3.439,1251,3.034,1252,4.737,1253,3.634,1254,2.746,1255,2.107,1256,3.825,1257,2.638,1258,2.343,1259,3.034,1260,3.634,1261,4.737,1262,3.634,1263,5.27,1264,3.634,1265,5.584,1266,3.634,1267,3.634,1268,3.634,1269,3.634,1270,3.634,1271,3.634,1272,3.634,1273,4.737,1274,3.634,1275,2.343,1276,2.343,1277,2.343,1278,2.343,1279,2.638,1280,2.638,1281,2.638,1282,2.638,1283,2.638,1284,3.053,1285,2.343,1286,2.343,1287,2.343,1288,2.638,1289,3.034,1290,1.91,1291,3.634,1292,3.034,1293,4.399,1294,3.055,1295,3.397,1296,3.634,1297,3.634,1298,5.791,1299,2.638,1300,3.034,1301,3.439,1302,3.634,1303,3.634,1304,3.634,1305,3.634,1306,3.634,1307,2.343,1308,3.634,1309,3.634,1310,2.638,1311,3.634,1312,3.634,1313,3.634,1314,3.634]],["title/components/FuncionariosComponent.html",[0,0.226,407,0.921]],["body/components/FuncionariosComponent.html",[0,0.297,1,0.682,2,1.1,3,0.227,4,0.197,5,1.548,6,0.805,7,0.805,8,0.167,10,0.646,11,1.452,12,0.569,13,0.573,14,0.605,16,0.458,17,0.518,18,1.691,19,1.298,20,2.003,21,0.805,22,1.733,23,1.733,24,1.013,25,0.664,26,1.013,27,1.208,28,2.196,30,0.682,31,2.422,32,0.033,33,2.085,34,2.266,35,3.033,36,2.514,37,0.736,38,2.003,39,2.281,40,2.266,41,4.082,42,3.757,43,2.281,44,2.084,45,2.48,46,2.383,47,2.238,48,1.834,49,2.368,50,2.266,51,2.085,52,2.721,53,2.085,54,3.001,55,1.834,59,2.266,60,2.238,61,1.834,62,2.48,63,2.514,64,2.085,65,2.085,66,1.834,67,1.834,68,1.834,69,1.834,70,1.834,71,2.468,72,2.272,75,2.394,77,2.238,78,2.266,80,2.085,81,2.085,86,2.702,87,1.683,88,2.272,89,2.422,90,1.834,92,2.085,99,2.085,100,1.683,101,2.696,102,2.696,103,2.818,104,2.238,105,1.834,108,1.918,114,3.033,115,3.09,116,1.877,117,2.721,121,2.956,122,2.58,123,1.223,124,3.033,126,3.033,127,2.196,128,3.488,129,2.693,131,1.683,150,4.082,155,1.577,156,1.577,157,1.425,158,0.139,159,0.292,162,3.357,164,3.357,168,1.013,169,0.434,176,2.431,178,3.86,179,2.924,184,1.1,186,0.641,187,1.805,189,1.552,190,0.664,191,0.495,192,1.314,193,1.548,198,0.712,199,0.5,203,0.856,205,0.728,206,0.797,210,1.31,218,0.736,220,0.629,224,1.425,227,0.363,228,1.314,229,3.89,233,1.841,234,2.956,235,2.68,238,2.031,242,0.932,246,2.924,247,2.864,248,3.357,249,3.337,250,2.543,252,2.543,253,0.761,255,2.543,261,2.031,267,0.712,268,1.655,269,1.523,279,2.481,281,0.932,283,1.368,284,0.949,285,1.7,287,1.765,288,0.881,289,2.368,291,0.923,293,0.848,295,0.841,298,1.112,302,3.86,304,0.782,306,1.713,308,0.446,311,0.197,312,0.628,313,0.874,314,0.741,323,0.874,326,0.227,327,0.227,328,1.521,329,2.543,331,0.825,334,1.713,335,1.713,337,0.787,338,3.357,352,2.196,357,1.713,360,2.196,363,1.072,367,0.741,368,1.131,370,0.719,378,0.719,379,0.943,386,3.757,388,0.874,389,0.95,393,1.969,394,0.805,395,1.195,396,1.195,397,0.805,398,1.577,399,0.805,400,0.805,401,0.682,402,0.805,403,0.682,404,0.805,405,0.628,406,0.805,407,1.337,408,0.805,409,0.682,410,0.805,411,0.682,412,0.805,413,0.805,414,0.682,415,0.805,416,1.577,417,0.628,418,0.805,419,0.682,420,0.805,421,0.682,422,0.577,423,0.805,424,0.805,425,0.017,426,0.017,441,1.729,455,0.741,467,2.258,470,2.511,472,1.477,494,2.981,498,1.521,499,1.521,501,1.969,517,1.713,549,1.834,565,1.208,583,2.196,584,3.757,585,3.337,602,1.013,656,1.465,658,1.429,659,1.429,661,1.208,662,1.208,663,1.1,664,1.626,898,1.1,962,1.713,963,1.713,965,0.874,997,1.337,998,1.195,1008,1.626,1030,1.1,1031,1.1,1126,2.003,1151,1.131,1155,1.713,1156,2.258,1209,2.196,1215,2.196,1217,2.721,1218,2.721,1224,2.196,1250,3.357,1254,3.001,1255,2.422,1256,3.357,1257,3.033,1258,3.337,1259,4.321,1290,1.24,1294,2.68,1295,2.693,1299,3.357,1300,3.488,1307,2.258,1310,2.543,1315,1.969,1316,2.422,1317,3.729,1318,3.569,1319,2.693,1320,3.488,1321,2.003,1322,3.033,1323,3.26,1324,3.757,1325,3.033,1326,2.422,1327,4.179,1328,2.924,1329,2.924,1330,2.693,1331,2.693,1332,2.924,1333,2.981,1334,2.924,1335,3.033,1336,3.503,1337,2.693,1338,2.924,1339,2.693,1340,3.001,1341,3.033,1342,3.033,1343,4.179,1344,4.624,1345,2.258,1346,3.503,1347,2.258,1348,2.981,1349,3.86,1350,1.368,1351,2.68,1352,3.503,1353,2.031,1354,2.359,1355,3.503,1356,2.258,1357,2.359,1358,3.743,1359,3.185,1360,2.543,1361,1.841,1362,3.503,1363,2.359,1364,2.258,1365,2.359,1366,3.107,1367,2.258,1368,2.258,1369,2.543,1370,2.359,1371,2.359,1372,2.359,1373,2.543,1374,2.359,1375,2.359,1376,2.359,1377,2.359,1378,2.359,1379,2.422,1380,2.359,1381,2.258,1382,2.359,1383,3.503,1384,2.258,1385,2.258,1386,2.359,1387,2.359,1388,2.359,1389,2.359,1390,2.359,1391,1.368,1392,1.521,1393,2.359,1394,1.368,1395,3.001,1396,2.258,1397,1.521,1398,2.359,1399,1.969,1400,2.359,1401,2.359,1402,2.359,1403,2.359,1404,2.359,1405,2.359,1406,2.359,1407,2.359,1408,2.359,1409,2.359,1410,2.359,1411,2.359,1412,2.359,1413,2.258,1414,3.503,1415,1.521,1416,1.521,1417,1.521,1418,2.258,1419,1.713,1420,1.713,1421,1.713,1422,1.368,1423,1.713,1424,1.521,1425,1.713,1426,1.713,1427,2.258,1428,2.359,1429,2.359,1430,2.359,1431,2.359,1432,1.713,1433,1.713,1434,2.031,1435,2.031,1436,2.359,1437,2.359,1438,1.969,1439,2.359,1440,1.969,1441,2.359,1442,2.924,1443,1.368,1444,1.969,1445,1.969,1446,1.969,1447,1.969,1448,1.969,1449,2.359,1450,2.359,1451,1.521,1452,2.359,1453,1.969,1454,1.969,1455,1.969,1456,1.969,1457,2.359,1458,1.969]],["title/components/InscripcionComponent.html",[0,0.226,409,0.921]],["body/components/InscripcionComponent.html",[0,0.311,1,0.74,2,1.168,3,0.247,4,0.213,5,0.948,6,0.873,7,0.873,8,0.182,10,0.662,11,1.674,12,0.631,13,0.596,14,0.409,16,0.456,17,0.596,19,1.378,20,2.1,21,0.873,22,1.758,23,1.758,24,1.075,25,0.732,26,1.075,27,1.267,28,2.303,30,0.74,31,2.156,32,0.033,33,1.498,34,1.765,36,2.35,37,0.775,38,1.227,39,2.128,40,2.269,41,4.169,42,2.7,43,2.283,44,1.781,45,1.937,46,2.317,47,2.128,48,1.632,49,1.937,50,2.058,51,1.765,52,1.955,53,1.498,54,2.156,55,2.241,59,2.058,60,2.087,62,1.937,63,2.215,64,1.031,65,1.031,71,2.241,72,2.11,73,0.91,74,1.955,75,2.368,76,1.632,77,2.087,78,1.765,80,2.058,81,2.058,86,2.472,87,2.058,88,1.922,89,1.484,92,1.498,99,1.765,100,1.031,101,2.305,102,2.305,103,2.305,104,2.037,105,2.241,106,1.65,107,1.65,108,1.378,109,1.484,110,1.65,111,1.65,112,1.65,113,1.345,115,2.303,116,1.494,117,1.955,121,2.303,122,2.11,131,1.031,146,1.227,149,2.156,158,0.151,159,0.31,168,1.075,169,0.543,176,2.527,184,1.51,186,0.667,187,1.801,189,1.674,190,0.698,191,0.479,192,1.418,193,1.781,198,0.573,199,0.537,203,0.909,205,0.764,206,0.787,210,0.909,211,3.49,218,0.747,219,1.955,220,0.681,227,0.394,233,1.955,234,3.066,235,2.156,238,1.484,242,0.989,247,1.484,249,2.397,253,0.821,261,2.156,267,0.787,268,1.541,269,1.359,281,0.989,283,1.484,284,1.156,285,1.744,287,1.817,288,0.929,289,2.636,291,0.967,293,0.91,295,0.869,304,0.479,306,1.974,308,0.513,311,0.213,312,0.681,313,0.948,314,0.804,323,0.948,326,0.247,327,0.247,331,0.954,337,0.959,343,2.527,352,1.345,360,1.955,363,1.188,367,0.804,368,1.227,370,0.525,378,0.525,379,0.929,381,2.137,388,0.948,394,0.873,395,1.268,396,1.268,397,0.873,398,1.64,399,0.873,400,0.873,401,0.74,402,0.873,403,0.74,404,0.873,405,0.681,406,0.873,407,0.74,408,0.873,409,1.39,410,0.873,411,0.74,412,0.873,413,0.873,414,0.74,415,0.873,416,1.64,417,0.681,418,0.873,419,0.74,420,0.873,421,0.74,422,0.626,423,0.873,424,0.873,425,0.018,426,0.018,433,1.632,435,1.498,446,1.541,453,1.59,454,1.378,455,1.727,470,2.472,484,1.816,546,2.787,549,1.632,552,1.65,554,1.858,565,0.74,583,1.345,602,0.74,656,1.279,658,1.477,659,1.477,660,2.055,661,1.075,662,1.629,669,1.031,670,1.031,671,1.031,733,0.989,827,1.494,898,1.168,917,1.51,974,1.498,983,1.674,997,1.075,1000,1.268,1002,1.268,1003,1.031,1005,1.623,1008,1.168,1030,1.168,1031,1.51,1075,0.948,1080,1.303,1106,1.769,1124,3.18,1126,1.227,1127,2.7,1140,1.123,1151,2.1,1183,1.623,1209,1.345,1213,2.137,1215,1.345,1217,1.955,1218,1.955,1224,1.345,1250,3.708,1251,3.657,1254,3.089,1255,2.539,1256,2.7,1257,3.18,1275,3.292,1276,3.099,1277,3.099,1278,2.397,1279,1.858,1280,1.858,1281,3.868,1282,1.858,1283,1.858,1284,2.824,1285,2.824,1286,2.397,1287,2.824,1288,1.858,1289,3.105,1290,1.345,1292,4.014,1293,3.105,1294,2.961,1299,3.18,1301,2.7,1307,1.65,1310,1.858,1316,2.539,1317,3.496,1318,3.266,1319,1.65,1320,2.137,1321,2.753,1322,1.858,1323,2.539,1325,1.858,1326,1.484,1330,3.099,1331,3.099,1333,3.292,1339,2.397,1340,2.961,1341,2.7,1342,2.7,1345,2.397,1347,2.397,1348,3.099,1349,4.014,1350,1.484,1351,2.787,1353,2.539,1356,2.397,1358,3.81,1359,3.099,1360,2.7,1361,1.955,1364,2.397,1366,3.55,1367,2.397,1368,2.397,1369,2.7,1373,2.7,1379,2.539,1381,2.397,1384,2.397,1385,2.397,1391,1.484,1394,1.484,1395,3.266,1396,2.397,1397,1.65,1413,2.397,1415,1.65,1416,1.65,1417,1.65,1418,3.292,1419,1.858,1420,1.858,1421,1.858,1422,1.484,1423,1.858,1424,1.65,1425,1.858,1426,1.858,1427,3.099,1432,1.858,1433,1.858,1434,2.156,1435,2.156,1442,2.137,1443,1.484,1451,1.65,1459,2.137,1460,2.397,1461,3.18,1462,3.18,1463,4.381,1464,3.719,1465,4.381,1466,4.014,1467,3.719,1468,2.7,1469,4.014,1470,3.105,1471,3.719,1472,2.156,1473,2.56,1474,3.105,1475,3.105,1476,4.014,1477,4.264,1478,4.014,1479,2.7,1480,4.014,1481,3.719,1482,2.56,1483,3.719,1484,3.719,1485,2.56,1486,2.56,1487,2.56,1488,2.56,1489,3.719,1490,2.56,1491,2.56,1492,2.56,1493,4.014,1494,2.56,1495,3.105,1496,2.56,1497,3.105,1498,3.18,1499,2.56,1500,2.56,1501,2.56,1502,2.56,1503,2.56,1504,3.657,1505,1.65,1506,1.65,1507,4.014,1508,2.137,1509,2.56,1510,2.56,1511,2.137,1512,1.858,1513,1.858,1514,2.137,1515,3.105,1516,4.381,1517,3.719,1518,4.381,1519,3.719,1520,3.105,1521,3.105,1522,2.56,1523,3.105,1524,3.719,1525,2.137,1526,2.56,1527,3.719,1528,2.56,1529,3.719,1530,2.56,1531,2.56,1532,2.56,1533,2.56,1534,2.137,1535,3.105,1536,2.137,1537,2.137,1538,3.657,1539,4.264,1540,2.137,1541,2.137,1542,3.657,1543,4.264,1544,1.65,1545,2.137,1546,2.137,1547,2.56,1548,2.56,1549,2.56,1550,5.108,1551,2.56,1552,2.56,1553,2.56,1554,2.56,1555,2.56,1556,2.56,1557,2.56,1558,2.137,1559,2.56,1560,2.56,1561,2.56,1562,2.56,1563,2.137,1564,2.137,1565,2.137,1566,3.105,1567,2.137,1568,2.137,1569,2.137,1570,2.137,1571,2.137,1572,2.137,1573,2.137,1574,2.137,1575,2.56,1576,3.49,1577,4.014,1578,4.809,1579,3.49,1580,5.329,1581,3.719,1582,3.719,1583,3.105,1584,4.809,1585,2.56,1586,5.329,1587,3.105,1588,2.137,1589,4.809,1590,2.56,1591,2.56,1592,2.56,1593,2.56,1594,2.56,1595,2.56]],["title/components/LandingPageComponent.html",[0,0.226,411,0.921]],["body/components/LandingPageComponent.html",[0,0.364,1,0.993,2,1.433,3,0.331,4,0.286,5,1.272,6,1.171,7,1.171,8,0.244,10,0.624,11,1.433,12,0.501,13,0.565,14,0.704,16,0.47,17,0.704,21,1.171,22,1.838,23,1.838,24,1.32,25,0.565,26,1.32,27,1.482,30,0.993,31,2.645,32,0.033,33,2.2,34,2.403,35,3.312,36,2.495,37,0.724,38,2.618,39,2.272,40,2.533,43,2.329,44,2.165,45,1.838,46,2.023,47,2.023,48,1.507,49,2.29,50,1.838,51,1.838,52,1.805,53,1.838,54,2.645,55,2.495,59,1.838,60,2.165,61,1.507,62,2.2,63,2.29,64,1.838,65,2.065,66,1.507,67,1.507,68,2.618,69,2.002,70,2.658,74,1.805,75,2.416,76,2.397,77,2.329,78,2.403,80,2.2,81,2.065,86,2.002,87,2.065,88,2.249,90,2.002,91,0.839,92,2.065,93,2.187,100,2.29,104,2.023,105,2.495,108,1.899,115,2.988,116,1.748,117,2.399,118,2.866,120,2.866,121,2.399,122,2.397,124,3.72,126,2.492,127,1.805,129,2.941,130,2.866,131,1.838,132,4.278,138,2.492,143,3.72,145,1.272,146,2.187,147,2.866,148,3.312,158,0.269,159,0.381,168,1.32,187,1.644,190,0.565,199,0.488,205,0.635,206,0.789,214,2.941,218,0.425,220,0.6,227,0.529,239,1.116,253,0.954,257,3.166,258,3.166,259,3.72,262,3.312,268,1.32,269,1.214,283,2.645,285,1.69,287,1.863,288,0.9,293,0.841,307,2.968,308,0.526,311,0.286,312,0.914,322,2.941,326,0.331,327,0.331,331,0.529,390,2.165,394,1.171,395,1.556,396,1.556,397,1.171,398,1.863,399,1.171,400,1.171,401,0.993,402,1.171,403,0.993,404,1.171,405,0.914,406,1.171,407,0.993,408,1.171,409,0.993,410,1.171,411,1.579,412,2.091,413,1.171,414,1.579,415,1.171,416,1.863,417,0.914,418,1.171,419,1.579,420,1.863,421,0.993,422,0.839,423,1.171,424,1.171,425,0.023,426,0.023,428,1.078,433,2.002,435,1.838,437,1.818,457,1.023,463,3.166,477,1.863,494,3.52,539,2.866,540,1.691,541,3.809,542,2.866,543,2.866,544,2.866,545,3.809,546,1.99,561,1.646,575,2.866,579,1.903,580,3.304,581,1.99,603,1.748,604,2.023,882,1.838,1114,2.187,1115,3.512,1125,2.492,1129,3.312,1136,3.964,1153,1.646,1168,3.512,1193,3.312,1195,2.492,1196,2.866,1197,2.866,1198,1.805,1199,2.213,1200,1.805,1203,2.866,1204,4.879,1214,2.866,1215,1.805,1217,2.399,1218,2.399,1224,1.805,1227,3.809,1241,3.809,1392,3.52,1472,2.645,1596,4.879,1597,4.879,1598,2.866,1599,5.125,1600,4.278,1601,5.125,1602,4.563,1603,5.125,1604,5.125,1605,5.462,1606,5.462,1607,5.462,1608,3.434,1609,4.563,1610,5.685,1611,3.434,1612,3.434,1613,4.879,1614,3.434,1615,3.434,1616,3.434,1617,2.492,1618,3.434,1619,2.492,1620,3.434,1621,4.563,1622,5.462,1623,5.462,1624,3.434,1625,3.434,1626,3.434,1627,3.434,1628,4.563,1629,3.434,1630,3.434,1631,3.434,1632,3.434,1633,3.809,1634,3.809,1635,4.563,1636,4.563,1637,5.462,1638,4.563,1639,4.563,1640,4.563,1641,4.563,1642,4.563,1643,4.563,1644,4.563,1645,4.563,1646,4.563,1647,4.563,1648,4.563,1649,4.563,1650,4.563,1651,4.563,1652,4.563,1653,4.563,1654,3.434,1655,4.563,1656,4.563,1657,3.434,1658,5.462,1659,2.866,1660,3.434,1661,5.685,1662,3.434,1663,3.434,1664,3.434,1665,4.563,1666,2.866,1667,3.434,1668,5.685,1669,3.434,1670,3.434,1671,3.434,1672,4.563,1673,5.965,1674,3.434,1675,3.434,1676,3.434,1677,2.866]],["title/components/LoginModalComponent.html",[0,0.226,414,0.921]],["body/components/LoginModalComponent.html",[0,0.328,1,0.816,2,1.252,3,0.272,4,0.235,5,1.045,6,0.962,7,0.962,8,0.2,10,0.655,11,1.252,12,0.552,13,0.682,16,0.47,17,0.494,21,0.962,22,1.786,23,1.786,24,1.153,25,0.747,26,1.153,27,1.338,28,2.431,30,0.816,32,0.033,33,1.137,34,2.218,36,2.28,37,0.76,39,2.04,40,1.137,43,2.208,44,1.477,45,2.218,46,2.254,47,1.863,48,1.238,49,2.137,50,1.607,51,1.607,53,1.137,55,2.206,56,1.635,57,1.635,59,1.863,60,1.863,61,1.75,62,1.863,63,1.607,64,1.607,65,1.863,66,1.238,67,1.238,68,2.03,69,1.75,70,2.03,71,2.328,72,2.206,73,0.817,74,1.483,75,2.353,76,1.75,77,2.178,78,2.218,80,1.863,81,1.863,84,1.635,86,1.238,87,2.218,88,1.75,90,1.75,91,0.69,92,1.863,93,1.912,98,2.096,99,1.607,100,2.025,101,1.912,102,1.912,103,2.217,104,1.863,105,2.206,106,1.819,107,1.819,108,1.714,109,1.635,110,1.819,111,1.819,112,1.819,113,2.096,116,0.962,123,0.941,127,1.483,131,1.863,144,2.312,146,1.352,149,3.494,155,0.962,156,0.962,157,0.962,158,0.235,159,0.333,168,1.153,169,0.573,184,1.252,185,1.819,186,0.697,187,1.837,189,1.579,190,0.682,191,0.524,192,1.338,193,1.477,198,0.774,199,0.538,203,0.69,205,0.682,206,0.817,210,0.975,218,0.494,219,3.039,220,0.646,227,0.435,228,0.751,233,1.483,234,2.643,253,0.712,267,0.712,268,1.76,269,1.619,281,1.338,283,1.635,284,1.223,285,1.824,287,2.033,288,0.928,291,0.952,293,0.89,294,1.635,304,0.747,306,1.863,307,2.961,308,0.531,311,0.235,312,0.751,313,1.045,314,0.886,323,1.045,326,0.272,327,0.272,331,0.848,337,0.679,363,0.747,368,2.41,370,0.818,378,0.579,379,0.89,390,1.477,394,0.962,395,1.36,396,1.36,397,0.962,398,1.715,399,0.962,400,0.962,401,0.816,402,0.962,403,0.816,404,0.962,405,0.751,406,0.962,407,0.816,408,0.962,409,0.816,410,0.962,411,0.816,412,0.962,413,0.962,414,1.454,415,2.056,416,1.715,417,0.751,418,0.962,419,0.816,420,0.962,421,0.816,422,0.69,423,0.962,424,0.962,425,0.02,426,0.02,433,1.75,435,1.607,451,1.453,470,1.75,472,0.69,483,3.649,490,1.238,515,0.962,546,1.635,549,1.75,553,2.895,556,2.571,561,1.352,568,1.819,573,2.048,579,1.453,580,2.571,581,1.635,583,1.483,613,1.36,615,0.679,658,0.816,659,0.816,660,1.995,661,0.816,662,0.816,663,1.666,664,0.886,682,0.816,733,1.338,917,1.453,961,1.137,962,1.045,963,1.045,964,1.607,965,1.045,983,0.886,998,0.962,1030,1.252,1055,1.863,1080,1.437,1086,2.048,1105,2.975,1106,1.778,1114,1.912,1115,3.623,1126,1.352,1140,1.238,1167,2.048,1168,3.351,1170,2.048,1171,2.895,1172,2.048,1173,2.048,1174,2.048,1175,3.649,1176,2.048,1177,2.048,1178,2.048,1179,2.048,1180,2.048,1182,2.048,1183,1.045,1194,2.571,1198,1.483,1199,1.819,1200,1.483,1201,1.819,1205,3.861,1209,2.096,1254,2.914,1255,2.681,1258,3.419,1275,1.819,1276,1.819,1277,1.819,1278,1.819,1284,1.819,1285,1.819,1286,1.819,1287,1.819,1288,2.048,1294,3.351,1295,3.549,1301,2.048,1317,3.192,1318,3.075,1319,1.819,1321,1.352,1324,2.895,1326,1.635,1337,4.187,1340,3.281,1366,1.635,1367,3.241,1368,3.241,1373,2.048,1384,2.571,1385,2.571,1392,2.571,1434,2.681,1443,1.635,1451,1.819,1468,2.895,1498,2.895,1520,2.355,1576,2.048,1587,2.355,1617,4.626,1633,4.428,1659,2.355,1677,2.355,1678,5.319,1679,1.635,1680,3.358,1681,2.895,1682,4.626,1683,5.304,1684,5.028,1685,5.304,1686,5.304,1687,5.028,1688,5.028,1689,3.241,1690,3.988,1691,3.329,1692,5.028,1693,2.571,1694,3.549,1695,3.988,1696,2.982,1697,2.355,1698,2.821,1699,3.988,1700,5.879,1701,6.437,1702,2.821,1703,3.988,1704,2.821,1705,3.988,1706,2.821,1707,3.988,1708,2.355,1709,2.821,1710,3.988,1711,5.028,1712,2.821,1713,6.249,1714,3.988,1715,2.821,1716,2.355,1717,2.821,1718,3.988,1719,2.355,1720,2.821,1721,2.821,1722,3.988,1723,2.821,1724,3.988,1725,2.821,1726,2.821,1727,2.821,1728,2.571,1729,2.821,1730,4.626,1731,1.635,1732,1.819,1733,2.821,1734,3.988,1735,2.821,1736,3.988,1737,4.626,1738,4.626,1739,2.821,1740,2.821,1741,2.821,1742,2.821,1743,2.821,1744,3.988,1745,2.821,1746,4.626,1747,2.821,1748,2.821,1749,2.821,1750,2.821,1751,2.821,1752,2.821,1753,2.821,1754,2.821,1755,2.821,1756,2.821,1757,2.821,1758,2.355,1759,2.821,1760,2.821,1761,1.819,1762,2.355,1763,2.821,1764,3.988,1765,3.988,1766,3.988,1767,3.988,1768,3.988,1769,3.988,1770,2.048,1771,2.048,1772,2.355,1773,2.355,1774,1.819,1775,2.571,1776,1.635,1777,1.819,1778,2.048,1779,2.048,1780,2.355,1781,4.626,1782,2.821,1783,2.048]],["title/interfaces/NavItem.html",[587,0.266,1122,2.053]],["body/interfaces/NavItem.html",[0,0.368,3,0.404,4,0.35,8,0.297,10,0.707,11,1.769,12,0.619,13,0.519,14,0.693,15,3.764,16,0.463,17,0.729,22,1.212,23,1.212,24,1.212,25,0.643,26,1.212,27,1.5,32,0.033,158,0.247,159,0.433,169,0.698,184,1.316,186,0.719,191,0.504,193,1.553,198,0.646,199,0.514,205,0.643,218,0.643,220,0.699,239,1.025,247,2.429,253,0.867,254,2.701,257,2.429,258,2.429,267,0.646,279,2.486,285,1.628,287,1.429,288,0.646,291,1.014,293,0.867,294,2.429,300,2.701,306,1.921,308,0.594,311,0.35,312,1.115,314,1.316,322,2.701,326,0.404,327,0.404,331,0.799,343,2.726,363,1.102,388,1.553,389,2.089,390,1.553,405,1.115,417,1.38,425,0.026,426,0.026,428,1.629,429,1.025,433,1.839,435,1.688,437,1.628,446,1.212,457,1.263,463,2.429,490,1.839,514,3.764,587,0.35,588,1.316,590,1.5,603,1.921,615,0.713,633,1.769,656,1.115,707,1.553,708,1.553,709,1.553,733,1.566,907,1.5,997,1.5,1080,1.527,1084,3.042,1085,3.498,1086,3.042,1087,4.329,1088,4.329,1089,3.498,1090,3.498,1091,2.701,1092,3.498,1093,3.498,1094,3.498,1095,3.498,1096,3.498,1097,3.498,1098,3.498,1099,3.498,1100,3.498,1101,3.498,1103,3.498,1105,2.96,1106,1.769,1111,3.498,1114,2.009,1115,3.006,1118,4.701,1119,2.701,1121,3.498,1122,3.793,1123,5.213,1124,3.042,1125,4.533,1126,2.993,1127,3.042,1128,4.533,1129,3.042,1131,4.701,1132,5.143,1133,3.042,1136,3.042,1139,3.498,1140,1.839,1141,3.498,1142,2.701,1143,3.343,1144,3.343,1145,4.912,1146,3.764,1147,4.329,1148,4.329,1149,4.329,1150,4.329,1151,2.486,1152,3.764,1153,2.486,1154,3.042,1155,3.042,1156,2.701,1157,3.498,1158,3.498,1159,3.498,1160,3.498,1161,3.498,1162,3.498,1163,2.701,1164,3.498,1165,4.329,1166,3.498,1167,3.042,1168,2.429,1169,3.498,1170,3.042,1171,3.764,1172,3.042,1173,3.042,1174,3.042,1175,4.271,1176,3.042,1177,3.042,1178,3.042,1179,3.042,1180,3.042,1181,3.498,1182,3.042,1183,1.553,1184,3.042,1185,3.042,1186,3.042,1187,3.498,1188,4.329]],["title/interfaces/Paciente.html",[484,0.921,587,0.266]],["body/interfaces/Paciente.html",[3,0.199,4,0.172,8,0.225,10,0.581,12,0.618,13,0.256,14,0.608,16,0.422,17,0.635,18,0.55,25,0.697,32,0.033,37,0.797,73,0.909,91,1.14,123,1.186,145,1.959,155,1.081,156,1.081,157,0.705,158,0.122,159,0.264,169,0.724,186,0.287,190,0.393,191,0.452,198,0.594,199,0.389,203,0.505,205,0.536,206,0.916,210,0.943,218,0.737,220,0.563,224,2.109,227,0.666,228,1.723,231,1.241,239,0.505,242,1.026,253,0.594,267,0.318,281,1.241,284,0.957,288,0.789,291,0.999,293,0.666,295,1.099,298,0.844,304,0.594,308,0.372,311,0.172,325,2.142,326,0.522,327,0.199,331,0.989,337,0.872,344,0.649,363,1.094,367,1.358,369,1.315,370,0.651,372,2.377,378,0.651,379,0.594,425,0.016,426,0.016,428,0.649,429,0.505,431,0.649,437,0.598,439,0.766,441,0.649,446,1.115,448,0.833,451,0.996,453,0.917,454,1.959,455,1.738,457,0.865,461,1.211,465,1.115,471,1.554,472,1.429,475,1.277,477,1.081,484,1.72,492,0.598,493,0.833,515,0.705,519,0.833,522,0.833,523,0.833,529,1.277,536,1.554,540,0.766,550,0.766,565,1.482,579,1.934,587,0.441,588,0.649,589,0.766,590,1.568,591,2.229,592,1.392,593,2.047,594,2.047,595,0.917,596,1.392,597,1.277,598,2.05,599,0.766,600,1.392,601,0.907,602,0.598,603,0.705,604,0.766,605,0.705,606,0.907,607,0.907,608,0.907,609,0.907,610,0.907,611,0.907,612,0.907,613,0.705,614,0.907,615,1.013,616,0.907,617,0.907,618,0.907,619,0.907,620,0.907,621,0.907,622,0.907,623,0.907,624,0.907,625,0.907,626,0.907,627,0.907,628,0.907,629,0.907,630,0.907,631,0.907,632,0.907,633,1.748,634,0.907,635,0.907,636,0.907,637,0.907,638,0.907,639,1.554,640,0.907,641,0.907,642,1.392,643,2.32,644,0.907,645,0.907,646,0.907,647,0.907,648,2.506,649,2.32,650,2.13,651,2.379,652,2.506,653,2.589,654,2.589,655,2.249,656,1.657,657,2.751,658,1.855,659,1.855,660,2.04,661,1.852,662,1.862,663,1.934,664,1.895,665,2.249,666,2.249,667,0.907,668,2.589,669,2.445,670,2.445,671,2.445,672,2.379,673,2.229,674,2.229,675,2.445,676,2.13,677,1.392,678,0.907,679,1.429,680,1.175,681,1.693,682,1.423,683,1.392,684,1.693,685,0.907,686,1.693,687,0.907,688,0.907,689,1.898,690,0.907,691,2.379,692,2.47,693,0.907,694,0.907,695,0.907,696,1.898,697,0.907,698,1.693,699,0.907,700,1.392,701,0.907,702,0.907,703,1.392,704,1.392,705,0.907,706,1.693,707,1.429,708,1.429,709,1.429,710,0.907,711,0.907,712,0.833,713,0.907,714,2.759,715,2.826,716,0.907,717,0.907,718,0.907,719,0.907,720,0.907,721,0.907,722,0.907,723,0.907,724,2.678,725,0.907,726,0.907,727,2.428,728,0.907,729,0.907,730,0.907,731,0.907,732,0.907,733,1.363,734,0.907,735,0.907,736,0.907,737,0.907,738,0.907,739,1.959,740,0.907,741,0.907,742,0.907,743,0.907,744,0.907,745,2.047,746,0.907,747,0.907,748,0.907,749,0.907,750,0.907,751,1.392,752,0.907,753,0.907,754,0.907,755,0.907,756,0.907,757,0.907,758,0.907,759,0.907,760,0.907,761,0.907,762,0.907,763,0.907,764,0.907,765,0.907,766,0.907,767,0.907,768,0.907,769,0.907,770,0.907,771,0.907,772,0.907,773,0.907,774,0.907,775,0.907,776,0.907,777,0.907,778,0.907,779,0.907,780,0.907,781,0.907,782,0.907,783,1.392,784,0.833,785,2.047,786,2.047,787,0.907,788,0.907,789,0.907,790,0.907,791,0.907,792,0.907,793,0.907,794,0.907,795,0.907,796,1.879,797,2.047,798,0.907,799,0.907,800,0.907,801,0.907,802,0.907,803,0.907,804,0.907,805,0.907,806,0.833,807,0.907,808,0.907,809,0.907,810,0.907,811,0.907,812,0.907,813,0.907,814,0.907,815,0.907,816,0.907,817,0.907,818,0.907,819,0.907,820,0.907,821,0.907,822,0.907,823,0.907,824,0.907,825,0.907,826,0.907,827,2.125,828,0.907,829,0.907,830,0.907,831,0.907,832,0.907,833,0.907,834,0.907,835,0.907,836,0.907,837,1.277,838,0.907,839,0.907,840,0.907,841,0.907,842,0.907,843,0.907,844,0.907,845,0.907,846,0.907,847,0.907,848,0.907,849,0.907,850,0.907,851,0.907,852,0.907,853,0.907,854,0.907,855,0.907,856,0.907,857,0.907,858,0.907,859,0.907,860,0.907,861,0.907,862,0.907,863,0.907,864,0.907,865,0.907,866,0.907,867,0.907,868,0.907,869,0.907,870,0.907,871,0.907,872,0.907,873,0.907,874,0.907,875,2.16,876,0.907,877,0.907,878,0.907,879,0.907,880,2.16,881,0.907,882,2.492,883,0.907,884,2.064,885,2.268,886,1.392,887,2.047,888,1.693,889,1.392,890,1.693,891,1.898,892,0.907,893,1.693,894,1.693,895,0.907,896,2.249,897,1.693,898,0.996,899,0.907,900,0.907,901,2.047,902,0.907,903,0.907,904,0.907,905,2.32,906,1.898,907,1.529,908,0.907,909,0.907,910,0.833,911,0.907,912,2.537,913,2.506,914,0.907,915,2.724,916,0.907,917,1.906,918,2.249,919,2.047,920,2.16,921,2.047,922,2.047,923,2.663,924,0.907,925,2.249,926,2.16,927,2.16,928,2.16,929,1.898,930,0.907,931,2.249,932,1.898,933,1.693,934,1.693,935,1.392,936,0.907,937,0.907,938,0.907,939,0.907,940,0.907,941,0.907,942,0.907,943,0.907,944,0.907,945,0.907,946,0.907,947,0.907,948,2.047,949,2.506,950,0.907,951,2.047,952,0.907,953,0.907,954,0.907,955,0.766,956,0.907,957,0.907,958,0.907,959,1.277,960,0.907,961,1.554,962,1.175,963,1.175,964,0.833,965,1.602,966,2.16,967,1.898,968,1.277,969,0.833,970,0.907,971,0.907,972,0.833,973,0.833,974,1.277,975,0.907,976,1.392,977,0.907,978,0.907,979,0.766,980,0.907,981,0.907,982,0.907,983,1.211,984,0.907,985,0.907,986,0.907,987,0.907,988,0.907,989,0.907,990,0.907,991,0.907,992,0.907,993,0.907,994,0.907,995,0.907,996,0.907,997,0.917,998,1.081,999,1.392,1000,1.081,1001,1.392,1002,1.081,1003,1.277,1004,0.907,1005,1.175,1006,0.907,1007,0.907,1008,0.996,1009,0.907,1010,2.047,1011,2.047,1012,2.047,1013,1.693,1014,0.907,1015,1.392,1016,1.277,1017,1.392,1018,1.392,1019,1.392,1020,0.907,1021,1.392,1022,0.907,1023,0.907,1024,1.693,1025,1.898,1026,2.047,1027,1.175,1028,0.907,1029,1.693,1030,0.649,1031,0.649,1032,0.907,1033,0.907,1034,0.907,1035,0.907,1036,0.907,1037,0.907,1038,0.907,1039,0.907,1040,1.392,1041,0.907,1042,0.907,1043,0.907,1044,0.907,1045,0.907,1046,0.907,1047,0.907,1048,1.392,1049,1.898,1050,0.833,1051,0.833,1052,0.907,1053,0.907,1054,0.907,1055,1.277,1056,0.907,1057,0.907,1058,0.907,1059,0.907,1060,0.907,1061,1.693,1062,0.907,1063,0.907,1064,0.907,1065,0.907,1066,0.907,1067,0.833,1068,1.392,1069,0.907,1070,0.907,1071,1.392,1072,0.907,1073,0.833,1074,0.907,1075,0.766,1076,1.392,1077,0.907,1078,1.277,1079,0.833,1080,0.505,1081,0.907,1082,0.907,1083,0.766]],["title/components/ProfileModalComponent.html",[0,0.226,417,0.847]],["body/components/ProfileModalComponent.html",[0,0.325,1,0.803,2,1.238,3,0.268,4,0.232,5,1.699,6,0.947,7,0.947,8,0.197,14,0.305,16,0.197,19,1.461,20,2.198,21,0.947,22,1.782,23,1.782,24,1.14,25,0.653,26,1.14,27,1.326,30,0.803,32,0.033,33,2.207,34,2.444,36,2.498,37,0.801,39,2.297,40,1.847,43,2.332,44,2.029,45,2.563,46,2.376,47,2.17,48,2.012,49,2.36,50,1.847,51,1.847,53,1.847,56,2.658,57,2.658,59,2.207,60,2.029,61,2.404,62,2.498,63,2.535,64,2.36,65,2.444,66,2.012,67,2.012,68,2.404,69,2.404,70,2.57,71,2.57,72,2.404,73,0.844,74,2.41,75,2.413,76,2.012,77,2.332,78,2.444,80,2.207,81,2.207,84,2.658,86,2.663,87,2.36,88,2.404,89,2.658,90,2.404,91,1.121,92,2.36,93,2.625,98,2.879,99,2.124,100,2.207,101,2.625,102,2.625,103,2.808,104,2.17,108,1.699,113,2.41,115,3.079,116,1.964,117,2.879,121,3.079,122,2.404,123,0.52,127,2.41,131,2.207,144,2.658,158,0.294,159,0.329,168,1.14,169,0.619,176,2.624,184,1.238,186,0.692,187,1.755,189,1.44,190,0.653,191,0.47,192,1.22,193,1.699,197,2.658,199,0.232,205,0.679,206,0.706,210,1.377,218,0.489,227,0.428,235,2.658,253,0.607,267,0.706,268,1.14,269,1.049,284,0.941,285,1.443,289,2.393,291,0.887,295,0.671,305,2.542,307,3.004,308,0.543,311,0.232,312,0.739,313,1.029,314,0.872,326,0.268,327,0.268,331,0.868,352,2.41,360,2.41,363,1.161,370,0.57,378,0.57,379,0.844,394,0.947,395,1.345,396,1.345,397,0.947,398,1.702,399,0.947,400,0.947,401,0.803,402,0.947,403,0.803,404,0.947,405,0.739,406,0.947,407,0.803,408,0.947,409,0.803,410,0.947,411,0.803,412,0.947,413,0.947,414,0.803,415,0.947,416,1.702,417,1.328,418,1.564,419,0.803,420,0.947,421,0.803,422,0.679,423,0.947,424,0.947,425,0.019,426,0.019,441,1.44,457,1.119,472,1.432,483,3.976,490,1.219,498,1.79,499,1.79,517,2.016,538,3.329,549,2.012,556,3.531,561,2.198,565,1.326,568,2.956,581,2.658,583,2.41,585,2.956,602,0.803,615,0.473,658,1.525,659,1.525,661,1.326,662,1.326,663,1.44,664,1.238,898,1.238,1008,1.72,1091,2.956,1105,2.961,1106,1.769,1119,1.79,1126,2.198,1140,1.219,1142,3.944,1151,1.331,1183,1.029,1185,2.016,1186,2.016,1192,3.828,1193,3.624,1198,2.41,1200,2.41,1201,2.956,1209,2.41,1215,2.41,1217,2.41,1218,2.41,1224,2.41,1307,1.79,1316,2.658,1317,3.717,1318,3.595,1319,2.956,1321,2.198,1322,3.329,1323,3.395,1324,3.976,1325,3.329,1326,2.658,1328,3.292,1329,3.292,1330,2.956,1331,2.956,1332,3.292,1333,3.218,1334,3.292,1335,3.329,1337,3.711,1338,3.292,1339,2.956,1340,3.175,1341,3.329,1342,2.016,1345,2.542,1347,2.542,1348,3.218,1350,1.61,1351,2.894,1353,2.286,1356,2.542,1358,1.79,1359,3.218,1364,2.542,1366,2.658,1379,3.266,1391,1.61,1394,1.61,1395,3.056,1396,2.542,1397,1.79,1413,2.542,1415,1.79,1416,1.79,1417,1.79,1418,2.542,1419,2.016,1420,2.016,1421,2.016,1422,1.61,1423,2.016,1424,1.79,1425,2.016,1426,2.016,1427,2.542,1432,2.016,1433,2.016,1434,2.286,1435,2.286,1440,2.318,1443,1.61,1453,2.318,1454,2.318,1455,2.318,1456,2.318,1458,2.318,1460,2.542,1461,3.329,1462,3.329,1505,1.79,1506,1.79,1512,2.862,1513,2.016,1579,3.329,1679,1.61,1689,3.218,1693,2.542,1694,3.531,1696,2.956,1728,2.542,1732,1.79,1758,2.318,1761,1.79,1770,3.329,1771,3.329,1772,3.828,1774,2.956,1775,3.531,1776,2.658,1777,2.956,1778,3.329,1779,3.329,1784,5.107,1785,4.585,1786,3.828,1787,4.167,1788,4.167,1789,4.585,1790,4.585,1791,4.167,1792,3.292,1793,3.943,1794,2.777,1795,2.777,1796,2.777,1797,2.777,1798,2.777,1799,2.777,1800,2.777,1801,2.777,1802,3.828,1803,2.777,1804,2.777,1805,3.943,1806,2.777,1807,2.318,1808,3.292,1809,3.292,1810,3.292,1811,3.292,1812,3.292,1813,2.318,1814,2.318,1815,3.292,1816,2.777,1817,2.777,1818,2.777,1819,2.777,1820,2.777,1821,2.777,1822,3.943,1823,3.943,1824,2.777,1825,2.777,1826,3.943,1827,3.292,1828,3.292,1829,3.292,1830,3.292,1831,2.862,1832,2.777,1833,2.777,1834,2.777,1835,2.777,1836,2.777,1837,2.777,1838,3.292,1839,2.777,1840,2.777,1841,2.777,1842,2.777,1843,2.777,1844,2.777,1845,2.777,1846,2.777]],["title/components/RegisterModalComponent.html",[0,0.226,419,0.921]],["body/components/RegisterModalComponent.html",[0,0.323,1,0.791,2,1.226,3,0.264,4,0.228,5,1.014,6,0.933,7,0.933,8,0.194,10,0.641,11,1.226,12,0.63,13,0.614,16,0.442,18,1.21,21,0.933,22,1.778,23,1.778,24,1.128,25,0.723,26,1.128,27,1.315,30,0.791,32,0.033,33,1.998,34,2.26,36,1.998,37,0.778,38,1.312,39,2.019,43,2.078,44,1.446,45,2.112,46,2.162,47,1.685,48,1.201,49,1.572,50,1.572,51,1.572,53,1.102,55,1.996,56,1.586,57,1.586,59,1.572,60,1.837,61,1.996,62,1.998,63,1.998,64,1.572,65,1.998,66,1.201,67,1.201,68,1.713,69,1.713,70,1.996,71,1.996,72,1.713,73,0.94,74,2.051,75,2.278,76,1.713,77,2.125,78,2.196,80,1.572,81,1.572,84,1.586,87,1.998,88,1.201,89,1.586,90,1.713,91,0.669,92,1.572,93,2.18,95,2.284,98,2.051,99,1.998,100,1.572,101,1.871,102,1.871,103,1.871,104,1.685,105,1.996,106,1.764,107,1.764,108,1.446,109,1.586,110,1.764,111,1.764,112,1.764,113,2.051,115,2.756,116,1.551,117,2.051,121,2.051,122,1.201,123,0.852,127,1.438,131,1.572,144,2.262,146,1.312,149,2.262,158,0.23,159,0.326,168,1.128,169,0.614,184,1.226,186,0.687,187,1.799,189,1.647,190,0.695,191,0.487,192,1.395,193,1.685,198,0.701,199,0.542,203,0.954,205,0.762,206,0.601,210,1.402,218,0.723,219,2.756,220,0.665,227,0.421,228,0.728,233,2.051,234,2.865,253,0.912,267,0.864,268,1.434,269,1.319,279,1.871,281,0.728,284,1.177,285,1.712,287,1.691,288,0.912,289,2.749,291,0.923,293,0.971,295,0.955,298,0.728,305,2.516,306,1.837,307,2.983,308,0.541,311,0.228,312,0.728,313,1.014,314,0.859,323,1.014,326,0.264,327,0.264,331,0.953,337,0.774,343,2.051,359,2.284,360,2.051,363,1.151,370,0.562,378,0.562,379,0.932,390,1.014,394,0.933,395,1.331,396,1.331,397,0.933,398,1.691,399,0.933,400,0.933,401,0.791,402,0.933,403,0.791,404,0.933,405,0.728,406,0.933,407,0.791,408,0.933,409,0.791,410,0.933,411,0.791,412,0.933,413,0.933,414,0.791,415,0.933,416,1.691,417,0.728,418,0.933,419,1.434,420,1.956,421,0.791,422,0.669,423,0.933,424,0.933,425,0.019,426,0.019,433,1.713,435,1.572,441,1.647,451,1.429,457,1.112,467,2.516,470,2.176,472,1.333,490,1.201,498,1.764,499,1.764,538,1.986,549,1.201,553,2.833,556,2.516,561,1.312,565,0.791,568,1.764,581,1.586,583,1.438,602,0.791,613,1.331,615,0.466,656,1.21,658,1.576,659,1.576,660,2.035,661,1.128,662,1.659,663,1.712,664,1.226,733,1.45,827,1.551,898,1.429,917,1.429,955,1.014,979,1.014,983,1.429,997,0.791,998,0.933,1000,0.933,1002,0.933,1005,1.014,1030,1.226,1031,1.557,1067,1.102,1073,1.572,1075,1.014,1080,1.212,1105,2.949,1106,1.762,1114,1.871,1115,1.586,1126,1.312,1140,1.201,1183,1.014,1194,2.516,1198,1.438,1200,1.438,1201,1.764,1209,1.438,1215,1.438,1217,1.438,1218,2.391,1224,1.438,1254,2.875,1255,2.637,1258,3.38,1275,2.516,1276,2.516,1277,2.516,1278,2.516,1279,1.986,1280,1.986,1281,2.833,1282,1.986,1283,1.986,1284,2.516,1285,2.516,1286,1.764,1287,2.516,1294,2.637,1295,2.516,1316,2.637,1317,3.384,1318,3.16,1321,1.312,1323,2.637,1326,1.586,1330,3.197,1331,3.197,1333,3.197,1335,2.833,1337,3.616,1340,3.039,1345,2.516,1347,2.516,1350,1.586,1351,2.875,1353,2.262,1356,1.764,1358,3.697,1359,2.932,1360,1.986,1361,1.438,1364,2.516,1366,3.432,1367,2.516,1368,2.516,1369,2.833,1379,2.637,1381,2.516,1384,2.516,1385,2.516,1391,1.586,1392,1.764,1394,1.586,1395,3.325,1396,2.516,1397,1.764,1399,2.284,1413,2.516,1415,1.764,1416,1.764,1417,1.764,1418,2.932,1422,3.16,1424,3.514,1427,2.516,1434,2.637,1435,1.586,1438,2.284,1443,1.586,1451,1.764,1460,2.516,1461,3.302,1462,3.302,1466,4.14,1468,2.833,1469,4.14,1470,3.258,1474,4.55,1475,4.14,1476,4.14,1477,5.095,1478,4.55,1479,2.833,1480,4.14,1493,4.14,1495,3.258,1497,3.797,1498,2.833,1504,4.14,1505,1.764,1506,1.764,1507,3.258,1508,2.284,1511,2.284,1512,1.986,1513,1.986,1514,2.284,1515,3.258,1521,2.284,1523,2.284,1534,2.284,1535,3.258,1536,2.284,1537,2.284,1538,3.797,1539,4.377,1540,2.284,1541,2.284,1542,3.797,1543,4.377,1544,1.764,1545,2.284,1546,2.284,1558,2.284,1563,2.284,1564,2.284,1565,2.284,1566,3.258,1567,2.284,1568,2.284,1569,2.284,1570,2.284,1571,2.284,1572,2.284,1573,2.284,1574,2.284,1576,3.6,1577,4.14,1579,2.833,1588,2.284,1613,4.683,1619,4.54,1634,4.14,1666,2.284,1679,1.586,1680,3.302,1681,2.833,1689,3.197,1691,4.14,1693,2.516,1694,3.514,1696,2.932,1708,2.284,1719,2.284,1728,2.516,1731,1.586,1732,1.764,1761,1.764,1770,1.986,1771,1.986,1773,2.284,1774,1.764,1775,2.516,1776,1.586,1777,1.764,1778,1.986,1779,2.833,1780,2.284,1783,2.833,1786,3.258,1787,4.14,1788,3.258,1791,4.14,1802,2.284,1807,2.284,1808,2.284,1809,2.284,1810,2.284,1811,2.284,1812,4.377,1813,2.284,1814,2.284,1815,3.258,1827,3.258,1828,3.258,1829,3.258,1830,3.258,1831,2.833,1838,2.284,1847,5.22,1848,4.549,1849,3.258,1850,2.284,1851,2.737,1852,2.737,1853,2.737,1854,2.737,1855,2.737,1856,2.737,1857,3.903,1858,3.903,1859,3.903,1860,2.737,1861,2.737,1862,2.284,1863,2.737,1864,2.737,1865,2.737,1866,2.737,1867,2.737,1868,2.737,1869,2.737,1870,2.737,1871,2.737,1872,2.737,1873,2.737,1874,2.737,1875,2.737,1876,3.903,1877,2.737,1878,3.903,1879,2.737,1880,2.737,1881,2.737,1882,2.737,1883,2.737,1884,2.737,1885,2.737,1886,2.737,1887,2.737,1888,2.737,1889,3.903,1890,3.903,1891,2.737,1892,2.737,1893,2.737]],["title/interfaces/Rol.html",[587,0.266,907,0.921]],["body/interfaces/Rol.html",[3,0.201,4,0.174,8,0.227,10,0.583,12,0.62,13,0.259,14,0.609,16,0.426,17,0.637,18,0.555,25,0.699,32,0.033,37,0.798,73,0.91,91,1.145,123,1.187,145,1.965,155,1.09,156,1.09,157,0.712,158,0.123,159,0.266,169,0.726,186,0.289,190,0.396,191,0.266,198,0.598,199,0.391,203,0.51,205,0.539,206,0.918,210,0.949,218,0.738,220,0.565,224,2.112,227,0.67,228,1.725,231,1.246,239,0.51,242,1.032,253,0.598,267,0.322,281,1.246,284,0.961,288,0.792,291,0.98,293,0.67,295,1.1,298,0.85,304,0.598,308,0.374,311,0.174,325,2.147,326,0.524,327,0.201,331,0.99,337,0.875,344,0.656,363,1.096,367,1.365,369,1.323,370,0.656,372,2.381,378,0.656,379,0.598,425,0.016,426,0.016,428,0.656,429,0.51,431,0.656,437,0.604,439,0.773,441,0.656,446,1.122,448,0.841,451,1.003,453,0.924,454,1.965,455,1.742,457,0.87,461,1.219,465,1.122,471,1.563,472,1.432,475,1.287,477,1.09,484,1.693,492,0.604,493,0.841,515,0.712,519,0.841,522,0.841,523,0.841,529,1.287,536,1.563,540,0.773,550,0.773,565,1.487,579,1.937,587,0.442,588,0.656,589,0.773,590,1.572,591,2.235,592,1.402,593,2.056,594,2.056,595,0.924,596,1.402,597,1.287,598,2.055,599,0.773,600,1.402,601,0.916,602,0.604,603,0.712,604,0.773,605,0.712,606,0.916,607,0.916,608,0.916,609,0.916,610,0.916,611,0.916,612,0.916,613,0.712,614,0.916,615,1.014,616,0.916,617,0.916,618,0.916,619,0.916,620,0.916,621,0.916,622,0.916,623,0.916,624,0.916,625,0.916,626,0.916,627,0.916,628,0.916,629,0.916,630,0.916,631,0.916,632,0.916,633,1.754,634,0.916,635,0.916,636,0.916,637,0.916,638,0.916,639,1.563,640,0.916,641,0.916,642,1.402,643,2.327,644,0.916,645,0.916,646,0.916,647,0.916,648,2.512,649,2.327,650,2.137,651,2.386,652,2.512,653,2.594,654,2.594,655,2.257,656,1.674,657,2.754,658,1.847,659,1.847,660,2.036,661,1.844,662,1.856,663,1.937,664,1.898,665,2.257,666,2.257,667,0.916,668,2.594,669,2.401,670,2.401,671,2.401,672,2.386,673,2.235,674,2.235,675,2.449,676,2.137,677,1.402,678,0.916,679,1.438,680,1.184,681,1.703,682,1.429,683,1.402,684,1.703,685,0.916,686,1.703,687,0.916,688,0.916,689,1.908,690,0.916,691,2.386,692,2.476,693,0.916,694,0.916,695,0.916,696,1.908,697,0.916,698,1.703,699,0.916,700,1.402,701,0.916,702,0.916,703,1.402,704,1.402,705,0.916,706,1.703,707,1.438,708,1.438,709,1.438,710,0.916,711,0.916,712,0.841,713,0.916,714,2.762,715,2.828,716,0.916,717,0.916,718,0.916,719,0.916,720,0.916,721,0.916,722,0.916,723,0.916,724,2.682,725,0.916,726,0.916,727,2.435,728,0.916,729,0.916,730,0.916,731,0.916,732,0.916,733,1.368,734,0.916,735,0.916,736,0.916,737,0.916,738,0.916,739,1.965,740,0.916,741,0.916,742,0.916,743,0.916,744,0.916,745,2.056,746,0.916,747,0.916,748,0.916,749,0.916,750,0.916,751,1.402,752,0.916,753,0.916,754,0.916,755,0.916,756,0.916,757,0.916,758,0.916,759,0.916,760,0.916,761,0.916,762,0.916,763,0.916,764,0.916,765,0.916,766,0.916,767,0.916,768,0.916,769,0.916,770,0.916,771,0.916,772,0.916,773,0.916,774,0.916,775,0.916,776,0.916,777,0.916,778,0.916,779,0.916,780,0.916,781,0.916,782,0.916,783,1.402,784,0.841,785,2.056,786,2.056,787,0.916,788,0.916,789,0.916,790,0.916,791,0.916,792,0.916,793,0.916,794,0.916,795,0.916,796,1.887,797,2.056,798,0.916,799,0.916,800,0.916,801,0.916,802,0.916,803,0.916,804,0.916,805,0.916,806,0.841,807,0.916,808,0.916,809,0.916,810,0.916,811,0.916,812,0.916,813,0.916,814,0.916,815,0.916,816,0.916,817,0.916,818,0.916,819,0.916,820,0.916,821,0.916,822,0.916,823,0.916,824,0.916,825,0.916,826,0.916,827,2.127,828,0.916,829,0.916,830,0.916,831,0.916,832,0.916,833,0.916,834,0.916,835,0.916,836,0.916,837,1.287,838,0.916,839,0.916,840,0.916,841,0.916,842,0.916,843,0.916,844,0.916,845,0.916,846,0.916,847,0.916,848,0.916,849,0.916,850,0.916,851,0.916,852,0.916,853,0.916,854,0.916,855,0.916,856,0.916,857,0.916,858,0.916,859,0.916,860,0.916,861,0.916,862,0.916,863,0.916,864,0.916,865,0.916,866,0.916,867,0.916,868,0.916,869,0.916,870,0.916,871,0.916,872,0.916,873,0.916,874,0.916,875,2.168,876,0.916,877,0.916,878,0.916,879,0.916,880,2.168,881,0.916,882,2.495,883,0.916,884,2.072,885,2.273,886,1.402,887,2.056,888,1.703,889,1.402,890,1.703,891,1.908,892,0.916,893,1.703,894,1.703,895,0.916,896,2.257,897,1.703,898,1.003,899,0.916,900,0.916,901,2.056,902,0.916,903,0.916,904,0.916,905,2.327,906,1.908,907,1.604,908,0.916,909,0.916,910,0.841,911,0.916,912,2.543,913,2.512,914,0.916,915,2.728,916,0.916,917,1.909,918,2.257,919,2.056,920,2.168,921,2.056,922,2.056,923,2.667,924,0.916,925,2.257,926,2.168,927,2.168,928,2.168,929,1.908,930,0.916,931,2.257,932,1.908,933,1.703,934,1.703,935,1.402,936,0.916,937,0.916,938,0.916,939,0.916,940,0.916,941,0.916,942,0.916,943,0.916,944,0.916,945,0.916,946,0.916,947,0.916,948,2.056,949,2.512,950,0.916,951,2.056,952,0.916,953,0.916,954,0.916,955,0.773,956,0.916,957,0.916,958,0.916,959,1.287,960,0.916,961,1.563,962,1.184,963,1.184,964,0.841,965,1.61,966,2.168,967,1.908,968,1.287,969,0.841,970,0.916,971,0.916,972,0.841,973,0.841,974,1.287,975,0.916,976,1.402,977,0.916,978,0.916,979,0.773,980,0.916,981,0.916,982,0.916,983,1.219,984,0.916,985,0.916,986,0.916,987,0.916,988,0.916,989,0.916,990,0.916,991,0.916,992,0.916,993,0.916,994,0.916,995,0.916,996,0.916,997,0.924,998,1.09,999,1.402,1000,1.09,1001,1.402,1002,1.09,1003,1.287,1004,0.916,1005,1.184,1006,0.916,1007,0.916,1008,1.003,1009,0.916,1010,2.056,1011,2.056,1012,2.056,1013,1.703,1014,0.916,1015,1.402,1016,1.287,1017,1.402,1018,1.402,1019,1.402,1020,0.916,1021,1.402,1022,0.916,1023,0.916,1024,1.703,1025,1.908,1026,2.056,1027,1.184,1028,0.916,1029,1.703,1030,0.656,1031,0.656,1032,0.916,1033,0.916,1034,0.916,1035,0.916,1036,0.916,1037,0.916,1038,0.916,1039,0.916,1040,1.402,1041,0.916,1042,0.916,1043,0.916,1044,0.916,1045,0.916,1046,0.916,1047,0.916,1048,1.402,1049,1.908,1050,0.841,1051,0.841,1052,0.916,1053,0.916,1054,0.916,1055,1.287,1056,0.916,1057,0.916,1058,0.916,1059,0.916,1060,0.916,1061,1.703,1062,0.916,1063,0.916,1064,0.916,1065,0.916,1066,0.916,1067,0.841,1068,1.402,1069,0.916,1070,0.916,1071,1.402,1072,0.916,1073,0.841,1074,0.916,1075,0.773,1076,1.402,1077,0.916,1078,1.287,1079,0.841,1080,0.781,1081,0.916,1082,0.916,1083,0.773]],["title/interfaces/RolFuncionario.html",[587,0.266,1083,1.18]],["body/interfaces/RolFuncionario.html",[3,0.201,4,0.174,8,0.227,10,0.582,12,0.62,13,0.258,14,0.62,16,0.423,17,0.637,18,0.555,25,0.699,32,0.033,37,0.798,73,0.91,91,1.145,123,1.189,145,1.964,155,1.089,156,1.089,157,0.711,158,0.123,159,0.266,169,0.725,186,0.289,190,0.396,191,0.266,198,0.597,199,0.391,203,0.51,205,0.538,206,0.918,210,0.948,218,0.744,220,0.565,224,2.127,227,0.669,228,1.719,231,1.246,239,0.51,242,1.032,253,0.669,267,0.321,281,1.246,284,0.961,288,0.792,291,0.976,293,0.669,295,1.1,298,0.849,304,0.598,308,0.374,311,0.174,325,2.146,326,0.524,327,0.201,331,0.99,337,0.875,344,0.655,363,1.096,367,1.365,369,1.323,370,0.655,372,2.381,378,0.655,379,0.597,425,0.016,426,0.016,428,0.655,429,0.51,431,0.655,437,0.603,439,0.773,441,0.655,446,1.122,448,0.84,451,1.003,453,0.923,454,1.964,455,1.742,457,0.87,461,1.218,465,1.122,471,1.562,472,1.431,475,1.286,477,1.089,484,1.693,492,0.603,493,0.84,515,0.711,519,0.84,522,0.84,523,0.84,529,1.286,536,1.562,540,0.773,550,0.773,565,1.486,579,1.937,587,0.442,588,0.655,589,0.773,590,1.572,591,2.235,592,1.401,593,2.055,594,2.055,595,0.923,596,1.401,597,1.286,598,2.055,599,0.773,600,1.401,601,0.915,602,0.603,603,0.711,604,0.773,605,0.711,606,0.915,607,0.915,608,0.915,609,0.915,610,0.915,611,0.915,612,0.915,613,0.711,614,0.915,615,1.014,616,0.915,617,0.915,618,0.915,619,0.915,620,0.915,621,0.915,622,0.915,623,0.915,624,0.915,625,0.915,626,0.915,627,0.915,628,0.915,629,0.915,630,0.915,631,0.915,632,0.915,633,1.753,634,0.915,635,0.915,636,0.915,637,0.915,638,0.915,639,1.562,640,0.915,641,0.915,642,1.401,643,2.327,644,0.915,645,0.915,646,0.915,647,0.915,648,2.511,649,2.327,650,2.136,651,2.385,652,2.511,653,2.593,654,2.593,655,2.256,656,1.659,657,2.754,658,1.847,659,1.847,660,2.036,661,1.844,662,1.856,663,1.937,664,1.897,665,2.256,666,2.256,667,0.915,668,2.593,669,2.4,670,2.4,671,2.4,672,2.385,673,2.235,674,2.235,675,2.484,676,2.136,677,1.401,678,0.915,679,1.437,680,1.183,681,1.702,682,1.428,683,1.401,684,1.702,685,0.915,686,1.702,687,0.915,688,0.915,689,1.907,690,0.915,691,2.385,692,2.569,693,0.915,694,0.915,695,0.915,696,1.907,697,0.915,698,1.702,699,0.915,700,1.401,701,0.915,702,0.915,703,1.401,704,1.401,705,0.915,706,1.702,707,1.437,708,1.437,709,1.437,710,0.915,711,0.915,712,0.84,713,0.915,714,2.761,715,2.828,716,0.915,717,0.915,718,0.915,719,0.915,720,0.915,721,0.915,722,0.915,723,0.915,724,2.681,725,0.915,726,0.915,727,2.434,728,0.915,729,0.915,730,0.915,731,0.915,732,0.915,733,1.368,734,0.915,735,0.915,736,0.915,737,0.915,738,0.915,739,1.964,740,0.915,741,0.915,742,0.915,743,0.915,744,0.915,745,2.055,746,0.915,747,0.915,748,0.915,749,0.915,750,0.915,751,1.401,752,0.915,753,0.915,754,0.915,755,0.915,756,0.915,757,0.915,758,0.915,759,0.915,760,0.915,761,0.915,762,0.915,763,0.915,764,0.915,765,0.915,766,0.915,767,0.915,768,0.915,769,0.915,770,0.915,771,0.915,772,0.915,773,0.915,774,0.915,775,0.915,776,0.915,777,0.915,778,0.915,779,0.915,780,0.915,781,0.915,782,0.915,783,1.401,784,0.84,785,2.055,786,2.055,787,0.915,788,0.915,789,0.915,790,0.915,791,0.915,792,0.915,793,0.915,794,0.915,795,0.915,796,1.887,797,2.055,798,0.915,799,0.915,800,0.915,801,0.915,802,0.915,803,0.915,804,0.915,805,0.915,806,0.84,807,0.915,808,0.915,809,0.915,810,0.915,811,0.915,812,0.915,813,0.915,814,0.915,815,0.915,816,0.915,817,0.915,818,0.915,819,0.915,820,0.915,821,0.915,822,0.915,823,0.915,824,0.915,825,0.915,826,0.915,827,2.127,828,0.915,829,0.915,830,0.915,831,0.915,832,0.915,833,0.915,834,0.915,835,0.915,836,0.915,837,1.286,838,0.915,839,0.915,840,0.915,841,0.915,842,0.915,843,0.915,844,0.915,845,0.915,846,0.915,847,0.915,848,0.915,849,0.915,850,0.915,851,0.915,852,0.915,853,0.915,854,0.915,855,0.915,856,0.915,857,0.915,858,0.915,859,0.915,860,0.915,861,0.915,862,0.915,863,0.915,864,0.915,865,0.915,866,0.915,867,0.915,868,0.915,869,0.915,870,0.915,871,0.915,872,0.915,873,0.915,874,0.915,875,2.168,876,0.915,877,0.915,878,0.915,879,0.915,880,2.168,881,0.915,882,2.494,883,0.915,884,2.071,885,2.273,886,1.401,887,2.055,888,1.702,889,1.401,890,1.702,891,1.907,892,0.915,893,1.702,894,1.702,895,0.915,896,2.256,897,1.702,898,1.003,899,0.915,900,0.915,901,2.055,902,0.915,903,0.915,904,0.915,905,2.327,906,1.907,907,1.572,908,0.915,909,0.915,910,0.84,911,0.915,912,2.542,913,2.511,914,0.915,915,2.727,916,0.915,917,1.909,918,2.256,919,2.055,920,2.168,921,2.055,922,2.055,923,2.667,924,0.915,925,2.256,926,2.168,927,2.168,928,2.168,929,1.907,930,0.915,931,2.256,932,1.907,933,1.702,934,1.702,935,1.401,936,0.915,937,0.915,938,0.915,939,0.915,940,0.915,941,0.915,942,0.915,943,0.915,944,0.915,945,0.915,946,0.915,947,0.915,948,2.055,949,2.511,950,0.915,951,2.055,952,0.915,953,0.915,954,0.915,955,0.773,956,0.915,957,0.915,958,0.915,959,1.286,960,0.915,961,1.562,962,1.183,963,1.183,964,0.84,965,1.61,966,2.168,967,1.907,968,1.286,969,0.84,970,0.915,971,0.915,972,0.84,973,0.84,974,1.286,975,0.915,976,1.401,977,0.915,978,0.915,979,0.773,980,0.915,981,0.915,982,0.915,983,1.218,984,0.915,985,0.915,986,0.915,987,0.915,988,0.915,989,0.915,990,0.915,991,0.915,992,0.915,993,0.915,994,0.915,995,0.915,996,0.915,997,0.923,998,1.089,999,1.401,1000,1.089,1001,1.401,1002,1.089,1003,1.286,1004,0.915,1005,1.183,1006,0.915,1007,0.915,1008,1.003,1009,0.915,1010,2.055,1011,2.055,1012,2.055,1013,1.702,1014,0.915,1015,1.401,1016,1.286,1017,1.401,1018,1.401,1019,1.401,1020,0.915,1021,1.401,1022,0.915,1023,0.915,1024,1.702,1025,1.907,1026,2.055,1027,1.183,1028,0.915,1029,1.702,1030,0.655,1031,0.655,1032,0.915,1033,0.915,1034,0.915,1035,0.915,1036,0.915,1037,0.915,1038,0.915,1039,0.915,1040,1.401,1041,0.915,1042,0.915,1043,0.915,1044,0.915,1045,0.915,1046,0.915,1047,0.915,1048,1.401,1049,1.907,1050,0.84,1051,0.84,1052,0.915,1053,0.915,1054,0.915,1055,1.286,1056,0.915,1057,0.915,1058,0.915,1059,0.915,1060,0.915,1061,1.702,1062,0.915,1063,0.915,1064,0.915,1065,0.915,1066,0.915,1067,0.84,1068,1.401,1069,0.915,1070,0.915,1071,1.401,1072,0.915,1073,0.84,1074,0.915,1075,0.773,1076,1.401,1077,0.915,1078,1.286,1079,0.84,1080,0.51,1081,1.401,1082,1.401,1083,1.183]],["title/guards/RoleGuard.html",[1894,2.312,1895,2.312]],["body/guards/RoleGuard.html",[3,0.442,4,0.383,8,0.326,10,0.667,12,0.644,14,0.681,16,0.431,17,0.569,19,1.7,25,0.679,32,0.033,158,0.271,168,1.585,169,0.679,184,1.721,185,2.958,186,0.841,187,1.585,189,1.721,190,0.679,191,0.457,192,1.458,193,2.03,198,0.844,199,0.531,203,1.432,205,0.679,210,1.122,214,3.532,220,0.602,285,1.694,288,0.955,293,0.844,304,1.026,308,0.565,311,0.383,314,1.441,323,2.03,326,0.442,327,0.442,331,0.902,337,0.933,363,1.161,370,0.942,378,0.942,379,0.844,380,3.83,389,2.207,425,0.027,426,0.027,431,1.441,451,1.84,457,1.229,490,2.014,515,1.565,516,3.83,595,1.585,605,1.565,633,1.998,639,2.445,682,1.585,907,1.327,968,1.848,969,1.848,1027,1.7,1031,1.721,1080,1.539,1091,2.958,1105,3.393,1119,2.958,1128,4.253,1133,3.331,1146,4.569,1151,2.199,1152,4.253,1154,3.978,1184,3.978,1479,3.331,1525,3.83,1544,2.958,1762,3.83,1895,3.978,1896,4.589,1897,3.83,1898,5.48,1899,5.48,1900,5.48,1901,5.48,1902,6.069,1903,4.589,1904,5.48,1905,6.069,1906,6.069,1907,6.069,1908,4.589,1909,5.48,1910,5.48,1911,5.48,1912,5.48,1913,4.589,1914,4.589,1915,5.48,1916,5.48,1917,4.589,1918,4.589]],["title/interfaces/SegmentoHorario.html",[231,0.847,587,0.266]],["body/interfaces/SegmentoHorario.html",[3,0.2,4,0.173,8,0.226,10,0.581,12,0.619,13,0.257,14,0.608,16,0.426,17,0.636,18,0.552,25,0.698,32,0.033,37,0.797,73,0.909,91,1.142,123,1.186,145,1.961,155,1.085,156,1.085,157,0.708,158,0.122,159,0.265,169,0.725,186,0.288,190,0.394,191,0.411,198,0.595,199,0.39,203,0.507,205,0.537,206,0.917,210,0.945,218,0.738,220,0.564,224,2.126,227,0.72,228,1.724,231,1.312,239,0.507,242,1.029,253,0.595,267,0.32,281,1.243,284,1.053,288,0.79,291,0.987,293,0.667,295,1.099,298,0.846,304,0.595,308,0.373,311,0.173,325,2.167,326,0.523,327,0.2,331,0.99,337,0.873,344,0.652,363,1.095,367,1.361,369,1.478,370,0.653,372,2.378,378,0.653,379,0.595,425,0.016,426,0.016,428,0.652,429,0.507,431,0.652,437,0.6,439,0.769,441,0.652,446,1.118,448,0.836,451,0.999,453,0.92,454,1.961,455,1.74,457,0.867,461,1.214,465,1.118,471,1.557,472,1.43,475,1.281,477,1.085,484,1.691,492,0.6,493,0.836,515,0.708,519,0.836,522,0.836,523,0.836,529,1.281,536,1.557,540,0.769,550,0.769,565,1.484,579,1.935,587,0.442,588,0.652,589,0.769,590,1.569,591,2.231,592,1.395,593,2.05,594,2.05,595,0.92,596,1.395,597,1.281,598,2.052,599,0.769,600,1.395,601,0.911,602,0.6,603,0.708,604,0.769,605,0.708,606,0.911,607,0.911,608,0.911,609,0.911,610,0.911,611,0.911,612,0.911,613,0.708,614,0.911,615,1.013,616,0.911,617,0.911,618,0.911,619,0.911,620,0.911,621,0.911,622,0.911,623,0.911,624,0.911,625,0.911,626,0.911,627,0.911,628,0.911,629,0.911,630,0.911,631,0.911,632,0.911,633,1.75,634,0.911,635,0.911,636,0.911,637,0.911,638,0.911,639,1.557,640,0.911,641,0.911,642,1.395,643,2.323,644,0.911,645,0.911,646,0.911,647,0.911,648,2.508,649,2.323,650,2.133,651,2.382,652,2.508,653,2.591,654,2.591,655,2.252,656,1.673,657,2.752,658,1.846,659,1.846,660,2.035,661,1.843,662,1.855,663,1.935,664,1.896,665,2.252,666,2.252,667,0.911,668,2.591,669,2.398,670,2.398,671,2.398,672,2.382,673,2.331,674,2.331,675,2.483,676,2.27,677,1.395,678,0.911,679,1.432,680,1.178,681,1.697,682,1.425,683,1.395,684,1.697,685,0.911,686,1.697,687,0.911,688,0.911,689,1.902,690,0.911,691,2.382,692,2.472,693,0.911,694,0.911,695,0.911,696,1.902,697,0.911,698,1.697,699,0.911,700,1.395,701,0.911,702,0.911,703,1.395,704,1.395,705,0.911,706,1.697,707,1.432,708,1.432,709,1.432,710,0.911,711,0.911,712,0.836,713,0.911,714,2.76,715,2.827,716,0.911,717,0.911,718,0.911,719,0.911,720,0.911,721,0.911,722,0.911,723,0.911,724,2.679,725,0.911,726,0.911,727,2.431,728,0.911,729,0.911,730,0.911,731,0.911,732,0.911,733,1.365,734,0.911,735,0.911,736,0.911,737,0.911,738,0.911,739,1.961,740,0.911,741,0.911,742,0.911,743,0.911,744,0.911,745,2.05,746,0.911,747,0.911,748,0.911,749,0.911,750,0.911,751,1.395,752,0.911,753,0.911,754,0.911,755,0.911,756,0.911,757,0.911,758,0.911,759,0.911,760,0.911,761,0.911,762,0.911,763,0.911,764,0.911,765,0.911,766,0.911,767,0.911,768,0.911,769,0.911,770,0.911,771,0.911,772,0.911,773,0.911,774,0.911,775,0.911,776,0.911,777,0.911,778,0.911,779,0.911,780,0.911,781,0.911,782,0.911,783,1.395,784,0.836,785,2.05,786,2.05,787,0.911,788,0.911,789,0.911,790,0.911,791,0.911,792,0.911,793,0.911,794,0.911,795,0.911,796,1.882,797,2.05,798,0.911,799,0.911,800,0.911,801,0.911,802,0.911,803,0.911,804,0.911,805,0.911,806,0.836,807,0.911,808,0.911,809,0.911,810,0.911,811,0.911,812,0.911,813,0.911,814,0.911,815,0.911,816,0.911,817,0.911,818,0.911,819,0.911,820,0.911,821,0.911,822,0.911,823,0.911,824,0.911,825,0.911,826,0.911,827,2.126,828,0.911,829,0.911,830,0.911,831,0.911,832,0.911,833,0.911,834,0.911,835,0.911,836,0.911,837,1.281,838,0.911,839,0.911,840,0.911,841,0.911,842,0.911,843,0.911,844,0.911,845,0.911,846,0.911,847,0.911,848,0.911,849,0.911,850,0.911,851,0.911,852,0.911,853,0.911,854,0.911,855,0.911,856,0.911,857,0.911,858,0.911,859,0.911,860,0.911,861,0.911,862,0.911,863,0.911,864,0.911,865,0.911,866,0.911,867,0.911,868,0.911,869,0.911,870,0.911,871,0.911,872,0.911,873,0.911,874,0.911,875,2.163,876,0.911,877,0.911,878,0.911,879,0.911,880,2.163,881,0.911,882,2.493,883,0.911,884,2.067,885,2.27,886,1.395,887,2.05,888,1.697,889,1.395,890,1.697,891,1.902,892,0.911,893,1.697,894,1.697,895,0.911,896,2.252,897,1.697,898,0.999,899,0.911,900,0.911,901,2.05,902,0.911,903,0.911,904,0.911,905,2.323,906,1.902,907,1.531,908,0.911,909,0.911,910,0.836,911,0.911,912,2.539,913,2.508,914,0.911,915,2.726,916,0.911,917,1.907,918,2.252,919,2.05,920,2.163,921,2.05,922,2.05,923,2.665,924,0.911,925,2.252,926,2.163,927,2.163,928,2.163,929,1.902,930,0.911,931,2.252,932,1.902,933,1.697,934,1.697,935,1.395,936,0.911,937,0.911,938,0.911,939,0.911,940,0.911,941,0.911,942,0.911,943,0.911,944,0.911,945,0.911,946,0.911,947,0.911,948,2.05,949,2.508,950,0.911,951,2.05,952,0.911,953,0.911,954,0.911,955,0.769,956,0.911,957,0.911,958,0.911,959,1.281,960,0.911,961,1.557,962,1.178,963,1.178,964,0.836,965,1.605,966,2.163,967,1.902,968,1.281,969,0.836,970,0.911,971,0.911,972,0.836,973,0.836,974,1.281,975,0.911,976,1.395,977,0.911,978,0.911,979,0.769,980,0.911,981,0.911,982,0.911,983,1.214,984,0.911,985,0.911,986,0.911,987,0.911,988,0.911,989,0.911,990,0.911,991,0.911,992,0.911,993,0.911,994,0.911,995,0.911,996,0.911,997,0.92,998,1.085,999,1.395,1000,1.085,1001,1.395,1002,1.085,1003,1.281,1004,0.911,1005,1.178,1006,0.911,1007,0.911,1008,0.999,1009,0.911,1010,2.05,1011,2.05,1012,2.05,1013,1.697,1014,0.911,1015,1.395,1016,1.281,1017,1.395,1018,1.395,1019,1.395,1020,0.911,1021,1.395,1022,0.911,1023,0.911,1024,1.697,1025,1.902,1026,2.05,1027,1.178,1028,0.911,1029,1.697,1030,0.652,1031,0.652,1032,0.911,1033,0.911,1034,0.911,1035,0.911,1036,0.911,1037,0.911,1038,0.911,1039,0.911,1040,1.395,1041,0.911,1042,0.911,1043,0.911,1044,0.911,1045,0.911,1046,0.911,1047,0.911,1048,1.395,1049,1.902,1050,0.836,1051,0.836,1052,0.911,1053,0.911,1054,0.911,1055,1.281,1056,0.911,1057,0.911,1058,0.911,1059,0.911,1060,0.911,1061,1.697,1062,0.911,1063,0.911,1064,0.911,1065,0.911,1066,0.911,1067,0.836,1068,1.395,1069,0.911,1070,0.911,1071,1.395,1072,0.911,1073,0.836,1074,0.911,1075,0.769,1076,1.395,1077,0.911,1078,1.281,1079,0.836,1080,0.507,1081,0.911,1082,0.911,1083,0.769]],["title/components/SegmentoModalComponent.html",[0,0.226,30,0.921]],["body/components/SegmentoModalComponent.html",[0,0.374,1,1.052,2,1.488,3,0.35,4,0.303,6,1.24,7,1.24,8,0.258,10,0.652,11,1.754,12,0.521,13,0.692,14,0.614,16,0.459,17,0.653,18,0.968,19,1.756,20,2.527,21,1.24,22,1.851,23,1.851,24,1.37,25,0.692,26,1.37,27,1.524,30,1.615,32,0.033,37,0.451,73,0.812,99,2.25,116,1.24,123,1.148,158,0.215,159,0.395,168,1.37,176,2.936,184,1.142,186,0.504,187,1.843,189,1.142,190,0.653,191,0.517,192,0.968,197,2.747,199,0.544,205,0.692,206,0.86,211,4.055,218,0.76,219,3.179,220,0.674,226,3.956,227,1.022,228,0.968,229,4.311,231,1.486,233,2.491,234,3.045,235,3.238,239,1.289,242,1.261,253,0.812,261,2.108,267,0.915,268,1.37,269,1.261,284,0.973,285,1.37,287,1.616,288,0.892,289,2.847,293,0.915,294,2.747,295,1.011,298,1.261,304,0.987,307,2.94,308,0.538,311,0.303,312,0.968,313,1.347,314,1.142,321,4.648,323,1.347,325,1.756,326,0.35,327,0.35,331,0.892,344,1.656,357,4.205,360,2.491,367,1.142,368,1.743,369,1.905,386,4.205,390,1.953,394,1.24,395,1.616,396,1.616,397,1.24,398,1.905,399,1.24,400,1.24,401,1.052,402,1.24,403,1.052,404,1.24,405,0.968,406,1.24,407,1.052,408,1.24,409,1.052,410,1.24,411,1.052,412,1.24,413,1.24,414,1.052,415,1.24,416,1.905,417,0.968,418,1.24,419,1.052,420,1.24,421,1.052,422,0.889,423,1.24,424,1.24,425,0.023,426,0.023,435,1.909,439,2.272,455,1.488,465,1.37,494,3.055,496,2.64,584,3.827,602,1.052,613,2.026,615,1.029,656,1.609,673,1.465,674,1.465,675,1.465,676,1.465,837,2.393,885,1.909,1016,1.909,1079,1.909,1114,2.272,1151,2.677,1168,3.238,1194,3.055,1195,3.44,1316,3.056,1323,3.056,1339,3.055,1348,3.6,1350,2.108,1351,3.238,1353,2.747,1361,2.491,1379,3.056,1381,3.055,1391,2.108,1394,2.108,1395,2.747,1422,2.747,1435,2.108,1444,3.036,1445,3.036,1446,3.036,1447,3.036,1448,3.036,1583,3.956,1679,2.108,1680,3.44,1681,3.44,1689,3.6,1693,3.055,1694,3.6,1696,3.899,1697,3.036,1716,3.036,1728,3.6,1731,2.108,1732,2.344,1761,3.055,1792,3.956,1831,4.055,1849,3.956,1850,3.036,1862,3.036,1919,5.344,1920,4.739,1921,6.049,1922,5.272,1923,5.586,1924,5.793,1925,5.939,1926,4.739,1927,3.637,1928,3.637,1929,3.637,1930,3.637,1931,3.637,1932,3.637,1933,3.637,1934,5.272,1935,5.272,1936,3.637,1937,3.637,1938,3.637,1939,3.637,1940,5.272,1941,3.637,1942,3.637,1943,3.637,1944,3.637,1945,3.637,1946,3.637,1947,3.637,1948,3.637,1949,3.637,1950,3.637,1951,3.637,1952,3.637,1953,3.637,1954,3.637,1955,3.637,1956,3.637,1957,3.637,1958,3.637,1959,3.637,1960,3.637,1961,3.637,1962,4.739,1963,4.739,1964,4.739,1965,4.739,1966,4.739,1967,3.637,1968,4.739,1969,4.739,1970,4.739,1971,3.637,1972,3.637,1973,3.637]],["title/interfaces/Toast.html",[422,0.779,587,0.266]],["body/interfaces/Toast.html",[3,0.623,4,0.388,8,0.33,10,0.67,12,0.684,13,0.576,14,0.67,16,0.453,17,0.685,32,0.033,158,0.274,159,0.461,169,0.576,191,0.54,197,2.697,198,0.851,199,0.519,218,0.73,220,0.607,291,0.939,295,0.792,298,1.238,304,0.871,306,2.259,308,0.532,311,0.388,323,1.724,326,0.532,327,0.448,337,0.94,340,2.999,368,2.648,379,0.983,388,1.724,389,2.374,422,1.596,425,0.027,426,0.027,429,1.137,431,1.461,453,1.345,470,2.864,492,1.345,587,0.388,588,1.461,590,1.704,595,1.598,598,1.724,599,1.724,605,1.587,615,0.792,682,1.345,739,1.724,1106,1.461,1143,3.561,1144,3.561,1153,2.23,1163,2.999,1183,2.363,1290,2.445,1321,3.027,1361,3.098,1472,2.697,1731,2.697,1974,3.377,1975,3.377,1976,3.884,1977,3.884,1978,3.884,1979,3.884,1980,3.884,1981,3.884,1982,3.884,1983,3.884,1984,3.884,1985,3.884,1986,3.884,1987,3.884,1988,3.884,1989,4.612,1990,3.884,1991,3.884,1992,3.884]],["title/components/ToastComponent.html",[0,0.226,421,0.921]],["body/components/ToastComponent.html",[0,0.396,1,1.186,2,1.607,3,0.563,4,0.342,5,2.066,6,1.398,7,1.398,8,0.291,10,0.66,11,1.924,12,0.673,13,0.634,14,0.683,16,0.396,17,0.634,19,1.895,21,1.398,22,1.878,23,1.878,24,1.479,25,0.634,26,1.479,27,1.612,30,1.186,32,0.033,37,0.691,39,2.066,40,2.553,43,2.348,44,2.066,46,2.066,47,2.066,49,2.246,56,3.232,57,3.232,60,2.066,73,0.859,75,2.388,77,2.066,80,2.246,81,2.246,90,2.689,98,3.221,104,2.066,108,2.066,116,1.745,158,0.344,159,0.427,168,1.479,169,0.691,184,1.751,187,1.688,189,1.288,190,0.691,191,0.465,192,1.091,198,0.859,199,0.427,205,0.508,206,0.631,220,0.562,227,0.631,242,1.091,267,0.925,268,1.186,269,1.091,295,0.871,304,0.958,308,0.563,311,0.342,312,1.091,326,0.395,327,0.395,337,0.698,379,0.859,388,1.895,389,2.061,390,1.895,394,1.398,395,1.745,396,1.745,397,1.398,398,1.991,399,1.398,400,1.398,401,1.186,402,1.398,403,1.186,404,1.398,405,1.091,406,1.398,407,1.186,408,1.398,409,1.186,410,1.398,411,1.186,412,1.398,413,1.398,414,1.186,415,1.398,416,1.991,417,1.091,418,1.398,419,1.186,420,1.398,421,1.688,422,1.609,423,1.398,424,1.398,425,0.025,426,0.025,429,1.251,430,4.655,450,4.874,453,1.738,459,4.27,464,5.115,492,1.186,496,2.976,525,3.423,526,3.423,527,3.423,528,3.423,549,2.447,552,3.594,561,2.673,1106,1.952,1140,1.799,1153,2.673,1183,2.066,1198,2.931,1199,3.594,1200,2.931,1290,3.069,1472,2.377,1774,3.594,1775,3.95,1776,3.232,1777,3.594,1975,2.976,1993,3.423,1994,5.576,1995,5.576,1996,5.576,1997,5.576,1998,4.1,1999,5.116,2000,4.1,2001,6.128,2002,4.1,2003,5.116,2004,4.1,2005,4.1,2006,4.1,2007,5.116,2008,4.1,2009,4.1,2010,4.1]],["title/injectables/ToastService.html",[595,0.921,1106,1]],["body/injectables/ToastService.html",[3,0.624,4,0.376,8,0.32,10,0.678,12,0.696,13,0.672,14,0.663,16,0.45,17,0.748,32,0.033,158,0.266,159,0.452,168,1.569,169,0.721,187,1.745,189,1.417,190,0.559,191,0.529,192,1.2,197,3.145,198,0.896,199,0.533,205,0.672,206,0.836,218,0.721,220,0.663,268,1.682,269,1.548,291,0.93,295,0.768,298,1.443,304,0.845,306,2.236,308,0.523,311,0.376,323,1.672,326,0.523,327,0.435,337,0.923,340,2.908,368,2.163,379,0.977,388,1.672,389,2.487,422,1.611,425,0.027,426,0.027,429,1.326,431,1.417,453,1.569,470,2.863,492,1.305,587,0.376,590,1.569,595,1.569,598,1.672,599,2.01,605,1.539,615,0.923,682,1.569,739,1.672,1106,1.704,1143,2.908,1144,2.908,1153,2.6,1163,3.497,1183,2.349,1290,2.851,1321,2.893,1361,3.058,1472,2.615,1731,3.145,1974,3.275,1975,3.275,1976,4.528,1977,4.528,1978,4.856,1979,4.528,1980,4.528,1981,4.528,1982,4.528,1983,3.766,1984,3.766,1985,3.766,1986,3.766,1987,4.528,1988,3.766,1989,4.528,1990,3.766,1991,3.766,1992,5.038,2011,3.766,2012,5.425,2013,4.512,2014,4.512,2015,4.512,2016,4.512]],["title/coverage.html",[2017,3.622]],["body/coverage.html",[0,0.466,1,1.378,8,0.338,9,3.978,30,1.378,32,0.033,37,0.59,100,2.582,123,0.892,186,0.661,191,0.397,231,1.268,321,3.459,401,1.378,403,1.378,405,1.268,407,1.378,409,1.378,411,1.378,414,1.378,417,1.268,419,1.378,421,1.378,422,1.165,425,0.028,426,0.028,427,3.978,461,1.497,465,1.378,472,1.165,484,1.378,587,0.546,589,2.405,595,1.62,615,0.811,650,1.92,784,1.92,884,2.258,907,1.378,1083,1.765,1084,4.068,1106,1.497,1122,3.072,1142,3.072,1238,3.459,1239,4.678,1315,3.978,1459,3.978,1544,3.612,1596,3.978,1597,3.978,1598,3.978,1617,3.459,1619,3.459,1678,3.978,1679,3.562,1783,4.068,1784,3.978,1847,3.978,1894,3.459,1895,3.459,1897,3.978,1919,3.978,1974,4.068,1993,3.978,2017,3.978,2018,4.765,2019,4.765,2020,4.765,2021,4.765,2022,4.765,2023,4.765,2024,4.765,2025,4.765,2026,4.765,2027,3.978,2028,4.765,2029,3.978,2030,4.765,2031,4.765,2032,4.765,2033,4.765,2034,4.765,2035,4.765,2036,4.765,2037,4.765,2038,5.604,2039,4.765,2040,4.765,2041,5.604,2042,4.765,2043,4.765,2044,4.765,2045,4.765,2046,4.765,2047,4.765,2048,4.765,2049,4.765,2050,4.765,2051,5.953,2052,5.953,2053,5.604,2054,4.765,2055,4.765,2056,4.765]],["title/dependencies.html",[2057,1.934,2058,3.196]],["body/dependencies.html",[8,0.357,32,0.033,311,0.42,312,1.339,313,1.865,316,3.654,317,3.654,318,3.654,319,3.654,320,3.654,425,0.029,426,0.029,490,2.209,492,1.456,597,2.028,1505,3.245,1506,3.245,2058,4.202,2059,5.034,2060,6.515,2061,5.034,2062,5.785,2063,5.785,2064,5.034,2065,5.034,2066,5.034,2067,6.354,2068,5.034,2069,5.034,2070,5.034,2071,5.034,2072,5.034,2073,5.034,2074,5.034,2075,5.034,2076,5.034,2077,5.034,2078,5.034]],["title/miscellaneous/enumerations.html",[2079,1.717,2080,3.196]],["body/miscellaneous/enumerations.html",[12,0.566,16,0.366,32,0.031,37,0.638,73,0.794,158,0.304,199,0.43,218,0.638,269,1.56,425,0.029,426,0.029,465,1.49,589,1.909,591,2.076,679,1.909,680,1.909,682,1.777,1078,2.076,2079,3.321,2080,4.301,2081,5.153]],["title/index.html",[158,0.157,2082,2.665,2083,2.665]],["body/index.html",[0,0.429,4,0.413,19,1.834,32,0.028,135,5.389,190,0.614,352,3.365,425,0.028,426,0.028,550,1.834,615,0.843,712,2.549,972,1.995,973,1.995,1600,4.133,1776,2.87,2057,3.594,2084,4.952,2085,5.731,2086,4.952,2087,6.048,2088,6.048,2089,4.133,2090,4.952,2091,4.952,2092,5.731,2093,4.952,2094,4.952,2095,4.952,2096,4.952,2097,4.952,2098,4.952,2099,4.952,2100,4.952,2101,4.952,2102,4.952,2103,4.952,2104,6.048,2105,6.048,2106,4.952,2107,6.22,2108,4.952,2109,4.952,2110,4.952,2111,4.952,2112,5.731,2113,5.731,2114,6.22,2115,4.952,2116,5.731,2117,5.731,2118,4.952,2119,4.952,2120,4.952,2121,4.952,2122,5.731,2123,4.952,2124,4.952,2125,4.952,2126,4.952,2127,6.048,2128,4.952,2129,4.952,2130,3.594,2131,4.952]],["title/modules.html",[2132,3.622]],["body/modules.html",[32,0.029,425,0.029,426,0.029,2132,4.351]],["title/overview.html",[2130,3.149]],["body/overview.html",[2,1.63,32,0.029,73,0.799,425,0.029,426,0.029,588,1.63,733,1.381,806,2.091,827,1.77,1894,3.768,2011,4.333,2130,3.768]],["title/properties.html",[159,0.319,2057,1.934]],["body/properties.html",[32,0.03,159,0.434,425,0.029,426,0.029,2089,4.344,2133,5.204]],["title/miscellaneous/variables.html",[2079,1.717,2134,3.196]],["body/miscellaneous/variables.html",[14,0.567,16,0.366,32,0.032,158,0.304,191,0.43,268,1.492,269,1.372,277,3.744,425,0.029,426,0.029,429,1.261,1460,3.325,2027,4.306,2029,4.897,2079,3.325,2134,4.306,2135,5.158,2136,5.158,2137,5.158]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":37,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["0.0.0",{"_index":2133,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":113,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.14.10",{"_index":2078,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":89,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.2s",{"_index":105,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.3s",{"_index":56,"title":{},"body":{"components/AgendaComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["0.4rem",{"_index":1231,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.5",{"_index":1771,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.5rem",{"_index":131,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.75rem",{"_index":59,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.875rem",{"_index":1209,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.8rem",{"_index":1237,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.9rem",{"_index":83,"title":{},"body":{"components/AgendaComponent.html":{}}}],["0/13",{"_index":2035,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":874,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["02",{"_index":807,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["03",{"_index":826,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["04",{"_index":854,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["05",{"_index":783,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["06",{"_index":864,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["07",{"_index":816,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["08",{"_index":794,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["08:00:00",{"_index":894,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["09",{"_index":836,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["09:00:00",{"_index":886,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1",{"_index":73,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g",{"_index":1286,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1).touppercase",{"_index":1536,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1.1.26",{"_index":2066,"title":{},"body":{"dependencies.html":{}}}],["1.12.0",{"_index":2072,"title":{},"body":{"dependencies.html":{}}}],["1.1rem",{"_index":79,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{}}}],["1.25rem",{"_index":1666,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1.2rem",{"_index":142,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{}}}],["1.4.9",{"_index":2069,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":1676,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1.5rem",{"_index":45,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1/1",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":2053,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2052,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2048,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2050,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2054,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1544,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"coverage.html":{}}}],["100",{"_index":100,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1201,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1001",{"_index":725,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1002",{"_index":731,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1003",{"_index":737,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1004",{"_index":743,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1005",{"_index":749,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1006",{"_index":755,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1007",{"_index":760,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1008",{"_index":765,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1009",{"_index":770,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["100vh",{"_index":1196,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["1010",{"_index":775,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["101010101",{"_index":868,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1024px",{"_index":1216,"title":{},"body":{"components/DashboardComponent.html":{}}}],["10px",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["11",{"_index":827,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"overview.html":{}}}],["111111111",{"_index":777,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["116726459",{"_index":757,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["12",{"_index":806,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"overview.html":{}}}],["1200px",{"_index":35,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{}}}],["123",{"_index":787,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["12345678",{"_index":1531,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["12:00:00",{"_index":887,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["13/14",{"_index":2024,"title":{},"body":{"coverage.html":{}}}],["13/52",{"_index":2047,"title":{},"body":{"coverage.html":{}}}],["13538951k",{"_index":728,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["14",{"_index":784,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["14/19",{"_index":2026,"title":{},"body":{"coverage.html":{}}}],["1400px",{"_index":1202,"title":{},"body":{"components/DashboardComponent.html":{}}}],["145092035",{"_index":734,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["14:00:00",{"_index":888,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["150px",{"_index":1235,"title":{},"body":{"components/DashboardComponent.html":{}}}],["151205682",{"_index":746,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["153",{"_index":111,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["159",{"_index":847,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["15:00:00",{"_index":890,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["16",{"_index":2049,"title":{},"body":{"coverage.html":{}}}],["16/17",{"_index":2037,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":865,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["17/19",{"_index":2046,"title":{},"body":{"coverage.html":{}}}],["170401697",{"_index":762,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["171939747",{"_index":767,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["17:00:00",{"_index":889,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["18.2.0",{"_index":2060,"title":{},"body":{"dependencies.html":{}}}],["18.2.12",{"_index":2090,"title":{},"body":{"index.html":{}}}],["18:00:00",{"_index":891,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["19",{"_index":817,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["19.0.0",{"_index":2070,"title":{},"body":{"dependencies.html":{}}}],["195174571",{"_index":752,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["196450963",{"_index":721,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1975",{"_index":845,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1978",{"_index":805,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1980",{"_index":825,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1985",{"_index":793,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1988",{"_index":853,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["198848395",{"_index":772,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1990",{"_index":782,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["199072412",{"_index":740,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1991",{"_index":873,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1992",{"_index":815,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1993",{"_index":863,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1995",{"_index":835,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1fr",{"_index":121,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1px",{"_index":101,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1rem",{"_index":60,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["2",{"_index":733,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"overview.html":{}}}],["2.3.0",{"_index":2076,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":1675,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["2/2",{"_index":2033,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2044,"title":{},"body":{"coverage.html":{}}}],["20/21",{"_index":2034,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":1994,"title":{},"body":{"components/ToastComponent.html":{}}}],["2001",{"_index":780,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2002",{"_index":791,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2003",{"_index":803,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2004",{"_index":813,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2005",{"_index":823,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2006",{"_index":833,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2007",{"_index":843,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2008",{"_index":851,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2009",{"_index":861,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2010",{"_index":871,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2024",{"_index":882,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["20px",{"_index":568,"title":{},"body":{"components/AppComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["21/22",{"_index":2042,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":855,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["222222222",{"_index":788,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["225",{"_index":112,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["23",{"_index":795,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["24",{"_index":881,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["24/25",{"_index":2022,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":884,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["26",{"_index":893,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["27",{"_index":896,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["28",{"_index":875,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["29",{"_index":901,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2c5282",{"_index":148,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["2d3748",{"_index":76,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["2f855a",{"_index":1593,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["2px",{"_index":52,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{}}}],["2rem",{"_index":40,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/ToastComponent.html":{}}}],["3",{"_index":739,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["3.5rem",{"_index":1233,"title":{},"body":{"components/DashboardComponent.html":{}}}],["3/3",{"_index":2055,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":837,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["30*60000",{"_index":1019,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["3000",{"_index":1990,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["31/33",{"_index":2032,"title":{},"body":{"coverage.html":{}}}],["3182ce",{"_index":146,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["321",{"_index":819,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["33",{"_index":2051,"title":{},"body":{"coverage.html":{}}}],["333333333",{"_index":800,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["35px",{"_index":563,"title":{},"body":{"components/AppComponent.html":{}}}],["38a169",{"_index":554,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["3px",{"_index":109,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["3rem",{"_index":1665,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["4",{"_index":745,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["400px",{"_index":1773,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["40px",{"_index":1211,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4299e1",{"_index":108,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["444444444",{"_index":810,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["456",{"_index":799,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["48",{"_index":1964,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["48bb78",{"_index":552,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ToastComponent.html":{}}}],["4a5568",{"_index":88,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["4px",{"_index":53,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["4rem",{"_index":1227,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["5",{"_index":751,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["5/5",{"_index":2038,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1212,"title":{},"body":{"components/DashboardComponent.html":{}}}],["500",{"_index":81,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["500px",{"_index":94,"title":{},"body":{"components/AgendaComponent.html":{}}}],["53",{"_index":2039,"title":{},"body":{"coverage.html":{}}}],["555",{"_index":724,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["555555555",{"_index":820,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["56",{"_index":1512,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["576px",{"_index":1230,"title":{},"body":{"components/DashboardComponent.html":{}}}],["5px",{"_index":575,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["5rem",{"_index":1660,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["6",{"_index":1073,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["6.1.15",{"_index":2067,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2041,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":1203,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["60000",{"_index":1944,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["600px",{"_index":1667,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["640px",{"_index":1222,"title":{},"body":{"components/DashboardComponent.html":{}}}],["654",{"_index":829,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["66",{"_index":2043,"title":{},"body":{"coverage.html":{}}}],["666666666",{"_index":830,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["6px",{"_index":104,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["6rem",{"_index":1214,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["7",{"_index":1075,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["7.8.0",{"_index":2071,"title":{},"body":{"dependencies.html":{}}}],["7/13",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["718096",{"_index":84,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["73",{"_index":2025,"title":{},"body":{"coverage.html":{}}}],["753",{"_index":857,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["768px",{"_index":1224,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["777777777",{"_index":840,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["789",{"_index":809,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["7px",{"_index":574,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":897,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["8).touppercase",{"_index":1748,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["800px",{"_index":538,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["852",{"_index":867,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["888888888",{"_index":848,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["89",{"_index":2045,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":48,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["9",{"_index":898,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["90",{"_index":1772,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{}}}],["900px",{"_index":1585,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["90vh",{"_index":1891,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["92",{"_index":2023,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":2036,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1783,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{},"coverage.html":{}}}],["951",{"_index":877,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["96",{"_index":2021,"title":{},"body":{"coverage.html":{}}}],["987",{"_index":839,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["999999999",{"_index":858,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["9]{7,8}[0",{"_index":1521,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["9ae6b4",{"_index":1594,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["9kk]$/.test(cleanrut",{"_index":1522,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["9kk]$/.test(rut",{"_index":1534,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["9kk]/g",{"_index":1283,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["a0aec0",{"_index":583,"title":{},"body":{"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["a:hover",{"_index":1659,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{}}}],["abc123",{"_index":727,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["abierto",{"_index":1621,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["abre",{"_index":356,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["absolute",{"_index":566,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["abstractcontrol",{"_index":1493,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["acceder",{"_index":1152,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["acceso",{"_index":1154,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["accessors",{"_index":1102,"title":{},"body":{"components/DashboardComponent.html":{}}}],["actions",{"_index":1322,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["activar",{"_index":1912,"title":{},"body":{"guards/RoleGuard.html":{}}}],["activatedroutesnapshot",{"_index":1905,"title":{},"body":{"guards/RoleGuard.html":{}}}],["actual",{"_index":389,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["actual_component",{"_index":424,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["actuales",{"_index":1313,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["actualiza",{"_index":261,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["actualizado",{"_index":1440,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["actualizar",{"_index":1342,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["actualmente",{"_index":300,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{}}}],["add",{"_index":550,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"index.html":{}}}],["addfuncionario(funcionario",{"_index":960,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["addpaciente(paciente",{"_index":971,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["addsegmentohorario(segmentohorario",{"_index":1009,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["administra",{"_index":1129,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["administración",{"_index":1636,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["agenda",{"_index":15,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["agenda'},{'name",{"_index":400,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["agendacomponent",{"_index":1,"title":{"components/AgendaComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["agrega",{"_index":955,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["agregar",{"_index":957,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["ahora",{"_index":1639,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["al",{"_index":267,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["alert",{"_index":1589,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["alert('error",{"_index":382,"title":{},"body":{"components/AgendaComponent.html":{}}}],["alert('este",{"_index":1274,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["alert('por",{"_index":358,"title":{},"body":{"components/AgendaComponent.html":{}}}],["align",{"_index":68,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["allowed",{"_index":1326,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["already",{"_index":975,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["alterna",{"_index":257,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["ana",{"_index":747,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["ana.garcia@ejemplo.com",{"_index":750,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["andres.silva@ejemplo.com",{"_index":844,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["andrés",{"_index":841,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["angular",{"_index":2087,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2059,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":312,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2061,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":311,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":313,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2062,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":490,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"dependencies.html":{}}}],["animation",{"_index":1774,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["antes",{"_index":1446,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["antonio",{"_index":801,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["antonio.vargas@ejemplo.com",{"_index":804,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["apellido",{"_index":1111,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["apellidos",{"_index":659,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["aplicación",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["app.component.css",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":436,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":401,"title":{"components/AppComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2029,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apple",{"_index":542,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["application",{"_index":2097,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":2136,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":194,"title":{},"body":{"components/AgendaComponent.html":{}}}],["around",{"_index":1232,"title":{},"body":{"components/DashboardComponent.html":{}}}],["artifacts",{"_index":2108,"title":{},"body":{"index.html":{}}}],["asegurar",{"_index":1857,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["asigna",{"_index":959,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["asignación",{"_index":1246,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["asignar",{"_index":1247,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["assignpaciente",{"_index":1302,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["assignsegmentotopaciente(pacid",{"_index":1052,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["async",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["atenciones",{"_index":1651,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["atención",{"_index":325,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["autenticado",{"_index":1121,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["authorizednavitems",{"_index":1103,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["auto",{"_index":38,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["autoincrement",{"_index":655,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["automatically",{"_index":2098,"title":{},"body":{"index.html":{}}}],["automáticamente",{"_index":1984,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["autorizados",{"_index":1139,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["avatar",{"_index":1210,"title":{},"body":{"components/DashboardComponent.html":{}}}],["avenida",{"_index":797,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["await",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["backdrop",{"_index":1770,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["background",{"_index":43,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["backgroundcolor",{"_index":1269,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["bar",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["basadas",{"_index":1901,"title":{},"body":{"guards/RoleGuard.html":{}}}],["basado",{"_index":1155,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"interfaces/NavItem.html":{}}}],["base",{"_index":454,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["bee3f8",{"_index":1664,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["before",{"_index":1518,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["behavior",{"_index":1631,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["behaviorsubject",{"_index":598,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["behaviorsubject(null",{"_index":1979,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["being",{"_index":711,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["between",{"_index":67,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["block",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{}}}],["body",{"_index":1779,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["boolean",{"_index":284,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["border",{"_index":46,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["bordercolor",{"_index":1270,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["bottom",{"_index":49,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["box",{"_index":50,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["browser",{"_index":2063,"title":{},"body":{"dependencies.html":{}}}],["btn",{"_index":86,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{}}}],["btn:disabled",{"_index":1325,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["btn:hover",{"_index":546,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{}}}],["build",{"_index":2107,"title":{},"body":{"index.html":{}}}],["busca",{"_index":1289,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["buscar",{"_index":1250,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["button",{"_index":144,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["button:disabled",{"_index":1780,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["button:hover",{"_index":553,"title":{},"body":{"components/AppComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["buttons",{"_index":1669,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["búsqueda",{"_index":249,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["c/u",{"_index":1962,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["c53030",{"_index":1590,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["calendar",{"_index":133,"title":{},"body":{"components/AgendaComponent.html":{}}}],["calendarcomponent",{"_index":160,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["calendario",{"_index":212,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["calendaroptions",{"_index":161,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["calle",{"_index":786,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cambia",{"_index":1733,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["cambiar",{"_index":1768,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["cambio",{"_index":1743,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["cambios",{"_index":197,"title":{},"body":{"components/AgendaComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["camila",{"_index":869,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["camila.reyes@ejemplo.com",{"_index":872,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["campo",{"_index":1358,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["campos",{"_index":1451,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["canactivate",{"_index":1902,"title":{},"body":{"guards/RoleGuard.html":{}}}],["canactivate(route",{"_index":1904,"title":{},"body":{"guards/RoleGuard.html":{}}}],["cancel",{"_index":1324,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{}}}],["cancela",{"_index":1699,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["cancelando",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["cancelar",{"_index":1339,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["cancelrecovery",{"_index":1688,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["capabilities",{"_index":2125,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":1424,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["características",{"_index":1610,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["card",{"_index":124,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{}}}],["card.selected",{"_index":128,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{}}}],["card:hover",{"_index":126,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{}}}],["cardiología",{"_index":716,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["carga",{"_index":238,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["cargando",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["carlos",{"_index":763,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["carlos.torres@ejemplo.com",{"_index":766,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["carmen",{"_index":735,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["carmen.lopez@ejemplo.com",{"_index":738,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["case",{"_index":1529,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["castro",{"_index":779,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["catch",{"_index":378,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["cbd5e0",{"_index":1587,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{}}}],["center",{"_index":70,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["cerrar",{"_index":1194,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["change",{"_index":2100,"title":{},"body":{"index.html":{}}}],["check",{"_index":973,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"index.html":{}}}],["checkbox",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["checking",{"_index":1918,"title":{},"body":{"guards/RoleGuard.html":{}}}],["checkmark",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["checkmark:after",{"_index":572,"title":{},"body":{"components/AppComponent.html":{}}}],["checkscreensize",{"_index":170,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["child",{"_index":559,"title":{},"body":{"components/AppComponent.html":{}}}],["choice",{"_index":2121,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":1114,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["circle",{"_index":1221,"title":{},"body":{"components/DashboardComponent.html":{}}}],["circle:hover",{"_index":1234,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cit_cita",{"_index":686,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cita",{"_index":461,"title":{"interfaces/Cita.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["citas",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["citas'},{'name",{"_index":404,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["citas.component.css",{"_index":1249,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["citas.component.html",{"_index":1248,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["citascomponent",{"_index":403,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["citassubject",{"_index":620,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["citassubscription",{"_index":438,"title":{},"body":{"components/AppComponent.html":{}}}],["cl",{"_index":1173,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["class",{"_index":327,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["cleanrut",{"_index":1520,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{}}}],["cli",{"_index":2088,"title":{},"body":{"index.html":{}}}],["clic",{"_index":217,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["clickeado",{"_index":222,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["clickinfo",{"_index":221,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["clickinfo.event.extendedprops.segmento",{"_index":1272,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["close",{"_index":1694,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["closeassignmodal",{"_index":1314,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["closemodal",{"_index":1689,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["closeprofilemodal",{"_index":1095,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["code",{"_index":2102,"title":{},"body":{"index.html":{}}}],["coincidan",{"_index":1858,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["coinciden",{"_index":1788,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["colapsada",{"_index":391,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["color",{"_index":75,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["column",{"_index":1218,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["columns",{"_index":117,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["comenzar",{"_index":1638,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["command",{"_index":2122,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":27,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["como",{"_index":1051,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["comparar",{"_index":1859,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["completa",{"_index":1383,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["completed",{"_index":578,"title":{},"body":{"components/AppComponent.html":{}}}],["compodoc/compodoc",{"_index":2065,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":399,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["componente",{"_index":11,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["componentes",{"_index":626,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["components/login",{"_index":1616,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["components/profile",{"_index":1141,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["components/register",{"_index":1618,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["components/toast/toast.component",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["comprueba",{"_index":1913,"title":{},"body":{"guards/RoleGuard.html":{}}}],["con",{"_index":343,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{}}}],["configura",{"_index":1939,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["configuración",{"_index":277,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"miscellaneous/variables.html":{}}}],["confirm('¿est",{"_index":1447,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["confirmación",{"_index":1445,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["confirmar",{"_index":1786,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["confirmpassword",{"_index":1812,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["confirmpassword?.seterrors",{"_index":1824,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["confirmpassword?.seterrors(null",{"_index":1825,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["confirmpassword?.value",{"_index":1823,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["cono",{"_index":1147,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["console.error('error",{"_index":380,"title":{},"body":{"components/AgendaComponent.html":{},"guards/RoleGuard.html":{}}}],["console.error('login",{"_index":1763,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["console.error('registration",{"_index":1886,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["console.error(`error",{"_index":908,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["console.error(err",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["console.error(error",{"_index":1310,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["console.log",{"_index":372,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["console.log('código",{"_index":1749,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["const",{"_index":331,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["constructor",{"_index":184,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["constructor(dbservice",{"_index":185,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/LoginModalComponent.html":{},"guards/RoleGuard.html":{}}}],["constructor(fb",{"_index":1350,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["constructor(private",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["constructor(router",{"_index":1104,"title":{},"body":{"components/DashboardComponent.html":{}}}],["constructor(toastservice",{"_index":1998,"title":{},"body":{"components/ToastComponent.html":{}}}],["container",{"_index":31,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{}}}],["container:hover",{"_index":570,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":65,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["content.hidden",{"_index":97,"title":{},"body":{"components/AgendaComponent.html":{}}}],["contraseña",{"_index":1337,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["contraseñas",{"_index":1787,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["control",{"_index":1418,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["control.errors['email",{"_index":1425,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.errors['minlength",{"_index":1421,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.errors['minlength'].requiredlength",{"_index":1423,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.errors['passwordmismatch",{"_index":1832,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["control.errors['pattern",{"_index":1426,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.errors['required",{"_index":1420,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.get('confirmpassword')?.value",{"_index":1871,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["control.get('password')?.value",{"_index":1870,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["control.markastouched",{"_index":1433,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.value",{"_index":1515,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["control?.errors",{"_index":1419,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control?.invalid",{"_index":1432,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["copy",{"_index":1654,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["correctas",{"_index":1752,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["correo",{"_index":1330,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["correspondiente",{"_index":1360,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["coverage",{"_index":2017,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":367,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["creada",{"_index":1306,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["creado",{"_index":1561,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["crear",{"_index":357,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["create",{"_index":649,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["creating",{"_index":373,"title":{},"body":{"components/AgendaComponent.html":{}}}],["credenciales",{"_index":1751,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["cruz",{"_index":860,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cta",{"_index":1668,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["cuarta",{"_index":818,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cumpla",{"_index":1547,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["cup_cupo",{"_index":681,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cup_cupo(id",{"_index":687,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cup_id",{"_index":593,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cupo",{"_index":465,"title":{"interfaces/Cupo.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["cupos",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["cupossubject",{"_index":619,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cupossubscription",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["currentuser",{"_index":1091,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{}}}],["currentuser.id",{"_index":1915,"title":{},"body":{"guards/RoleGuard.html":{}}}],["curso",{"_index":1385,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["cursor",{"_index":71,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["código",{"_index":1713,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["dash",{"_index":1533,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["dashboard",{"_index":1086,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["dashboard'},{'name",{"_index":406,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["dashboard.component.css",{"_index":1089,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["dashboard.component.html",{"_index":1090,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["dashboardcomponent",{"_index":405,"title":{"components/DashboardComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["database",{"_index":523,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["databaseservice",{"_index":186,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["date",{"_index":294,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/SegmentoModalComponent.html":{}}}],["date(segmento.fecha_hora_inicio",{"_index":1264,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["date(segmentohorario.fecha_hora_fin).gettime",{"_index":1017,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["date(segmentohorario.fecha_hora_inicio).gettime",{"_index":1018,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["date(startdate",{"_index":1953,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date(this.segmentotoedit.fecha_hora_fin).gettime",{"_index":1942,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date(this.segmentotoedit.fecha_hora_inicio",{"_index":1950,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date(this.segmentotoedit.fecha_hora_inicio).gettime",{"_index":1943,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date:'dd/mm/yyyy",{"_index":1967,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date:\\'dd/mm/yyyy",{"_index":1972,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["datos",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["day",{"_index":1177,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["daygridplugin",{"_index":271,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["db",{"_index":606,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["dbservice",{"_index":193,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{}}}],["de",{"_index":16,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":305,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["decoration",{"_index":580,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{}}}],["decorators",{"_index":243,"title":{},"body":{"components/AgendaComponent.html":{}}}],["deep",{"_index":136,"title":{},"body":{"components/AgendaComponent.html":{}}}],["default",{"_index":268,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":706,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["define",{"_index":1143,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["defined",{"_index":187,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["del",{"_index":220,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["delete",{"_index":584,"title":{},"body":{"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["deletefuncionario",{"_index":1344,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["deletesegmentohorario(id",{"_index":1020,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["deleting",{"_index":385,"title":{},"body":{"components/AgendaComponent.html":{}}}],["demo",{"_index":537,"title":{},"body":{"components/AppComponent.html":{}}}],["dependencies",{"_index":2058,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["derecha",{"_index":2006,"title":{},"body":{"components/ToastComponent.html":{}}}],["derechos",{"_index":1655,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dermatología",{"_index":719,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["descripción",{"_index":1149,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["desplaza",{"_index":1609,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["desplazamiento",{"_index":1625,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["desplegable",{"_index":1164,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["después",{"_index":1985,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["destruir",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["detallados",{"_index":1650,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dev",{"_index":2094,"title":{},"body":{"index.html":{}}}],["development",{"_index":2091,"title":{},"body":{"index.html":{}}}],["diego",{"_index":778,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["diego.castro@ejemplo.com",{"_index":781,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["diferentes",{"_index":607,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["digit",{"_index":1175,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["direccion",{"_index":671,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["dirección",{"_index":1584,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["direction",{"_index":1217,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["directive",{"_index":397,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":423,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2106,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2111,"title":{},"body":{"index.html":{}}}],["display",{"_index":62,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["disponibilidad",{"_index":1241,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{}}}],["disponible",{"_index":679,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"miscellaneous/enumerations.html":{}}}],["disponibles",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/RegisterModalComponent.html":{}}}],["dist",{"_index":2110,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('features",{"_index":1629,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["documentation",{"_index":2018,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["domain",{"_index":1566,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["domain.includes",{"_index":1568,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["domain.split",{"_index":1571,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["dominio",{"_index":1476,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["dots",{"_index":1532,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["dropdown",{"_index":1228,"title":{},"body":{"components/DashboardComponent.html":{}}}],["duoc",{"_index":2074,"title":{},"body":{"dependencies.html":{}}}],["duracion",{"_index":683,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["duración",{"_index":1969,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["durante",{"_index":1718,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["duration",{"_index":1016,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["dynamic",{"_index":2064,"title":{},"body":{"dependencies.html":{}}}],["décima",{"_index":876,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["dígitos",{"_index":1889,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["e2e",{"_index":2119,"title":{},"body":{"index.html":{}}}],["e2e8f0",{"_index":103,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["e53e3e",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["ease",{"_index":57,"title":{},"body":{"components/AgendaComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["ebf8ff",{"_index":129,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{}}}],["edf2f7",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["edición",{"_index":302,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{}}}],["editando",{"_index":1934,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["editar",{"_index":386,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["eficiente",{"_index":1645,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["ej",{"_index":1530,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["el",{"_index":199,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{}}}],["electrónico",{"_index":1331,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["element",{"_index":396,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["elemento",{"_index":1145,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["elementos",{"_index":1131,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["elena",{"_index":849,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["elena.santos@ejemplo.com",{"_index":852,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["elimina",{"_index":1355,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["eliminación",{"_index":226,"title":{},"body":{"components/AgendaComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["eliminado",{"_index":1450,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["eliminar",{"_index":229,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["email",{"_index":662,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["email.includes",{"_index":1563,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["email.split",{"_index":1567,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["emaildomainvalidator",{"_index":1466,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["emite",{"_index":1731,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["emitevent",{"_index":1869,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["emitido",{"_index":613,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["en",{"_index":198,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["encontrado",{"_index":1301,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{}}}],["encontraron",{"_index":1327,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["encuentra",{"_index":1003,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["end",{"_index":352,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"index.html":{}}}],["enddate",{"_index":1952,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["enddate.setminutes(enddate.getminutes",{"_index":1954,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["enddate.toisostring",{"_index":1959,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["entrada",{"_index":1489,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["entre",{"_index":1082,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["enum",{"_index":1078,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":2080,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviado",{"_index":1722,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["enviar",{"_index":1769,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["envío",{"_index":233,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["err",{"_index":519,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["error",{"_index":379,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["error('failed",{"_index":705,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["error('paciente",{"_index":978,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["errormessage",{"_index":1258,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["es",{"_index":289,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["escribe",{"_index":1277,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["escucha",{"_index":196,"title":{},"body":{"components/AgendaComponent.html":{}}}],["esp",{"_index":1815,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["esp.id",{"_index":1408,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["esp.nombre",{"_index":1335,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["esp_especialidad",{"_index":652,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["esp_especialidad(id",{"_index":667,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["esp_especialidad.id",{"_index":922,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["esp_especialidad.nombre",{"_index":919,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["esp_id",{"_index":664,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["especialidad",{"_index":472,"title":{"interfaces/Especialidad.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["especialidad.id",{"_index":1060,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["especialidad.nombre",{"_index":1409,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["especialidades",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["especialidadessubject",{"_index":614,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["especialidadessubscription",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["específico",{"_index":1028,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["esquina",{"_index":2004,"title":{},"body":{"components/ToastComponent.html":{}}}],["est",{"_index":390,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["esta",{"_index":1244,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["estableciéndolo",{"_index":1991,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["estado",{"_index":682,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{}}}],["estados",{"_index":678,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["este",{"_index":602,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["estructura",{"_index":1144,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["estándar",{"_index":1548,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["etiqueta",{"_index":1148,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["event",{"_index":149,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["event.preventdefault",{"_index":1744,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["event.target",{"_index":1279,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["eventemitter",{"_index":1696,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["eventinput",{"_index":315,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["evento",{"_index":219,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["eventos",{"_index":342,"title":{},"body":{"components/AgendaComponent.html":{}}}],["events",{"_index":346,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["evita",{"_index":525,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["execute",{"_index":2116,"title":{},"body":{"index.html":{}}}],["existe",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["existente",{"_index":1935,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["existentes",{"_index":1509,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["existingpaciente",{"_index":976,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["existinguser",{"_index":1876,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["exists",{"_index":651,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["exitosamente",{"_index":1307,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["exitoso",{"_index":1182,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["expecteddigit",{"_index":1542,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["expecteddigit.tostring",{"_index":1546,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["expectedverificationdigit",{"_index":1543,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["exponen",{"_index":625,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["export",{"_index":326,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["extendedprops",{"_index":1271,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["extends",{"_index":1242,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["extiende",{"_index":1240,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["f",{"_index":796,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["f0fff4",{"_index":1592,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["f56565",{"_index":586,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["f8fafc",{"_index":125,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{}}}],["failed",{"_index":521,"title":{},"body":{"components/AppComponent.html":{}}}],["falla",{"_index":641,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["false",{"_index":285,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{}}}],["family",{"_index":138,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["favor",{"_index":359,"title":{},"body":{"components/AgendaComponent.html":{},"components/RegisterModalComponent.html":{}}}],["fb",{"_index":1353,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["fc",{"_index":137,"title":{},"body":{"components/AgendaComponent.html":{}}}],["fc8181",{"_index":585,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["feature",{"_index":1673,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["features",{"_index":1672,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["featuressection",{"_index":1628,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["featuressection.scrollintoview",{"_index":1630,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["feb2b2",{"_index":1591,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["fecha",{"_index":211,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["fecha_hora_fin",{"_index":674,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["fecha_hora_inicio",{"_index":673,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["fecha_nacimiento",{"_index":669,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["femenino",{"_index":1582,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["fff5f5",{"_index":1213,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{}}}],["field",{"_index":1413,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["field.dirty",{"_index":1416,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["field.invalid",{"_index":1415,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["field.touched",{"_index":1417,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["fieldname",{"_index":1359,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":2101,"title":{},"body":{"index.html":{}}}],["fill",{"_index":119,"title":{},"body":{"components/AgendaComponent.html":{}}}],["filteredfuncionarios",{"_index":162,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["filtra",{"_index":246,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{}}}],["filtrada",{"_index":1156,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"interfaces/NavItem.html":{}}}],["filtrados",{"_index":280,"title":{},"body":{"components/AgendaComponent.html":{}}}],["finally",{"_index":1443,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["first",{"_index":972,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"index.html":{}}}],["fit",{"_index":1674,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["fixed",{"_index":1198,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["flex",{"_index":63,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["flores",{"_index":774,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["font",{"_index":77,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["footer",{"_index":1677,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{}}}],["force",{"_index":989,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["foreign",{"_index":665,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["form",{"_index":1317,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formatea",{"_index":1275,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formateado",{"_index":1484,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formatear",{"_index":1483,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formato",{"_index":1427,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formatrut",{"_index":1467,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formatrut(rut",{"_index":1481,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formatting",{"_index":1517,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formbuilder",{"_index":1351,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["formgroup",{"_index":1379,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["formgroup.get('confirmpassword",{"_index":1821,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["formgroup.get('password",{"_index":1820,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["formsmodule",{"_index":28,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{}}}],["formulario",{"_index":234,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["formvalue",{"_index":1435,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["formvalue.apellidos",{"_index":1880,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["formvalue.cupos",{"_index":1955,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["formvalue.email",{"_index":1882,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["formvalue.nombre",{"_index":1957,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["formvalue.nombres",{"_index":1879,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["formvalue.password",{"_index":1838,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formvalue.password.length",{"_index":1839,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["formvalue.password.match(/^(?=.*[a",{"_index":1840,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["formvalue.rut.replace(/\\./g",{"_index":1558,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formvalue.telefono",{"_index":1881,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["free",{"_index":676,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["fresh",{"_index":990,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["friday",{"_index":900,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["full",{"_index":1225,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fullcalendar/angular",{"_index":317,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"dependencies.html":{}}}],["fullcalendar/core",{"_index":316,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"dependencies.html":{}}}],["fullcalendar/daygrid",{"_index":318,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"dependencies.html":{}}}],["fullcalendar/interaction",{"_index":320,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"dependencies.html":{}}}],["fullcalendar/timegrid",{"_index":319,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"dependencies.html":{}}}],["fullcalendarcomponent",{"_index":263,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["fullcalendarmodule",{"_index":29,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["fun_funcionario",{"_index":657,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["fun_funcionario(id",{"_index":677,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["fun_funcionario.esp_id",{"_index":921,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["fun_funcionario.id",{"_index":953,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["fun_id",{"_index":675,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["funcionalidad",{"_index":1150,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["funcionario",{"_index":123,"title":{"interfaces/Funcionario.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["funcionario.apellidos",{"_index":156,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario.apellidos.tolowercase().includes(searchtermlower",{"_index":335,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["funcionario.email",{"_index":963,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario.esp_id",{"_index":965,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario.especialidad",{"_index":157,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario.especialidad?.tolowercase().includes(searchtermlower",{"_index":336,"title":{},"body":{"components/AgendaComponent.html":{}}}],["funcionario.id",{"_index":1757,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["funcionario.nombres",{"_index":155,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario.nombres.tolowercase().includes(searchtermlower",{"_index":334,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["funcionario.password",{"_index":964,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario.rut",{"_index":961,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario.telefono",{"_index":962,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario[field",{"_index":1066,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionarioform",{"_index":1343,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["funcionarioid",{"_index":240,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["funcionarios",{"_index":18,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["funcionarios'},{'name",{"_index":408,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["funcionarios.map(f",{"_index":1260,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["funcionarios.map(funcionario",{"_index":1400,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["funcionarioscomponent",{"_index":407,"title":{"components/FuncionariosComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["funcionariossubject",{"_index":616,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionariossubscription",{"_index":443,"title":{},"body":{"components/AppComponent.html":{}}}],["funcionariowithavailability",{"_index":1238,"title":{"interfaces/FuncionarioWithAvailability.html":{}},"body":{"interfaces/FuncionarioWithAvailability.html":{},"coverage.html":{}}}],["funid",{"_index":966,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["further",{"_index":2126,"title":{},"body":{"index.html":{}}}],["g",{"_index":1281,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["gap",{"_index":122,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["garcía",{"_index":748,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["genera",{"_index":1648,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["generado",{"_index":1714,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["general",{"_index":885,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["generate",{"_index":2104,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2086,"title":{},"body":{"index.html":{}}}],["generatedcode",{"_index":1682,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["genero",{"_index":670,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["gestiona",{"_index":603,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["gestionar",{"_index":324,"title":{},"body":{"components/AgendaComponent.html":{}}}],["gestión",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["getauthorizednavitems",{"_index":1137,"title":{},"body":{"components/DashboardComponent.html":{}}}],["geterrormessage",{"_index":1345,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["geterrormessage('apellidos",{"_index":1329,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage('email",{"_index":1332,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage('esp_id",{"_index":1336,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["geterrormessage('nombres",{"_index":1328,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage('password",{"_index":1338,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage('telefono",{"_index":1334,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage(\\'apellidos",{"_index":1454,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage(\\'email",{"_index":1455,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage(\\'esp_id",{"_index":1457,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["geterrormessage(\\'nombres",{"_index":1453,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage(\\'password",{"_index":1458,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage(\\'telefono",{"_index":1456,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage(fieldname",{"_index":1356,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["getespecialidadbyname(nombre",{"_index":1056,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["getespecialidadnombre",{"_index":1346,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["getespecialidadnombre(esp_id",{"_index":1362,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["getfuncionariobyemail(email",{"_index":954,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["getfuncionariobyid(id",{"_index":952,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["getfuncionariobyname(name",{"_index":950,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["getfuncionariobyrut(rut",{"_index":1039,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["getpacientebyrut(rut",{"_index":1004,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["getsegmentohorariobyid(id",{"_index":1022,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["getting",{"_index":2082,"title":{"index.html":{}},"body":{}}],["getuserfullname",{"_index":1096,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["getuserinitials",{"_index":1097,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["getuserspecialty",{"_index":1098,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["globales",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["go",{"_index":2129,"title":{},"body":{"index.html":{}}}],["gonzález",{"_index":723,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["gradient(135deg",{"_index":1663,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["grid",{"_index":115,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["group",{"_index":1318,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["group.full",{"_index":1893,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["guard",{"_index":1894,"title":{"guards/RoleGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guardado",{"_index":1441,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["guardando",{"_index":1341,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["guardar",{"_index":235,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["guardia",{"_index":1898,"title":{},"body":{"guards/RoleGuard.html":{}}}],["guards",{"_index":1896,"title":{},"body":{"guards/RoleGuard.html":{}}}],["guión",{"_index":1002,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["género",{"_index":1580,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["h1",{"_index":545,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["h2",{"_index":74,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["h3",{"_index":130,"title":{},"body":{"components/AgendaComponent.html":{},"components/LandingPageComponent.html":{}}}],["ha",{"_index":1367,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["hacia",{"_index":1627,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["hack",{"_index":968,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["handledateselect",{"_index":171,"title":{},"body":{"components/AgendaComponent.html":{}}}],["handledateselect(selectinfo",{"_index":207,"title":{},"body":{"components/AgendaComponent.html":{}}}],["handleeventclick",{"_index":172,"title":{},"body":{"components/AgendaComponent.html":{}}}],["handleeventclick(clickinfo",{"_index":215,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["handlerecovery",{"_index":1690,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["handlerecovery(event",{"_index":1703,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["handlesegmentodelete",{"_index":173,"title":{},"body":{"components/AgendaComponent.html":{}}}],["handlesegmentodelete(id",{"_index":223,"title":{},"body":{"components/AgendaComponent.html":{}}}],["handlesegmentosubmit",{"_index":174,"title":{},"body":{"components/AgendaComponent.html":{}}}],["handlesegmentosubmit(segmento",{"_index":230,"title":{},"body":{"components/AgendaComponent.html":{}}}],["handlesubmit",{"_index":1691,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["handlesubmit(event",{"_index":1705,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["hasavailablesegments",{"_index":1243,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["hasrole",{"_index":1916,"title":{},"body":{"guards/RoleGuard.html":{}}}],["hasrole(funid",{"_index":1032,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["hay",{"_index":1254,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["header",{"_index":61,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["height",{"_index":93,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["help",{"_index":2127,"title":{},"body":{"index.html":{}}}],["hero",{"_index":1661,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["hh:mm",{"_index":1968,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["hidden",{"_index":96,"title":{},"body":{"components/AgendaComponent.html":{}}}],["hide",{"_index":1992,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["hora",{"_index":1965,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["horario",{"_index":369,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["horarios",{"_index":239,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["hospital",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["host",{"_index":134,"title":{},"body":{"components/AgendaComponent.html":{}}}],["hostlistener",{"_index":309,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["hostlistener('window:resize",{"_index":244,"title":{},"body":{"components/AgendaComponent.html":{}}}],["hostlisteners",{"_index":182,"title":{},"body":{"components/AgendaComponent.html":{}}}],["hour",{"_index":1174,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["hs",{"_index":1189,"title":{},"body":{"components/DashboardComponent.html":{}}}],["html",{"_index":395,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["http://localhost:4200",{"_index":2096,"title":{},"body":{"index.html":{}}}],["https://sql.js.org/dist/${file",{"_index":645,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["icon",{"_index":1125,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["id",{"_index":228,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["identifier",{"_index":2019,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":906,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["implements",{"_index":19,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["import",{"_index":308,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["important",{"_index":143,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["imports",{"_index":26,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["incorrectos",{"_index":1711,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["index",{"_index":158,"title":{"index.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":287,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["indicando",{"_index":1031,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["inferior",{"_index":2005,"title":{},"body":{"components/ToastComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["información",{"_index":214,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"guards/RoleGuard.html":{}}}],["informes",{"_index":1649,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["ingresado",{"_index":1498,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["ingrese",{"_index":1296,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["inherit",{"_index":139,"title":{},"body":{"components/AgendaComponent.html":{}}}],["inicia",{"_index":1710,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["iniciales",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["inicializa",{"_index":242,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["inicialización",{"_index":493,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["iniciando",{"_index":1766,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["iniciar",{"_index":1633,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{}}}],["inicie",{"_index":1885,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["inicio",{"_index":1168,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/SegmentoModalComponent.html":{}}}],["initialize",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["initializedatabase",{"_index":642,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["initialview",{"_index":274,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["initsqljs",{"_index":596,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["injectable",{"_index":595,"title":{"injectables/ToastService.html":{}},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["injectables",{"_index":2011,"title":{},"body":{"injectables/ToastService.html":{},"overview.html":{}}}],["inline",{"_index":1226,"title":{},"body":{"components/DashboardComponent.html":{}}}],["input",{"_index":99,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["input.error",{"_index":1319,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{}}}],["input.value",{"_index":1288,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{}}}],["input.value.replace(/\\./g",{"_index":1280,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["input:checked",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["input:focus",{"_index":106,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["inputs",{"_index":1792,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["inscripcion",{"_index":1124,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{}}}],["inscripcion'},{'name",{"_index":410,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["inscripcion.component.css",{"_index":1463,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["inscripcion.component.html",{"_index":1464,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["inscripcioncomponent",{"_index":409,"title":{"components/InscripcionComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["inscripción",{"_index":1127,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{}}}],["insert",{"_index":714,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["integer",{"_index":653,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["integral",{"_index":1635,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["intente",{"_index":1887,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["intento",{"_index":1707,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["interactionplugin",{"_index":273,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["interface",{"_index":587,"title":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{}},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["interfaces",{"_index":588,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"overview.html":{}}}],["interfaz",{"_index":590,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["invaliddomain",{"_index":1569,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["invalidemail",{"_index":1564,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["invalidrut",{"_index":1523,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["inválido",{"_index":1366,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["isabel",{"_index":768,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["isabel.ramirez@ejemplo.com",{"_index":771,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["iseditmode",{"_index":1921,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["isfieldinvalid",{"_index":1347,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["isfieldinvalid(fieldname",{"_index":1364,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["isloading",{"_index":1340,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["isrecovering",{"_index":1683,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["issmallscreen",{"_index":163,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["item",{"_index":557,"title":{},"body":{"components/AppComponent.html":{}}}],["item.icon",{"_index":1190,"title":{},"body":{"components/DashboardComponent.html":{}}}],["item.label",{"_index":1191,"title":{},"body":{"components/DashboardComponent.html":{}}}],["item.requiredrole",{"_index":1159,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["item:last",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["items",{"_index":69,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["join",{"_index":920,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["jorge",{"_index":859,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["jorge.cruz@ejemplo.com",{"_index":862,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["jos",{"_index":729,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["jose.rodriguez@ejemplo.com",{"_index":732,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["json.parse(localstorage.getitem('currentuser",{"_index":1119,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{}}}],["json.stringify(updateduser",{"_index":1844,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["json.stringify(userdata",{"_index":1759,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["juan",{"_index":753,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["juan.sanchez@ejemplo.com",{"_index":756,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["justify",{"_index":64,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["k",{"_index":1545,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["karma",{"_index":2118,"title":{},"body":{"index.html":{}}}],["key",{"_index":654,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["keyframes",{"_index":1777,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["keyof",{"_index":1064,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["la",{"_index":14,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":1126,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["landing",{"_index":412,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["landingpagecomponent",{"_index":411,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["las",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["laura",{"_index":758,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["laura.perez@ejemplo.com",{"_index":761,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["leaks",{"_index":527,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["left",{"_index":91,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["legend",{"_index":394,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["limpia",{"_index":388,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["line",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["linear",{"_index":1662,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["link",{"_index":1205,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{}}}],["link.active",{"_index":1207,"title":{},"body":{"components/DashboardComponent.html":{}}}],["link:hover",{"_index":1206,"title":{},"body":{"components/DashboardComponent.html":{}}}],["links",{"_index":1658,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["list",{"_index":114,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{}}}],["lista",{"_index":279,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{}}}],["load",{"_index":991,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loadcitas",{"_index":941,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loadcupos",{"_index":939,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loadfuncionarios",{"_index":916,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loading",{"_index":444,"title":{},"body":{"components/AppComponent.html":{}}}],["loadpacientes",{"_index":930,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loadroles",{"_index":943,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loadrolesfuncionario",{"_index":945,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loadsegmentos(funcionarioid",{"_index":1268,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["loadsegmentoshorario",{"_index":937,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loadshifts",{"_index":175,"title":{},"body":{"components/AgendaComponent.html":{}}}],["loadshifts(funcionarioid",{"_index":236,"title":{},"body":{"components/AgendaComponent.html":{}}}],["localpart",{"_index":1565,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["localstorage",{"_index":1166,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["localstorage.removeitem('currentuser",{"_index":1169,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["localstorage.setitem('currentuser",{"_index":1758,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{}}}],["locatefile",{"_index":644,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["login",{"_index":415,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["loginmodalcomponent",{"_index":414,"title":{"components/LoginModalComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["logo",{"_index":1657,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["logout",{"_index":1099,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["los",{"_index":17,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["ltimo",{"_index":611,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["lucia.morales@ejemplo.com",{"_index":792,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["lucía",{"_index":789,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["luis",{"_index":741,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["luis.martinez@ejemplo.com",{"_index":744,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["lópez",{"_index":736,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["m",{"_index":785,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["main",{"_index":1197,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["maneja",{"_index":13,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["manera",{"_index":1644,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["mantener",{"_index":610,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["mantiene",{"_index":1977,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["marca",{"_index":1050,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["margin",{"_index":36,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["maria.gonzalez@ejemplo.com",{"_index":726,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["martínez",{"_index":742,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["maría",{"_index":722,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["masculino",{"_index":1581,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["mask",{"_index":1506,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"dependencies.html":{}}}],["matching",{"_index":426,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring(36).substring(2",{"_index":1747,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["max",{"_index":33,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["mayúscula",{"_index":1829,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["media",{"_index":1215,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["memory",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["men",{"_index":1118,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["mendoza",{"_index":832,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["menos",{"_index":1828,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["mensaje",{"_index":470,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["mensajes",{"_index":1290,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["menu",{"_index":1208,"title":{},"body":{"components/DashboardComponent.html":{}}}],["message",{"_index":1321,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["methods",{"_index":168,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["mientras",{"_index":1276,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["miguel",{"_index":773,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["miguel.flores@ejemplo.com",{"_index":776,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["min",{"_index":1195,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["minmax(250px",{"_index":120,"title":{},"body":{"components/AgendaComponent.html":{},"components/LandingPageComponent.html":{}}}],["minute",{"_index":1176,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["minutos",{"_index":1079,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["minúscula",{"_index":1830,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["miscellaneous",{"_index":2079,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":1229,"title":{},"body":{"components/DashboardComponent.html":{}}}],["modal",{"_index":307,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal'},{'name",{"_index":416,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["modal.component",{"_index":322,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["modal.component.css",{"_index":1680,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.html",{"_index":1681,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts",{"_index":1679,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:103",{"_index":1855,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:121",{"_index":1856,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:134",{"_index":1854,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:143",{"_index":1851,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:151",{"_index":1708,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["modal.component.ts:170",{"_index":1706,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:19",{"_index":1927,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:198",{"_index":1852,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:21",{"_index":1697,"title":{},"body":{"components/LoginModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:225",{"_index":1853,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:23",{"_index":1850,"title":{},"body":{"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:24",{"_index":1726,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:25",{"_index":1928,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:26",{"_index":1719,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["modal.component.ts:27",{"_index":1929,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:28",{"_index":1864,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:285",{"_index":1794,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:286",{"_index":1795,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:288",{"_index":1804,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:289",{"_index":1803,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:29",{"_index":1716,"title":{},"body":{"components/LoginModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:290",{"_index":1793,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:30",{"_index":1863,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:31",{"_index":1725,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:316",{"_index":1799,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:32",{"_index":1862,"title":{},"body":{"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:327",{"_index":1801,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:33",{"_index":1720,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:34",{"_index":1849,"title":{},"body":{"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:345",{"_index":1798,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:35",{"_index":1721,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:350",{"_index":1797,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:366",{"_index":1796,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:37",{"_index":1723,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:370",{"_index":1800,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:39",{"_index":1717,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:41",{"_index":1712,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:44",{"_index":1727,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:46",{"_index":1715,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:47",{"_index":1931,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:48",{"_index":1695,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:60",{"_index":1702,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:64",{"_index":1930,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:67",{"_index":1861,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:68",{"_index":1709,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:72",{"_index":1932,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:78",{"_index":1698,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:83",{"_index":1933,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:90",{"_index":1860,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:94",{"_index":1704,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal/login",{"_index":1617,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"coverage.html":{}}}],["modal/profile",{"_index":1142,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"coverage.html":{}}}],["modal/register",{"_index":1619,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{},"coverage.html":{}}}],["modal/segmento",{"_index":321,"title":{},"body":{"components/AgendaComponent.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["modales",{"_index":1620,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["modificar",{"_index":1192,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileModalComponent.html":{}}}],["modo",{"_index":1428,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["modules",{"_index":2132,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monday",{"_index":883,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["month",{"_index":1178,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["morales",{"_index":790,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["more",{"_index":2128,"title":{},"body":{"index.html":{}}}],["mostrando",{"_index":2003,"title":{},"body":{"components/ToastComponent.html":{}}}],["mostrar",{"_index":306,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["muestra",{"_index":1153,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["multiplier",{"_index":1539,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["más",{"_index":1641,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["máximo",{"_index":1963,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["médica",{"_index":592,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["médicas",{"_index":463,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["médico",{"_index":1646,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["médicos",{"_index":1637,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["mínimo",{"_index":1422,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["n",{"_index":1789,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["nacimiento",{"_index":1578,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["name",{"_index":190,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["nav",{"_index":1204,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["navegación",{"_index":1132,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["navigate",{"_index":2095,"title":{},"body":{"index.html":{}}}],["navitem",{"_index":1122,"title":{"interfaces/NavItem.html":{}},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"coverage.html":{}}}],["navitems",{"_index":1092,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["necesarias",{"_index":638,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["necesarios",{"_index":1525,"title":{},"body":{"components/InscripcionComponent.html":{},"guards/RoleGuard.html":{}}}],["need",{"_index":2123,"title":{},"body":{"index.html":{}}}],["neurología",{"_index":717,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["new",{"_index":615,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"coverage.html":{},"index.html":{}}}],["newespecialidadtitle",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["newfuncionario",{"_index":1067,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["newfuncionario.password",{"_index":1068,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["newfuncionario.password.length",{"_index":1069,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["newpassword",{"_index":1055,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["ng",{"_index":135,"title":{},"body":{"components/AgendaComponent.html":{},"index.html":{}}}],["ngondestroy",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["ngoninit",{"_index":176,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["ngx",{"_index":1505,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"dependencies.html":{}}}],["ngxmaskdirective",{"_index":1462,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["ni",{"_index":1001,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["nombre",{"_index":656,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["nombres",{"_index":658,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["none",{"_index":87,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["notificaciones",{"_index":1472,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["nov",{"_index":880,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["novena",{"_index":866,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["now",{"_index":1170,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["now.tolocalestring('es",{"_index":1172,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["nueva",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{}}}],["nuevamente",{"_index":1888,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["nuevo",{"_index":298,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["nuevos",{"_index":1508,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["nuevospacientes",{"_index":970,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["null",{"_index":295,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["number",{"_index":224,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["numbers",{"_index":1537,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["numbers.length",{"_index":1540,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["numeric",{"_index":1180,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["número",{"_index":1831,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["o",{"_index":368,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["object.keys(this.funcionarioform.controls).foreach(key",{"_index":1430,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["object.keys(this.pacienteform.controls).foreach(key",{"_index":1555,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["object.keys(this.profileform.controls).foreach(key",{"_index":1834,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["objeto",{"_index":956,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["observable",{"_index":599,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["observables",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["obtiene",{"_index":997,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["octava",{"_index":856,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["oculta",{"_index":1163,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["ocultar",{"_index":1983,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["ocupado",{"_index":680,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"miscellaneous/enumerations.html":{}}}],["oldfuncionario",{"_index":1061,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["oldfuncionario.password",{"_index":1071,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["olvidaste",{"_index":1764,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["oncología",{"_index":720,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["ondelete",{"_index":1923,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["ondestroy",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["onresize",{"_index":177,"title":{},"body":{"components/AgendaComponent.html":{}}}],["onrutinput",{"_index":1468,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["onrutinput(event",{"_index":1278,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["onsubmit",{"_index":1348,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["opacity",{"_index":98,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["opcional",{"_index":1785,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["openprofilemodal",{"_index":1100,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["operaciones",{"_index":600,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["operación",{"_index":1384,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["optional",{"_index":192,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["ortega",{"_index":812,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["otro",{"_index":1583,"title":{},"body":{"components/InscripcionComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["out",{"_index":1776,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["outline",{"_index":107,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["output",{"_index":1728,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["outputs",{"_index":1693,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["overflow",{"_index":95,"title":{},"body":{"components/AgendaComponent.html":{},"components/RegisterModalComponent.html":{}}}],["overview",{"_index":2130,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":132,"title":{},"body":{"components/AgendaComponent.html":{},"components/LandingPageComponent.html":{}}}],["p.rut",{"_index":1007,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pac_id",{"_index":594,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pac_paciente",{"_index":668,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pac_paciente(id",{"_index":688,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pacid",{"_index":1048,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente",{"_index":484,"title":{"interfaces/Paciente.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["paciente.apellidos",{"_index":981,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.direccion",{"_index":988,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.email",{"_index":985,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.fecha_nacimiento",{"_index":986,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.genero",{"_index":987,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.id",{"_index":994,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.nombres",{"_index":980,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.rut.replace(/\\./g",{"_index":982,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.telefono",{"_index":984,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pacienteform",{"_index":1465,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["pacienteform.get('id')?.value",{"_index":1575,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["pacienteform.get(\\'id\\')?.value",{"_index":1595,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["pacientes",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pacientessubject",{"_index":617,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pacientessubscription",{"_index":447,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":2057,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":39,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["page",{"_index":1600,"title":{},"body":{"components/LandingPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":413,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["page.component.css",{"_index":1601,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.html",{"_index":1602,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":1598,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:19",{"_index":1614,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:21",{"_index":1615,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:27",{"_index":1611,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:36",{"_index":1612,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:45",{"_index":1608,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page/landing",{"_index":1597,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["panel",{"_index":1085,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["pantalla",{"_index":204,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["para",{"_index":293,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["param",{"_index":337,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["parameters",{"_index":189,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["parseint(formvalue.esp_id",{"_index":1438,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/RegisterModalComponent.html":{}}}],["parseint(numbers[i",{"_index":1541,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["parts",{"_index":1570,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["parts[parts.length",{"_index":1573,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["pasos",{"_index":1741,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["password",{"_index":663,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["password?.value",{"_index":1822,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["passwordmatchvalidator",{"_index":1791,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["passwordmismatch",{"_index":1802,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["path",{"_index":1123,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["patient",{"_index":974,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["patients",{"_index":992,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pediatría",{"_index":718,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pedro",{"_index":821,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pedro.ramos@ejemplo.com",{"_index":824,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pequeña",{"_index":290,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["perfil",{"_index":1193,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{}}}],["permisos",{"_index":1133,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["permite",{"_index":323,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["personalizado",{"_index":1475,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["pertenece",{"_index":1926,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["platform",{"_index":2120,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":270,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["pointer",{"_index":72,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["por",{"_index":281,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["position",{"_index":561,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["primary",{"_index":145,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["primary:hover",{"_index":147,"title":{},"body":{"components/AgendaComponent.html":{},"components/LandingPageComponent.html":{}}}],["primero",{"_index":361,"title":{},"body":{"components/AgendaComponent.html":{}}}],["principal",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["principales",{"_index":1642,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["private",{"_index":169,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["procesa",{"_index":1873,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["procesando",{"_index":1767,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["proceso",{"_index":1700,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["profile",{"_index":418,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["profileform",{"_index":1790,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["profilemodalcomponent",{"_index":417,"title":{"components/ProfileModalComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["programa",{"_index":1643,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["project",{"_index":2085,"title":{},"body":{"index.html":{}}}],["promise",{"_index":639,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["properties",{"_index":159,"title":{"properties.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"properties.html":{}}}],["protege",{"_index":1899,"title":{},"body":{"guards/RoleGuard.html":{}}}],["providedin",{"_index":605,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["providengxmask",{"_index":1461,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["providerouter(routes",{"_index":2137,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1460,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"miscellaneous/variables.html":{}}}],["próximas",{"_index":1653,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["public",{"_index":915,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["puede",{"_index":1909,"title":{},"body":{"guards/RoleGuard.html":{}}}],["puntos",{"_index":1000,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["página",{"_index":1599,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["pérez",{"_index":759,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["público",{"_index":1980,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["públicos",{"_index":624,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["que",{"_index":12,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{}}}],["quinta",{"_index":828,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["r",{"_index":1033,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["r.id",{"_index":1035,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["r.nombre",{"_index":1038,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["radius",{"_index":47,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["ramos",{"_index":822,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["ramírez",{"_index":769,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["reactiveformsmodule",{"_index":1316,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["reactivo",{"_index":1381,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["realiza",{"_index":1624,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["recordatorios",{"_index":1652,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["recovery",{"_index":1781,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["recoverycode",{"_index":1684,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["recoverycodesent",{"_index":1685,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["recoverycodeverified",{"_index":1686,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["recoveryrut",{"_index":1687,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["recuperación",{"_index":1701,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["recuperar",{"_index":1730,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["redirige",{"_index":1167,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["reference",{"_index":2131,"title":{},"body":{"index.html":{}}}],["references",{"_index":666,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["referencia",{"_index":266,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["register",{"_index":420,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["registerform",{"_index":1848,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["registermodalcomponent",{"_index":419,"title":{"components/RegisterModalComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["registrado",{"_index":1878,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["registrados",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["registrando",{"_index":1890,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["registrar",{"_index":1507,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["registrarse",{"_index":1634,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["registro",{"_index":1613,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["reinicia",{"_index":1373,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{}}}],["relación",{"_index":1081,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["relative",{"_index":562,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["reload",{"_index":2099,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1516,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["repeat(2",{"_index":1892,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["repeat(auto",{"_index":118,"title":{},"body":{"components/AgendaComponent.html":{},"components/LandingPageComponent.html":{}}}],["replace",{"_index":983,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["reportes",{"_index":1647,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["representa",{"_index":591,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"miscellaneous/enumerations.html":{}}}],["requerida",{"_index":1579,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["requerido",{"_index":1151,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{}}}],["requeridos",{"_index":1577,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["requiredrole",{"_index":1128,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["reservados",{"_index":1656,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["reset",{"_index":1586,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["resetform",{"_index":1349,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["result",{"_index":917,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result.length",{"_index":923,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values.length",{"_index":949,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values.map((row",{"_index":932,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0",{"_index":951,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][0",{"_index":967,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][1",{"_index":1040,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][2",{"_index":1041,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][3",{"_index":1042,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][4",{"_index":1043,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][5",{"_index":1044,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][6",{"_index":1045,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][7",{"_index":1046,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][8",{"_index":1047,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["results",{"_index":425,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":363,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["returns",{"_index":205,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["reyes",{"_index":870,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rf",{"_index":1034,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rf.fun_id",{"_index":1037,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rf.rol_id",{"_index":1036,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rgba(0",{"_index":556,"title":{},"body":{"components/AppComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rgba(0,0,0,0.1",{"_index":54,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{}}}],["rgba(66",{"_index":110,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["right",{"_index":1199,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ToastComponent.html":{}}}],["rl_rol_fun",{"_index":691,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rodríguez",{"_index":730,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rol",{"_index":907,"title":{"interfaces/Rol.html":{}},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["rol_id",{"_index":692,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rol_roles",{"_index":689,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rol_roles(id",{"_index":693,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["role",{"_index":910,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["roleguard",{"_index":1895,"title":{"guards/RoleGuard.html":{}},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["roles",{"_index":633,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["roles.foreach(rol",{"_index":904,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rolesfuncionario",{"_index":635,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rolesfuncionariosubject",{"_index":622,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rolessubject",{"_index":621,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rolfuncionario",{"_index":1083,"title":{"interfaces/RolFuncionario.html":{}},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["rolnombre",{"_index":1029,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["root",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["root'},{'name",{"_index":402,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["rotate(45deg",{"_index":577,"title":{},"body":{"components/AppComponent.html":{}}}],["route",{"_index":1911,"title":{},"body":{"guards/RoleGuard.html":{}}}],["route.data['requiredrole",{"_index":1914,"title":{},"body":{"guards/RoleGuard.html":{}}}],["router",{"_index":1105,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{}}}],["routerlink",{"_index":1087,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["routermodule",{"_index":432,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet",{"_index":1088,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["routerstatesnapshot",{"_index":1907,"title":{},"body":{"guards/RoleGuard.html":{}}}],["row",{"_index":1008,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[0",{"_index":912,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[1",{"_index":913,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[2",{"_index":925,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[3",{"_index":926,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[4",{"_index":927,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[5",{"_index":928,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[6",{"_index":933,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[7",{"_index":934,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[8",{"_index":929,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["run",{"_index":712,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"index.html":{}}}],["running",{"_index":2112,"title":{},"body":{"index.html":{}}}],["rut",{"_index":660,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rut.length",{"_index":1284,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rut.replace(/[^0",{"_index":1282,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rut.replace(/\\./g",{"_index":1005,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rut.slice",{"_index":1287,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rut.slice(0",{"_index":1285,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["ruta",{"_index":1146,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["rutas",{"_index":1900,"title":{},"body":{"guards/RoleGuard.html":{}}}],["rutvalidator",{"_index":1469,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rxjs",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["saber",{"_index":1640,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["sans",{"_index":543,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["santos",{"_index":850,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["saving",{"_index":381,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{}}}],["scaffolding",{"_index":2103,"title":{},"body":{"index.html":{}}}],["scheduler",{"_index":604,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["script",{"_index":713,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["scrolltofeatures",{"_index":1605,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["se",{"_index":304,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["search",{"_index":41,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["searchfuncionarios",{"_index":178,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{}}}],["searchpaciente",{"_index":1292,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["searchrut",{"_index":1251,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["searchterm",{"_index":164,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["searchtermlower",{"_index":1404,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["sección",{"_index":259,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{}}}],["secondary",{"_index":1670,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["secondary:hover",{"_index":1671,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["section",{"_index":42,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["section.collapsed",{"_index":58,"title":{},"body":{"components/AgendaComponent.html":{}}}],["secundaria",{"_index":798,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["seed",{"_index":878,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["seeddatabase",{"_index":710,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["seeding",{"_index":909,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["seedroles",{"_index":903,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmento",{"_index":227,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["segmento.fecha_hora_fin",{"_index":353,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["segmento.fecha_hora_inicio",{"_index":351,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["segmento.free",{"_index":1265,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["segmento.fun_id",{"_index":354,"title":{},"body":{"components/AgendaComponent.html":{}}}],["segmento.id",{"_index":371,"title":{},"body":{"components/AgendaComponent.html":{}}}],["segmento.id.tostring",{"_index":348,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["segmento.nombre",{"_index":349,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["segmentodate",{"_index":1263,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["segmentoform",{"_index":1922,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["segmentoform.get('cupos')?.value",{"_index":1971,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["segmentoform.get(\\'cupos\\')?.value",{"_index":1973,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["segmentohorario",{"_index":231,"title":{"interfaces/SegmentoHorario.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["segmentohorario.fecha_hora_fin",{"_index":1012,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentohorario.fecha_hora_inicio",{"_index":1011,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentohorario.free",{"_index":1015,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentohorario.fun_id",{"_index":1013,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentohorario.id",{"_index":1024,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentohorario.nombre",{"_index":1010,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentomodalcomponent",{"_index":30,"title":{"components/SegmentoModalComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["segmentos",{"_index":344,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["segmentos.map(segmento",{"_index":347,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["segmentoshorario",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentoshorariosubject",{"_index":618,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentoshorariosubscription",{"_index":449,"title":{},"body":{"components/AppComponent.html":{}}}],["segmentotoedit",{"_index":1924,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["segmentotoedit.fecha_hora_inicio",{"_index":1966,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["segoe",{"_index":539,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["segundos",{"_index":1986,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["seguro",{"_index":1448,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["según",{"_index":247,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{}}}],["selecciona",{"_index":252,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["seleccionada",{"_index":297,"title":{},"body":{"components/AgendaComponent.html":{}}}],["seleccionado",{"_index":255,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["seleccionar",{"_index":153,"title":{},"body":{"components/AgendaComponent.html":{}}}],["seleccione",{"_index":360,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["selecciones",{"_index":1312,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["selección",{"_index":209,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["select",{"_index":565,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["select.error",{"_index":1320,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["select:focus",{"_index":1588,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["selecteddate",{"_index":165,"title":{},"body":{"components/AgendaComponent.html":{}}}],["selectedfuncionario",{"_index":150,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["selectedfuncionario.apellidos",{"_index":152,"title":{},"body":{"components/AgendaComponent.html":{}}}],["selectedfuncionario.especialidad",{"_index":154,"title":{},"body":{"components/AgendaComponent.html":{}}}],["selectedfuncionario.nombres",{"_index":151,"title":{},"body":{"components/AgendaComponent.html":{}}}],["selectedpaciente",{"_index":1252,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["selectedsegmento",{"_index":166,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["selectfuncionario",{"_index":179,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{}}}],["selectfuncionario(funcionario",{"_index":250,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["selectinfo",{"_index":213,"title":{},"body":{"components/AgendaComponent.html":{}}}],["selectinfo.start",{"_index":365,"title":{},"body":{"components/AgendaComponent.html":{}}}],["selectinfo.view.calendar.unselect",{"_index":362,"title":{},"body":{"components/AgendaComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["semana",{"_index":1245,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["serif",{"_index":544,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["serve",{"_index":2093,"title":{},"body":{"index.html":{}}}],["server",{"_index":2092,"title":{},"body":{"index.html":{}}}],["services/database.service",{"_index":314,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{}}}],["services/toast.service",{"_index":1140,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["servicio",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["sesión",{"_index":1115,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{}}}],["set",{"_index":1026,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["settimeout",{"_index":340,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["sexta",{"_index":838,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sgh_id",{"_index":684,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sgh_segmento_horario",{"_index":672,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sgh_segmento_horario(id",{"_index":685,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sghid",{"_index":1049,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["shadow",{"_index":51,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["short",{"_index":1223,"title":{},"body":{"components/DashboardComponent.html":{}}}],["show",{"_index":2012,"title":{},"body":{"injectables/ToastService.html":{}}}],["show(message",{"_index":1987,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["showassignmodal",{"_index":1253,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["showerror",{"_index":1255,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["showloginmodal",{"_index":1603,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["showprofilemodal",{"_index":1093,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["showregistermodal",{"_index":1604,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["showsegmentomodal",{"_index":167,"title":{},"body":{"components/AgendaComponent.html":{}}}],["showsuccess",{"_index":1257,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["showusermenu",{"_index":1094,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["si",{"_index":288,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["sido",{"_index":1368,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["silva",{"_index":842,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sin",{"_index":999,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sistema",{"_index":1392,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["size",{"_index":78,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["slidein",{"_index":1775,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["smooth",{"_index":1632,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["sofia.ortega@ejemplo.com",{"_index":814,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sofía",{"_index":811,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["solicita",{"_index":1444,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["solicitada",{"_index":1910,"title":{},"body":{"guards/RoleGuard.html":{}}}],["solid",{"_index":102,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["solo",{"_index":1077,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["son",{"_index":1576,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["space",{"_index":66,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["speciality",{"_index":1236,"title":{},"body":{"components/DashboardComponent.html":{}}}],["specialty",{"_index":82,"title":{},"body":{"components/AgendaComponent.html":{}}}],["sql",{"_index":643,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sql.database",{"_index":647,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sql.js",{"_index":597,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"dependencies.html":{}}}],["sqlite",{"_index":536,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["src/.../app.config.ts",{"_index":2135,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.service.ts",{"_index":2081,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/agenda/agenda.component.ts",{"_index":9,"title":{},"body":{"components/AgendaComponent.html":{},"coverage.html":{}}}],["src/app/agenda/agenda.component.ts:240",{"_index":265,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:243",{"_index":292,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:245",{"_index":282,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:247",{"_index":278,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:249",{"_index":299,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:252",{"_index":276,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:274",{"_index":303,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:276",{"_index":296,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:278",{"_index":301,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:280",{"_index":286,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:287",{"_index":195,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:289",{"_index":188,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:306",{"_index":202,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:320",{"_index":260,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:351",{"_index":241,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:359",{"_index":245,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:377",{"_index":251,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:391",{"_index":237,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:409",{"_index":208,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:426",{"_index":232,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:448",{"_index":225,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:463",{"_index":216,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:476",{"_index":256,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/segmento",{"_index":1919,"title":{},"body":{"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:22",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":481,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":479,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:43",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":489,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:45",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:46",{"_index":452,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:78",{"_index":460,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:94",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2027,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/citas/citas.component.ts",{"_index":1239,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"coverage.html":{}}}],["src/app/components/login",{"_index":1678,"title":{},"body":{"components/LoginModalComponent.html":{},"coverage.html":{}}}],["src/app/components/profile",{"_index":1784,"title":{},"body":{"components/ProfileModalComponent.html":{},"coverage.html":{}}}],["src/app/components/register",{"_index":1847,"title":{},"body":{"components/RegisterModalComponent.html":{},"coverage.html":{}}}],["src/app/components/toast/toast.component.ts",{"_index":1993,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/components/toast/toast.component.ts:58",{"_index":2002,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/components/toast/toast.component.ts:60",{"_index":1999,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/components/toast/toast.component.ts:77",{"_index":2000,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":1084,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:103",{"_index":1113,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:119",{"_index":1109,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:123",{"_index":1112,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:127",{"_index":1116,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:131",{"_index":1108,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:37",{"_index":1120,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:39",{"_index":1135,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:40",{"_index":1134,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:43",{"_index":1130,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:65",{"_index":1107,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:77",{"_index":1138,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:87",{"_index":1110,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:95",{"_index":1117,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts",{"_index":1315,"title":{},"body":{"components/FuncionariosComponent.html":{},"coverage.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:312",{"_index":1380,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:314",{"_index":1382,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:316",{"_index":1377,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:318",{"_index":1378,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:320",{"_index":1387,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:322",{"_index":1386,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:324",{"_index":1388,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:326",{"_index":1389,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:328",{"_index":1376,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:330",{"_index":1390,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:332",{"_index":1352,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:368",{"_index":1370,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:377",{"_index":1374,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:395",{"_index":1363,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:405",{"_index":1375,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:426",{"_index":1365,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:436",{"_index":1357,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:454",{"_index":1371,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:494",{"_index":1354,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:513",{"_index":1372,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/guards/role.guard.ts",{"_index":1897,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/app/guards/role.guard.ts:12",{"_index":1903,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/guards/role.guard.ts:25",{"_index":1908,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/inscripcion/inscripcion.component.ts",{"_index":1459,"title":{},"body":{"components/InscripcionComponent.html":{},"coverage.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:117",{"_index":1482,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:131",{"_index":1496,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:163",{"_index":1488,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:182",{"_index":1494,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:209",{"_index":1490,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:21",{"_index":1500,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:23",{"_index":1501,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:247",{"_index":1491,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:25",{"_index":1502,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:259",{"_index":1473,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:27",{"_index":1503,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:29",{"_index":1499,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:31",{"_index":1471,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:56",{"_index":1492,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:76",{"_index":1487,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:85",{"_index":1486,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:95",{"_index":1485,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/landing",{"_index":1596,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/services/database.service.ts",{"_index":589,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/toast.service.ts",{"_index":1974,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/services/toast.service.ts:23",{"_index":2016,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/services/toast.service.ts:25",{"_index":2015,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/services/toast.service.ts:33",{"_index":2014,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/services/toast.service.ts:42",{"_index":2013,"title":{},"body":{"injectables/ToastService.html":{}}}],["standalone",{"_index":24,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["start",{"_index":350,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["startdate",{"_index":1925,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["startdate.toisostring",{"_index":1958,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["started",{"_index":2083,"title":{"index.html":{}},"body":{}}],["startofweek",{"_index":1266,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["startrecovery",{"_index":1692,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["state",{"_index":1906,"title":{},"body":{"guards/RoleGuard.html":{}}}],["statements",{"_index":2020,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["stored",{"_index":2109,"title":{},"body":{"index.html":{}}}],["streams",{"_index":623,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["stretch",{"_index":1219,"title":{},"body":{"components/DashboardComponent.html":{}}}],["string",{"_index":291,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["styleurl",{"_index":1920,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["styleurls",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{}}}],["su",{"_index":998,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["suave",{"_index":1626,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["subject",{"_index":1976,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["submit",{"_index":1323,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["subscribe",{"_index":1262,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["subscription",{"_index":464,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["success",{"_index":1183,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["successmessage",{"_index":1259,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["sum",{"_index":1538,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["sus",{"_index":254,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{}}}],["suscripciones",{"_index":458,"title":{},"body":{"components/AppComponent.html":{}}}],["suscripción",{"_index":2001,"title":{},"body":{"components/ToastComponent.html":{}}}],["switch(fieldname",{"_index":1528,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["system",{"_index":541,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["sánchez",{"_index":754,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["séptima",{"_index":846,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["tablas",{"_index":637,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["table",{"_index":650,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2056,"title":{},"body":{"coverage.html":{}}}],["tamaño",{"_index":200,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["también",{"_index":958,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["tarea",{"_index":2073,"title":{},"body":{"dependencies.html":{}}}],["tareaduoc",{"_index":2084,"title":{},"body":{"index.html":{}}}],["task",{"_index":551,"title":{},"body":{"components/AppComponent.html":{}}}],["tasks",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["telefono",{"_index":661,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["teléfono",{"_index":1333,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["template",{"_index":116,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["templateurl",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["temporal",{"_index":969,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["temporales",{"_index":1975,"title":{},"body":{"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["temporary",{"_index":993,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["tener",{"_index":1827,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["tenga",{"_index":1479,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{}}}],["tercera",{"_index":808,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["test",{"_index":2115,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2124,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2114,"title":{},"body":{"index.html":{}}}],["text",{"_index":579,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["texto",{"_index":1982,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.calendaroptions.events",{"_index":355,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.checkfuncionarioavailability(f.id",{"_index":1261,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.checkscreensize",{"_index":330,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.citas",{"_index":513,"title":{},"body":{"components/AppComponent.html":{}}}],["this.citassubject.asobservable",{"_index":632,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.citassubject.next(result[0].values.map((row",{"_index":942,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.citassubscription",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["this.citassubscription.unsubscribe",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["this.close.emit",{"_index":1732,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["this.closeassignmodal",{"_index":1309,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.closemodal",{"_index":1761,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["this.cupos",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cupossubject.asobservable",{"_index":631,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.cupossubject.next(result[0].values.map((row",{"_index":940,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.cupossubscription",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cupossubscription.unsubscribe",{"_index":534,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentuser",{"_index":1805,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.currentuser.apellidos",{"_index":1186,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{}}}],["this.currentuser.apellidos?.[0",{"_index":1161,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.currentuser.email",{"_index":1817,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.currentuser.esp_id",{"_index":1819,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.currentuser.especialidad",{"_index":1187,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.currentuser.nombres",{"_index":1185,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{}}}],["this.currentuser.nombres?.[0",{"_index":1160,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.currentuser.telefono",{"_index":1818,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.db",{"_index":646,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.exec",{"_index":918,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.exec('select",{"_index":931,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.exec(`select",{"_index":948,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.run",{"_index":648,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.run('insert",{"_index":905,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.run('update",{"_index":1053,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.run(`delete",{"_index":1021,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.run(`insert",{"_index":1014,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.run(script",{"_index":902,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.run(sql",{"_index":1076,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.dbservice.addfuncionario(funcionario",{"_index":1439,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.dbservice.addfuncionario(newfuncionario",{"_index":1883,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.dbservice.addpaciente(paciente",{"_index":1559,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.dbservice.addsegmentohorario(segmento",{"_index":374,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.dbservice.assignsegmentotopaciente(this.selectedpaciente.id",{"_index":1303,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.dbservice.citas$.subscribe",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dbservice.cupos$.subscribe",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dbservice.deletefuncionario(this.selectedfuncionario.id",{"_index":1449,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.dbservice.deletesegmentohorario(id",{"_index":384,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.dbservice.especialidades$.subscribe",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.dbservice.funcionarios$.subscribe",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"components/FuncionariosComponent.html":{}}}],["this.dbservice.getfuncionariobyrut(cleanrut",{"_index":1754,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.dbservice.getfuncionariobyrut(formvalue.rut",{"_index":1877,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.dbservice.getfuncionariobyrut(this.recoveryrut",{"_index":1745,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.dbservice.getpacientebyrut(cleanrut",{"_index":1551,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.dbservice.getpacientebyrut(this.searchrut",{"_index":1297,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.dbservice.getsegmentohorariobyid(clickinfo.event.id",{"_index":387,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.dbservice.getsegmentoshorariobyfuncionarioid(funcionarioid",{"_index":345,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.dbservice.hasrole(currentuser.id",{"_index":1917,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.dbservice.hasrole(this.currentuser.id",{"_index":1158,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.dbservice.initializedatabase",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"guards/RoleGuard.html":{}}}],["this.dbservice.loadespecialidades",{"_index":517,"title":{},"body":{"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["this.dbservice.loadfuncionarios",{"_index":1402,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.dbservice.loadpacientes",{"_index":1526,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.dbservice.pacientes$.subscribe",{"_index":503,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.dbservice.segmentoshorario$.subscribe",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dbservice.updatefuncionario(updateduser",{"_index":1843,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.dbservice.updatesegmentohorario(segmento",{"_index":376,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.delete.emit(this.segmentotoedit.id",{"_index":1947,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.emaildomainvalidator",{"_index":1514,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.error",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["this.errormessage",{"_index":1295,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.especialidades",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.especialidades.find(esp",{"_index":1407,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.especialidadessubject.asobservable",{"_index":627,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.especialidadessubject.next",{"_index":914,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.especialidadessubject.next(result[0].values.map((row",{"_index":911,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.especialidadessubscription",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["this.especialidadessubscription.unsubscribe",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["this.fb.group",{"_index":1394,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["this.filteredfuncionarios",{"_index":329,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["this.formatrut(paciente.rut",{"_index":1553,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.funcionario.id",{"_index":1960,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.funcionarioform",{"_index":1393,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.get(fieldname",{"_index":1414,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.get(key",{"_index":1431,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.invalid",{"_index":1429,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.markaspristine",{"_index":1411,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.markasuntouched",{"_index":1412,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.reset",{"_index":1452,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.setvalue",{"_index":1410,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.value",{"_index":1436,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarios",{"_index":328,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["this.funcionarios.filter(funcionario",{"_index":1406,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarios.map(f",{"_index":1311,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.funcionariossubject.asobservable",{"_index":628,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.funcionariossubject.next(result[0].values.map((row",{"_index":924,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.funcionariossubscription",{"_index":500,"title":{},"body":{"components/AppComponent.html":{}}}],["this.funcionariossubscription.unsubscribe",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["this.generatedcode",{"_index":1746,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.getespecialidadbyname(funcionario.especialidad",{"_index":1059,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.getespecialidadnombre(funcionario.esp_id",{"_index":1401,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.getfuncionariobyid(funcionario.id",{"_index":1062,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.getpacientebyrut(paciente.rut",{"_index":977,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.iseditmode",{"_index":1941,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.isloading",{"_index":1434,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.isrecovering",{"_index":1734,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.issmallscreen",{"_index":333,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.loadcitas",{"_index":700,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loadcupos",{"_index":699,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loadespecialidades",{"_index":695,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loadfuncionarios",{"_index":696,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loading",{"_index":518,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadpacientes",{"_index":697,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loadroles",{"_index":702,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loadrolesfuncionario",{"_index":703,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loadsegmentos(funcionario.id",{"_index":1267,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.loadsegmentos(this.selectedfuncionario.id",{"_index":1308,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.loadsegmentoshorario",{"_index":698,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loadshifts(funcionario.id",{"_index":339,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.loadshifts(this.selectedfuncionario!.id",{"_index":377,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.message",{"_index":1550,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.navitems.filter(item",{"_index":1157,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.newpassword",{"_index":1739,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.newpassword.length",{"_index":1750,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.nuevospacientes.find(p",{"_index":1006,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.nuevospacientes.length",{"_index":995,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.nuevospacientes.push(paciente",{"_index":996,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.pacienteform",{"_index":1510,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.get(fieldname",{"_index":1527,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.get(key",{"_index":1556,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.invalid",{"_index":1554,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.patchvalue",{"_index":1552,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.reset",{"_index":1562,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.value",{"_index":1557,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacientes",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.pacientessubject.asobservable",{"_index":629,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.pacientessubject.next",{"_index":936,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.pacientessubject.next(pacientes",{"_index":935,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.pacientessubscription",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["this.pacientessubscription.unsubscribe",{"_index":532,"title":{},"body":{"components/AppComponent.html":{}}}],["this.password",{"_index":1755,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":1814,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.profileform",{"_index":1806,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.profileform.get(fieldname",{"_index":1826,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.profileform.get(key",{"_index":1835,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.profileform.invalid",{"_index":1833,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.profileform.patchvalue",{"_index":1816,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.profileform.value",{"_index":1836,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.recoverycode",{"_index":1736,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.recoverycodesent",{"_index":1737,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.recoverycodeverified",{"_index":1738,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.recoveryrut",{"_index":1735,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.registerform",{"_index":1866,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.registerform.get(fieldname",{"_index":1872,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.registerform.invalid",{"_index":1874,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.registerform.patchvalue",{"_index":1868,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.registerform.value",{"_index":1875,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.resetform",{"_index":1442,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["this.rolesfuncionariosubject.asobservable",{"_index":636,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.rolesfuncionariosubject.next(result[0].values.map((row",{"_index":946,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.rolessubject.asobservable",{"_index":634,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.rolessubject.next(result[0].values.map((row",{"_index":944,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.router.navigate",{"_index":1184,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["this.router.navigate(['/dashboard",{"_index":1762,"title":{},"body":{"components/LoginModalComponent.html":{},"guards/RoleGuard.html":{}}}],["this.rut.replace(/\\./g",{"_index":1753,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.rutvalidator",{"_index":1511,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.searchfuncionarios",{"_index":393,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{}}}],["this.searchrut",{"_index":1293,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["this.searchrut.replace(/\\./g",{"_index":1549,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.searchterm",{"_index":392,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.searchterm.tolowercase",{"_index":1405,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.searchterm.trim",{"_index":1403,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.seeddatabase",{"_index":694,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.seedroles",{"_index":701,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.segmentoform",{"_index":1936,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentoform.patchvalue",{"_index":1945,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentoform.valid",{"_index":1948,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentoform.value",{"_index":1949,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentoshorario",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["this.segmentoshorariosubject.asobservable",{"_index":630,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.segmentoshorariosubject.next(result[0].values.map((row",{"_index":938,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.segmentoshorariosubscription",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["this.segmentoshorariosubscription.unsubscribe",{"_index":533,"title":{},"body":{"components/AppComponent.html":{}}}],["this.segmentotoedit",{"_index":1940,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentotoedit.nombre",{"_index":1946,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentotoedit?.id",{"_index":1956,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.selecteddate",{"_index":364,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.selectedfuncionario",{"_index":338,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["this.selectedfuncionario?.id",{"_index":1437,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.selectedpaciente",{"_index":1298,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.selectedsegmento",{"_index":383,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.selectedsegmento.id",{"_index":1304,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.showassignmodal",{"_index":1273,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.showerror",{"_index":1294,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.showloginmodal",{"_index":1622,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.showprofilemodal",{"_index":1188,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.showregistermodal",{"_index":1623,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.showsegmentomodal",{"_index":366,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.showsuccess",{"_index":1299,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["this.showusermenu",{"_index":1165,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.startdate",{"_index":1951,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.submit.emit(segmento",{"_index":1961,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.subscription",{"_index":2007,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":2010,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.successmessage",{"_index":1300,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["this.toast",{"_index":2009,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastservice.show('cita",{"_index":1305,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.toastservice.show('error",{"_index":1846,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.toastservice.show('la",{"_index":1841,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.toastservice.show('paciente",{"_index":1560,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.toastservice.show('perfil",{"_index":1845,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.toastservice.show('usuario",{"_index":1884,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.toastservice.show(`cierre",{"_index":1181,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.toastservice.show(`inicio",{"_index":1760,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.toastservice.toast$.subscribe",{"_index":2008,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastsubject.asobservable",{"_index":1981,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.toastsubject.next",{"_index":1988,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.toastsubject.next(null",{"_index":1989,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.updatecalendarview",{"_index":341,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.validaterut(cleanrut",{"_index":1524,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.validaterut(rut",{"_index":1867,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["through",{"_index":582,"title":{},"body":{"components/AppComponent.html":{}}}],["throw",{"_index":704,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["throws",{"_index":640,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["thursday",{"_index":899,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["tiene",{"_index":1027,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["timegridplugin",{"_index":272,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["timestr",{"_index":1171,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["tipo",{"_index":1361,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["tipos",{"_index":608,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["title",{"_index":141,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["tld",{"_index":1572,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["tld.length",{"_index":1574,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["toast",{"_index":422,"title":{"interfaces/Toast.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toast.message",{"_index":1997,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcomponent",{"_index":421,"title":{"components/ToastComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["toastservice",{"_index":1106,"title":{"injectables/ToastService.html":{}},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastsubject",{"_index":1978,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["tocado",{"_index":1369,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["todas",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["todos",{"_index":283,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{}}}],["toggle",{"_index":85,"title":{},"body":{"components/AgendaComponent.html":{}}}],["toggleloginmodal",{"_index":1606,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["toggleregistermodal",{"_index":1607,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["togglesearch",{"_index":180,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["toggleusermenu",{"_index":1101,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["toolbar",{"_index":140,"title":{},"body":{"components/AgendaComponent.html":{}}}],["top",{"_index":92,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["torres",{"_index":764,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["total",{"_index":1970,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["transform",{"_index":90,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["transition",{"_index":55,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["translatex(0",{"_index":1996,"title":{},"body":{"components/ToastComponent.html":{}}}],["translatex(100",{"_index":1995,"title":{},"body":{"components/ToastComponent.html":{}}}],["translatey",{"_index":127,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["translatey(0",{"_index":1778,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["tres",{"_index":1740,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["true",{"_index":25,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["try",{"_index":370,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["trylogin(email",{"_index":947,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["tslib",{"_index":2075,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":1765,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["tuesday",{"_index":892,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["type",{"_index":191,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/sql.js",{"_index":2068,"title":{},"body":{"dependencies.html":{}}}],["término",{"_index":248,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["título",{"_index":482,"title":{},"body":{"components/AppComponent.html":{}}}],["u",{"_index":1162,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["ui",{"_index":540,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["un",{"_index":218,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{}}}],["una",{"_index":210,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["underline",{"_index":1782,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["unique",{"_index":690,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["unit",{"_index":2113,"title":{},"body":{"index.html":{}}}],["update",{"_index":1025,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["updatecalendarview",{"_index":181,"title":{},"body":{"components/AgendaComponent.html":{}}}],["updateduser",{"_index":1837,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["updateduser.password",{"_index":1842,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["updatefields",{"_index":1063,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["updatefields.map(field",{"_index":1065,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["updatefuncionario",{"_index":1058,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["updatefuncionario(funcionario",{"_index":1057,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["updatefuncionariopassword(id",{"_index":1054,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["updatesegmentohorario(segmentohorario",{"_index":1023,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["updating",{"_index":375,"title":{},"body":{"components/AgendaComponent.html":{}}}],["usa_agenda",{"_index":708,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["usa_citas",{"_index":707,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["usa_inscripcion",{"_index":709,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["usando",{"_index":601,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["use",{"_index":2105,"title":{},"body":{"index.html":{}}}],["user",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["userdata",{"_index":1756,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["usuario",{"_index":1080,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["usuarios",{"_index":1729,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["utilizan",{"_index":609,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["valentina",{"_index":831,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["valentina.mendoza@ejemplo.com",{"_index":834,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["valida",{"_index":1497,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validación",{"_index":1865,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["validador",{"_index":1474,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validar",{"_index":1478,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validaterut",{"_index":1470,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validaterut(rut",{"_index":1495,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validation",{"_index":1519,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["validationerrors",{"_index":1504,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validator",{"_index":1813,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validatorfn",{"_index":1477,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators",{"_index":1391,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["validators.email",{"_index":1397,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.max(48",{"_index":1938,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["validators.min(1",{"_index":1937,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["validators.minlength(12",{"_index":1513,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.minlength(2",{"_index":1396,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.minlength(6",{"_index":1399,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.pattern(/^(?=.*[a",{"_index":1807,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.pattern(/^[0",{"_index":1398,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["validators.required",{"_index":1395,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["valor",{"_index":612,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["value",{"_index":269,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":715,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["values.push(funcionario.id",{"_index":1074,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["values.push(newfuncionario.password",{"_index":1070,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["values.push(oldfuncionario",{"_index":1072,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["var",{"_index":398,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["vargas",{"_index":802,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["variable",{"_index":2028,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2134,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ventana",{"_index":201,"title":{},"body":{"components/AgendaComponent.html":{}}}],["verifica",{"_index":203,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["verificación",{"_index":1742,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["verificado",{"_index":1724,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["verificar",{"_index":1030,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["verificationdigit",{"_index":1535,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["version",{"_index":2089,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":2117,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":310,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["viewchild('calendar",{"_index":264,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["visibilidad",{"_index":258,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["visible",{"_index":1136,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["vista",{"_index":262,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{}}}],["void",{"_index":206,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["válido",{"_index":1480,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["wassmallscreen",{"_index":332,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["wednesday",{"_index":895,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["week",{"_index":879,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["weight",{"_index":80,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["white",{"_index":44,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["width",{"_index":34,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["window.innerwidth",{"_index":275,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["window:resize",{"_index":183,"title":{},"body":{"components/AgendaComponent.html":{}}}],["wrap",{"_index":1220,"title":{},"body":{"components/DashboardComponent.html":{}}}],["xito",{"_index":1256,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["xito/error",{"_index":1291,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["y",{"_index":253,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["ya",{"_index":979,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["year",{"_index":1179,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["z",{"_index":1200,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["z\\d]{6",{"_index":1811,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["z])(?=.*[a",{"_index":1808,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["z])(?=.*\\d)[a",{"_index":1809,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["za",{"_index":1810,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["zone.js",{"_index":2077,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AgendaComponent.html":{"url":"components/AgendaComponent.html","title":"component - AgendaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AgendaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/agenda/agenda.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja la agenda de los funcionarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-agenda\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            FullCalendarModule\n                                SegmentoModalComponent\n                \n            \n\n\n            \n                styles\n                \n    .agenda-container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 2rem;\n    }\n\n    .search-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      margin-bottom: 2rem;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n      transition: all 0.3s ease;\n    }\n\n    .search-section.collapsed {\n      padding: 0.75rem;\n      margin-bottom: 1rem;\n    }\n\n    .search-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      cursor: pointer;\n    }\n\n    .header-content {\n      flex: 1;\n    }\n\n    .header-content h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.1rem;\n      font-weight: 500;\n    }\n\n    .specialty {\n      font-size: 0.9rem;\n      color: #718096;\n    }\n\n    .toggle-btn {\n      background: none;\n      border: none;\n      color: #4a5568;\n      font-size: 1rem;\n      cursor: pointer;\n      padding: 0.25rem;\n      transition: transform 0.3s ease;\n      margin-left: 1rem;\n    }\n\n    .search-content {\n      margin-top: 1rem;\n      transition: all 0.3s ease;\n      max-height: 500px;\n      overflow: hidden;\n    }\n\n    .search-content.hidden {\n      margin-top: 0;\n      max-height: 0;\n      opacity: 0;\n    }\n\n    .search-box {\n      margin-bottom: 1.5rem;\n    }\n\n    .search-input {\n      width: 100%;\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n      transition: border-color 0.2s;\n    }\n\n    .search-input:focus {\n      outline: none;\n      border-color: #4299e1;\n      box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n    }\n\n    .funcionarios-list {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n      gap: 1rem;\n    }\n\n    .funcionario-card {\n      background: #f8fafc;\n      padding: 1rem;\n      border-radius: 6px;\n      border: 1px solid #e2e8f0;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .funcionario-card:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n      border-color: #4299e1;\n    }\n\n    .funcionario-card.selected {\n      background: #ebf8ff;\n      border-color: #4299e1;\n    }\n\n    .funcionario-info h3 {\n      margin: 0 0 0.5rem 0;\n      color: #2d3748;\n      font-size: 1.1rem;\n    }\n\n    .funcionario-info p {\n      margin: 0;\n      color: #718096;\n      font-size: 0.9rem;\n    }\n\n    .calendar-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .calendar-section h2 {\n      margin: 0 0 1.5rem 0;\n      color: #2d3748;\n    }\n\n    :host ::ng-deep {\n      .fc {\n        font-family: inherit;\n      }\n\n      .fc-toolbar-title {\n        font-size: 1.2rem !important;\n      }\n\n      .fc-button-primary {\n        background-color: #4299e1 !important;\n        border-color: #3182ce !important;\n      }\n\n      .fc-button-primary:hover {\n        background-color: #3182ce !important;\n        border-color: #2c5282 !important;\n      }\n\n      .fc-event {\n        background-color: #4299e1;\n        border-color: #3182ce;\n      }\n    }\n  \n            \n\n            \n                template\n                \n  \n    \n      \n        {{ selectedFuncionario ? selectedFuncionario.nombres + ' ' + selectedFuncionario.apellidos : 'Seleccionar Funcionario' }}\n        {{ selectedFuncionario.especialidad }}\n      \n      \n        {{ selectedFuncionario ? '▼' : '▲' }}\n      \n    \n\n    \n      \n        \n      \n\n       0\">\n        \n          \n            {{ funcionario.nombres }} {{ funcionario.apellidos }}\n            {{ funcionario.especialidad }}\n          \n        \n      \n    \n  \n\n  \n    \n  \n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                calendarComponent\n                            \n                            \n                                calendarOptions\n                            \n                            \n                                filteredFuncionarios\n                            \n                            \n                                funcionarios\n                            \n                            \n                                isSmallScreen\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedDate\n                            \n                            \n                                selectedFuncionario\n                            \n                            \n                                selectedSegmento\n                            \n                            \n                                showSegmentoModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                handleDateSelect\n                            \n                            \n                                handleEventClick\n                            \n                            \n                                handleSegmentoDelete\n                            \n                            \n                                handleSegmentoSubmit\n                            \n                            \n                                loadShifts\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                searchFuncionarios\n                            \n                            \n                                selectFuncionario\n                            \n                            \n                                toggleSearch\n                            \n                            \n                                    Private\n                                updateCalendarView\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/agenda/agenda.component.ts:289\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:287\n                        \n                    \n\n\n            \n                \n                        Escucha cambios en el tamaño de la ventana\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:306\n                        \n                    \n\n\n            \n                \n                        Verifica el tamaño de la pantalla\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDateSelect\n                        \n                    \n                \n            \n            \n                \nhandleDateSelect(selectInfo: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:409\n                        \n                    \n\n\n            \n                \n                        Maneja la selección de una fecha en el calendario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selectInfo\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Información de la selección\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleEventClick\n                        \n                    \n                \n            \n            \n                \nhandleEventClick(clickInfo: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:463\n                        \n                    \n\n\n            \n                \n                        Maneja el clic en un evento del calendario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                clickInfo\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Información del evento clickeado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSegmentoDelete\n                        \n                    \n                \n            \n            \n                \nhandleSegmentoDelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:448\n                        \n                    \n\n\n            \n                \n                        Maneja la eliminación de un segmento\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del segmento a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSegmentoSubmit\n                        \n                    \n                \n            \n            \n                \nhandleSegmentoSubmit(segmento: SegmentoHorario)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:426\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de segmento\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                segmento\n                                            \n                                                            SegmentoHorario\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Segmento a guardar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadShifts\n                        \n                    \n                \n            \n            \n                \nloadShifts(funcionarioId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:391\n                        \n                    \n\n\n            \n                \n                        Carga los horarios de un funcionario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                funcionarioId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del funcionario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:351\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:287\n                        \n                    \n\n\n            \n                \n                        Escucha cambios en el tamaño de la ventana\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchFuncionarios\n                        \n                    \n                \n            \n            \n                \nsearchFuncionarios()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:359\n                        \n                    \n\n\n            \n                \n                        Filtra funcionarios según término de búsqueda\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFuncionario\n                        \n                    \n                \n            \n            \n                \nselectFuncionario(funcionario: Funcionario)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:377\n                        \n                    \n\n\n            \n                \n                        Selecciona un funcionario y carga sus horarios\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                funcionario\n                                            \n                                                            Funcionario\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcionario seleccionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSearch\n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:476\n                        \n                    \n\n\n            \n                \n                        Alterna la visibilidad de la sección de búsqueda\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateCalendarView\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCalendarView()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:320\n                        \n                    \n\n\n            \n                \n                        Actualiza la vista del calendario\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        calendarComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FullCalendarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('calendar')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:240\n                        \n                    \n\n            \n                \n                    Referencia al componente de calendario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CalendarOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    initialView: window.innerWidth \n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:252\n                        \n                    \n\n            \n                \n                    Configuración del calendario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredFuncionarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Funcionario[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:247\n                        \n                    \n\n            \n                \n                    Lista de funcionarios filtrados por búsqueda\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        funcionarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Funcionario[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:245\n                        \n                    \n\n            \n                \n                    Lista de todos los funcionarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSmallScreen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:280\n                        \n                    \n\n            \n                \n                    Indica si la pantalla es pequeña\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:243\n                        \n                    \n\n            \n                \n                    Término de búsqueda para funcionarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:276\n                        \n                    \n\n            \n                \n                    Fecha seleccionada para nuevo segmento\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFuncionario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Funcionario | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:249\n                        \n                    \n\n            \n                \n                    Funcionario seleccionado actualmente\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSegmento\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegmentoHorario | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:278\n                        \n                    \n\n            \n                \n                    Segmento seleccionado para edición\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSegmentoModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:274\n                        \n                    \n\n            \n                \n                    Indica si se debe mostrar el modal de segmento\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, HostListener, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatabaseService, Funcionario, SegmentoHorario } from '../services/database.service';\nimport { CalendarOptions, EventInput } from '@fullcalendar/core';\nimport { FullCalendarModule, FullCalendarComponent } from '@fullcalendar/angular';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { SegmentoModalComponent } from './segmento-modal/segmento-modal.component';\n\n/**\n * Componente que maneja la agenda de los funcionarios\n * @description Permite a los funcionarios gestionar sus horarios de atención\n */\n@Component({\n  selector: 'app-agenda',\n  standalone: true,\n  imports: [CommonModule, FormsModule, FullCalendarModule, SegmentoModalComponent],\n  template: `\n    \n      \n        \n          \n            {{ selectedFuncionario ? selectedFuncionario.nombres + ' ' + selectedFuncionario.apellidos : 'Seleccionar Funcionario' }}\n            {{ selectedFuncionario.especialidad }}\n          \n          \n            {{ selectedFuncionario ? '▼' : '▲' }}\n          \n        \n\n        \n          \n            \n          \n\n           0\">\n            \n              \n                {{ funcionario.nombres }} {{ funcionario.apellidos }}\n                {{ funcionario.especialidad }}\n              \n            \n          \n        \n      \n\n      \n        \n      \n\n      \n    \n  `,\n  styles: [`\n    .agenda-container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 2rem;\n    }\n\n    .search-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      margin-bottom: 2rem;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n      transition: all 0.3s ease;\n    }\n\n    .search-section.collapsed {\n      padding: 0.75rem;\n      margin-bottom: 1rem;\n    }\n\n    .search-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      cursor: pointer;\n    }\n\n    .header-content {\n      flex: 1;\n    }\n\n    .header-content h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.1rem;\n      font-weight: 500;\n    }\n\n    .specialty {\n      font-size: 0.9rem;\n      color: #718096;\n    }\n\n    .toggle-btn {\n      background: none;\n      border: none;\n      color: #4a5568;\n      font-size: 1rem;\n      cursor: pointer;\n      padding: 0.25rem;\n      transition: transform 0.3s ease;\n      margin-left: 1rem;\n    }\n\n    .search-content {\n      margin-top: 1rem;\n      transition: all 0.3s ease;\n      max-height: 500px;\n      overflow: hidden;\n    }\n\n    .search-content.hidden {\n      margin-top: 0;\n      max-height: 0;\n      opacity: 0;\n    }\n\n    .search-box {\n      margin-bottom: 1.5rem;\n    }\n\n    .search-input {\n      width: 100%;\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n      transition: border-color 0.2s;\n    }\n\n    .search-input:focus {\n      outline: none;\n      border-color: #4299e1;\n      box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n    }\n\n    .funcionarios-list {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n      gap: 1rem;\n    }\n\n    .funcionario-card {\n      background: #f8fafc;\n      padding: 1rem;\n      border-radius: 6px;\n      border: 1px solid #e2e8f0;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .funcionario-card:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n      border-color: #4299e1;\n    }\n\n    .funcionario-card.selected {\n      background: #ebf8ff;\n      border-color: #4299e1;\n    }\n\n    .funcionario-info h3 {\n      margin: 0 0 0.5rem 0;\n      color: #2d3748;\n      font-size: 1.1rem;\n    }\n\n    .funcionario-info p {\n      margin: 0;\n      color: #718096;\n      font-size: 0.9rem;\n    }\n\n    .calendar-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .calendar-section h2 {\n      margin: 0 0 1.5rem 0;\n      color: #2d3748;\n    }\n\n    :host ::ng-deep {\n      .fc {\n        font-family: inherit;\n      }\n\n      .fc-toolbar-title {\n        font-size: 1.2rem !important;\n      }\n\n      .fc-button-primary {\n        background-color: #4299e1 !important;\n        border-color: #3182ce !important;\n      }\n\n      .fc-button-primary:hover {\n        background-color: #3182ce !important;\n        border-color: #2c5282 !important;\n      }\n\n      .fc-event {\n        background-color: #4299e1;\n        border-color: #3182ce;\n      }\n    }\n  `]\n})\nexport class AgendaComponent implements OnInit {\n  /** Referencia al componente de calendario */\n  @ViewChild('calendar') calendarComponent!: FullCalendarComponent;\n  \n  /** Término de búsqueda para funcionarios */\n  searchTerm: string = '';\n  /** Lista de todos los funcionarios */\n  funcionarios: Funcionario[] = [];\n  /** Lista de funcionarios filtrados por búsqueda */\n  filteredFuncionarios: Funcionario[] = [];\n  /** Funcionario seleccionado actualmente */\n  selectedFuncionario: Funcionario | null = null;\n\n  /** Configuración del calendario */\n  calendarOptions: CalendarOptions = {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    initialView: window.innerWidth  {\n        this.funcionarios = funcionarios;\n        this.filteredFuncionarios = funcionarios;\n      }\n    );\n    this.checkScreenSize();\n  }\n\n  /**\n   * Verifica el tamaño de la pantalla\n   * @description Actualiza isSmallScreen y la vista del calendario\n   * @private\n   */\n  private checkScreenSize() {\n    const wasSmallScreen = this.isSmallScreen;\n    this.isSmallScreen = window.innerWidth  \n      funcionario.nombres.toLowerCase().includes(searchTermLower) ||\n      funcionario.apellidos.toLowerCase().includes(searchTermLower) ||\n      funcionario.especialidad?.toLowerCase().includes(searchTermLower)\n    );\n  }\n\n  /**\n   * Selecciona un funcionario y carga sus horarios\n   * @param funcionario Funcionario seleccionado\n   */\n  selectFuncionario(funcionario: Funcionario) {\n    this.selectedFuncionario = funcionario;\n    this.loadShifts(funcionario.id);\n    \n    setTimeout(() => {\n      this.updateCalendarView();\n    }, 0);\n  }\n\n  /**\n   * Carga los horarios de un funcionario\n   * @param funcionarioId ID del funcionario\n   * @description Actualiza los eventos del calendario con los segmentos del funcionario\n   */\n  loadShifts(funcionarioId: number) {\n    const segmentos = this.dbService.getSegmentosHorarioByFuncionarioId(funcionarioId);\n    const events: EventInput[] = segmentos.map(segmento => ({\n      id: segmento.id.toString(),\n      title: segmento.nombre,\n      start: segmento.fecha_hora_inicio,\n      end: segmento.fecha_hora_fin,\n      funcionarioId: segmento.fun_id\n    }));\n\n    this.calendarOptions.events = events;\n  }\n\n  /**\n   * Maneja la selección de una fecha en el calendario\n   * @param selectInfo Información de la selección\n   * @description Abre el modal para crear un nuevo segmento\n   */\n  handleDateSelect(selectInfo: any) {\n    if (!this.selectedFuncionario) {\n      alert('Por favor seleccione un funcionario primero');\n      selectInfo.view.calendar.unselect();\n      return;\n    }\n\n    this.selectedDate = selectInfo.start;\n    this.showSegmentoModal = true;\n    selectInfo.view.calendar.unselect();\n  }\n\n  /**\n   * Maneja el envío del formulario de segmento\n   * @param segmento Segmento a guardar\n   * @description Crea o actualiza un segmento horario\n   */\n  handleSegmentoSubmit(segmento: SegmentoHorario) {\n    try {\n      if (segmento.id === 0) {\n        console.log(\"### creating\", segmento);\n        this.dbService.addSegmentoHorario(segmento);\n      } else {\n        console.log(\"### updating\", segmento);\n        this.dbService.updateSegmentoHorario(segmento);\n      }\n      this.loadShifts(this.selectedFuncionario!.id);\n    } catch (error) {\n      console.error('Error saving segmento:', error);\n      alert('Error al guardar el segmento horario');\n    }\n    this.showSegmentoModal = false;\n    this.selectedSegmento = null;\n  }\n\n  /**\n   * Maneja la eliminación de un segmento\n   * @param id ID del segmento a eliminar\n   */\n  handleSegmentoDelete(id: number) {\n    try {\n      this.dbService.deleteSegmentoHorario(id);\n      this.loadShifts(this.selectedFuncionario!.id);\n    } catch (error) {\n      console.error('Error deleting segmento:', error);\n      alert('Error al eliminar el segmento horario');\n    }\n  }\n\n  /**\n   * Maneja el clic en un evento del calendario\n   * @param clickInfo Información del evento clickeado\n   * @description Abre el modal para editar el segmento\n   */\n  handleEventClick(clickInfo: any) {\n    console.log(\"### clickInfo\", clickInfo);\n    const segmento = this.dbService.getSegmentoHorarioById(clickInfo.event.id);\n    if (segmento) {\n      this.selectedSegmento = segmento;\n      this.showSegmentoModal = true;\n    }\n  }\n\n  /**\n   * Alterna la visibilidad de la sección de búsqueda\n   * @description Limpia la selección actual si está colapsada\n   */\n  toggleSearch() {\n    if (this.selectedFuncionario) {\n      this.selectedFuncionario = null;\n      this.searchTerm = '';\n      this.searchFuncionarios();\n    }\n  }\n}\n\n    \n\n\n    \n            \n    .agenda-container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 2rem;\n    }\n\n    .search-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      margin-bottom: 2rem;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n      transition: all 0.3s ease;\n    }\n\n    .search-section.collapsed {\n      padding: 0.75rem;\n      margin-bottom: 1rem;\n    }\n\n    .search-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      cursor: pointer;\n    }\n\n    .header-content {\n      flex: 1;\n    }\n\n    .header-content h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.1rem;\n      font-weight: 500;\n    }\n\n    .specialty {\n      font-size: 0.9rem;\n      color: #718096;\n    }\n\n    .toggle-btn {\n      background: none;\n      border: none;\n      color: #4a5568;\n      font-size: 1rem;\n      cursor: pointer;\n      padding: 0.25rem;\n      transition: transform 0.3s ease;\n      margin-left: 1rem;\n    }\n\n    .search-content {\n      margin-top: 1rem;\n      transition: all 0.3s ease;\n      max-height: 500px;\n      overflow: hidden;\n    }\n\n    .search-content.hidden {\n      margin-top: 0;\n      max-height: 0;\n      opacity: 0;\n    }\n\n    .search-box {\n      margin-bottom: 1.5rem;\n    }\n\n    .search-input {\n      width: 100%;\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n      transition: border-color 0.2s;\n    }\n\n    .search-input:focus {\n      outline: none;\n      border-color: #4299e1;\n      box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n    }\n\n    .funcionarios-list {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n      gap: 1rem;\n    }\n\n    .funcionario-card {\n      background: #f8fafc;\n      padding: 1rem;\n      border-radius: 6px;\n      border: 1px solid #e2e8f0;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .funcionario-card:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n      border-color: #4299e1;\n    }\n\n    .funcionario-card.selected {\n      background: #ebf8ff;\n      border-color: #4299e1;\n    }\n\n    .funcionario-info h3 {\n      margin: 0 0 0.5rem 0;\n      color: #2d3748;\n      font-size: 1.1rem;\n    }\n\n    .funcionario-info p {\n      margin: 0;\n      color: #718096;\n      font-size: 0.9rem;\n    }\n\n    .calendar-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .calendar-section h2 {\n      margin: 0 0 1.5rem 0;\n      color: #2d3748;\n    }\n\n    :host ::ng-deep {\n      .fc {\n        font-family: inherit;\n      }\n\n      .fc-toolbar-title {\n        font-size: 1.2rem !important;\n      }\n\n      .fc-button-primary {\n        background-color: #4299e1 !important;\n        border-color: #3182ce !important;\n      }\n\n      .fc-button-primary:hover {\n        background-color: #3182ce !important;\n        border-color: #2c5282 !important;\n      }\n\n      .fc-event {\n        background-color: #4299e1;\n        border-color: #3182ce;\n      }\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ selectedFuncionario ? selectedFuncionario.nombres + \\' \\' + selectedFuncionario.apellidos : \\'Seleccionar Funcionario\\' }}        {{ selectedFuncionario.especialidad }}                    {{ selectedFuncionario ? \\'▼\\' : \\'▲\\' }}                                         0\">                              {{ funcionario.nombres }} {{ funcionario.apellidos }}            {{ funcionario.especialidad }}                                        '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AgendaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicación\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterModule\n                                ToastComponent\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                citas\n                            \n                            \n                                    Private\n                                citasSubscription\n                            \n                            \n                                cupos\n                            \n                            \n                                    Private\n                                cuposSubscription\n                            \n                            \n                                error\n                            \n                            \n                                especialidades\n                            \n                            \n                                    Private\n                                especialidadesSubscription\n                            \n                            \n                                funcionarios\n                            \n                            \n                                    Private\n                                funcionariosSubscription\n                            \n                            \n                                loading\n                            \n                            \n                                newEspecialidadTitle\n                            \n                            \n                                pacientes\n                            \n                            \n                                    Private\n                                pacientesSubscription\n                            \n                            \n                                segmentosHorario\n                            \n                            \n                                    Private\n                                segmentosHorarioSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:46\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de base de datos\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Limpia las suscripciones al destruir el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        citas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cita[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:32\n                        \n                    \n\n            \n                \n                    Lista de citas médicas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        citasSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cupos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cupo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:30\n                        \n                    \n\n            \n                \n                    Lista de cupos disponibles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cuposSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:38\n                        \n                    \n\n            \n                \n                    Mensaje de error si existe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        especialidades\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Especialidad[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n            \n                \n                    Lista de especialidades médicas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        especialidadesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:41\n                        \n                    \n\n            \n                \n                    Suscripciones a los observables de la base de datos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        funcionarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Funcionario[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n            \n                \n                    Lista de funcionarios del hospital\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        funcionariosSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:36\n                        \n                    \n\n            \n                \n                    Indica si la aplicación está cargando\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newEspecialidadTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:34\n                        \n                    \n\n            \n                \n                    Título para nueva especialidad\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pacientes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Paciente[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n            \n                \n                    Lista de pacientes registrados\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        pacientesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segmentosHorario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegmentoHorario[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n            \n                \n                    Lista de segmentos horarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        segmentosHorarioSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ToastComponent } from './components/toast/toast.component';\nimport { DatabaseService, Especialidad, Funcionario, Paciente, SegmentoHorario, Cupo, Cita } from './services/database.service';\nimport { Subscription } from 'rxjs';\n\n/**\n * Componente principal de la aplicación\n * @description Maneja la inicialización de la base de datos y la gestión de datos globales\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterModule, ToastComponent],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  /** Lista de especialidades médicas */\n  especialidades: Especialidad[] = [];\n  /** Lista de funcionarios del hospital */\n  funcionarios: Funcionario[] = [];\n  /** Lista de pacientes registrados */\n  pacientes: Paciente[] = [];\n  /** Lista de segmentos horarios */\n  segmentosHorario: SegmentoHorario[] = [];\n  /** Lista de cupos disponibles */\n  cupos: Cupo[] = [];\n  /** Lista de citas médicas */\n  citas: Cita[] = [];\n  /** Título para nueva especialidad */\n  newEspecialidadTitle: string = '';\n  /** Indica si la aplicación está cargando */\n  loading: boolean = true;\n  /** Mensaje de error si existe */\n  error: string | null = null;\n\n  /** Suscripciones a los observables de la base de datos */\n  private especialidadesSubscription: Subscription;\n  private funcionariosSubscription: Subscription;\n  private pacientesSubscription: Subscription;\n  private segmentosHorarioSubscription: Subscription;\n  private cuposSubscription: Subscription;\n  private citasSubscription: Subscription;\n\n  /**\n   * Constructor del componente\n   * @param dbService Servicio de base de datos\n   * @description Inicializa las suscripciones a los observables de la base de datos\n   */\n  constructor(private dbService: DatabaseService) {\n    this.especialidadesSubscription = this.dbService.especialidades$.subscribe(\n      especialidades => this.especialidades = especialidades\n    );\n    this.funcionariosSubscription = this.dbService.funcionarios$.subscribe(\n      funcionarios => this.funcionarios = funcionarios\n    );\n    this.pacientesSubscription = this.dbService.pacientes$.subscribe(\n      pacientes => this.pacientes = pacientes\n    );\n    this.segmentosHorarioSubscription = this.dbService.segmentosHorario$.subscribe(\n      segmentosHorario => this.segmentosHorario = segmentosHorario\n    );\n    this.cuposSubscription = this.dbService.cupos$.subscribe(\n      cupos => this.cupos = cupos\n    );\n    this.citasSubscription = this.dbService.citas$.subscribe(\n      citas => this.citas = citas\n    );\n  }\n\n  /**\n   * Inicializa el componente\n   * @description Inicializa la base de datos y carga los datos iniciales\n   */\n  async ngOnInit() {\n    try {\n      await this.dbService.initializeDatabase();\n      this.dbService.loadEspecialidades();\n      this.loading = false;\n    } catch (err) {\n      this.error = 'Failed to initialize database';\n      this.loading = false;\n      console.error(err);\n    }\n  }\n\n  /**\n   * Limpia las suscripciones al destruir el componente\n   * @description Evita memory leaks cancelando todas las suscripciones\n   */\n  ngOnDestroy() {\n    if (this.especialidadesSubscription) {\n      this.especialidadesSubscription.unsubscribe();\n    }\n    if (this.funcionariosSubscription) {\n      this.funcionariosSubscription.unsubscribe();\n    }\n    if (this.pacientesSubscription) {\n      this.pacientesSubscription.unsubscribe();\n    } \n    if (this.segmentosHorarioSubscription) {\n      this.segmentosHorarioSubscription.unsubscribe();\n    } \n    if (this.cuposSubscription) {\n      this.cuposSubscription.unsubscribe();\n    } \n    if (this.citasSubscription) {\n      this.citasSubscription.unsubscribe();\n    } \n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .sqlite-demo {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;\n}\n\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n\nh1 {\n  color: #2d3748;\n  margin: 0;\n}\n\n.export-btn {\n  background-color: #4299e1;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.export-btn:hover {\n  background-color: #3182ce;\n}\n\n.status-bar {\n  margin-bottom: 1rem;\n}\n\n.loading {\n  color: #4299e1;\n}\n\n.error {\n  color: #e53e3e;\n}\n\n.add-task {\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 2rem;\n}\n\n.add-task input {\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  font-size: 1rem;\n}\n\n.add-task button {\n  background-color: #48bb78;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.add-task button:hover {\n  background-color: #38a169;\n}\n\n.tasks-list {\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.task-item {\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.task-item:last-child {\n  border-bottom: none;\n}\n\n.checkbox-container {\n  position: relative;\n  padding-left: 35px;\n  cursor: pointer;\n  user-select: none;\n}\n\n.checkbox-container input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n}\n\n.checkmark {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 20px;\n  width: 20px;\n  background-color: #edf2f7;\n  border-radius: 4px;\n}\n\n.checkbox-container:hover input ~ .checkmark {\n  background-color: #e2e8f0;\n}\n\n.checkbox-container input:checked ~ .checkmark {\n  background-color: #48bb78;\n}\n\n.checkmark:after {\n  content: \"\";\n  position: absolute;\n  display: none;\n}\n\n.checkbox-container input:checked ~ .checkmark:after {\n  display: block;\n}\n\n.checkbox-container .checkmark:after {\n  left: 7px;\n  top: 3px;\n  width: 5px;\n  height: 10px;\n  border: solid white;\n  border-width: 0 2px 2px 0;\n  transform: rotate(45deg);\n}\n\n.completed {\n  text-decoration: line-through;\n  color: #a0aec0;\n}\n\n.delete-btn {\n  margin-left: auto;\n  background-color: #fc8181;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.delete-btn:hover {\n  background-color: #f56565;\n}\n\n.no-tasks {\n  text-align: center;\n  color: #a0aec0;\n  padding: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cita.html":{"url":"interfaces/Cita.html","title":"interface - Cita","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Cita\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa una cita médica\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cup_id\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            pac_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cup_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cup_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pac_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pac_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cupo.html":{"url":"interfaces/Cupo.html","title":"interface - Cupo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Cupo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa un cupo de atención\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            duracion\n                                        \n                                \n                                \n                                        \n                                            estado\n                                        \n                                \n                                \n                                        \n                                            fecha_hora_fin\n                                        \n                                \n                                \n                                        \n                                            fecha_hora_inicio\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        duracion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duracion:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        estado\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        estado:         Estado\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Estado\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha_hora_fin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha_hora_fin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha_hora_inicio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha_hora_inicio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja el panel principal de la aplicación\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                            RouterOutlet\n                                ProfileModalComponent\n                \n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                navItems\n                            \n                            \n                                showProfileModal\n                            \n                            \n                                showUserMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeProfileModal\n                            \n                            \n                                getUserFullName\n                            \n                            \n                                getUserInitials\n                            \n                            \n                                getUserSpecialty\n                            \n                            \n                                logout\n                            \n                            \n                                openProfileModal\n                            \n                            \n                                toggleUserMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    authorizedNavItems\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, dbService: DatabaseService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeProfileModal\n                        \n                    \n                \n            \n            \n                \ncloseProfileModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserFullName\n                        \n                    \n                \n            \n            \n                \ngetUserFullName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInitials\n                        \n                    \n                \n            \n            \n                \ngetUserInitials()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Obtiene las iniciales del usuario actual\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                String con las iniciales del nombre y apellido\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserSpecialty\n                        \n                    \n                \n            \n            \n                \ngetUserSpecialty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openProfileModal\n                        \n                    \n                \n            \n            \n                \nopenProfileModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleUserMenu\n                        \n                    \n                \n            \n            \n                \ntoggleUserMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Alterna la visibilidad del menú de usuario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : JSON.parse(localStorage.getItem('currentUser') || '{}')\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:37\n                        \n                    \n\n            \n                \n                    Usuario actualmente autenticado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      path: 'inscripcion',\n      icon: '👥',\n      label: 'Inscripción',\n      description: 'Gestiona los pacientes',\n      requiredRole: 'USA_INSCRIPCION'\n    },\n    {\n      path: 'agenda',\n      icon: '📅',\n      label: 'Agenda',\n      description: 'Gestiona los horarios',\n      requiredRole: 'USA_AGENDA'\n    },\n    {\n      path: 'citas',\n      icon: '🕒',\n      label: 'Citas',\n      description: 'Administra las citas médicas',\n      requiredRole: 'USA_CITAS'\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:43\n                        \n                    \n\n            \n                \n                    Lista de elementos de navegación con sus permisos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showProfileModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUserMenu\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:39\n                        \n                    \n\n            \n                \n                    Indica si el menú de usuario está visible\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        authorizedNavItems\n                    \n                \n\n                \n                    \n                        getauthorizedNavItems()\n                    \n                \n                            \n                                \n                                    Defined in src/app/dashboard/dashboard.component.ts:77\n                                \n                            \n                    \n                        \n                                Obtiene los elementos de navegación autorizados para el usuario actual\n\n\n                                \n                                \n                                \n                                    Returns :         NavItem[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterLink, RouterOutlet } from '@angular/router';\nimport { DatabaseService } from '../services/database.service';\nimport { ToastService } from '../services/toast.service';\nimport { ProfileModalComponent } from '../components/profile-modal/profile-modal.component';\n\n/**\n * Interfaz que define la estructura de un elemento de navegación\n */\ninterface NavItem {\n  /** Ruta del componente */\n  path: string;\n  /** Ícono a mostrar */\n  icon: string;\n  /** Etiqueta del elemento */\n  label: string;\n  /** Descripción de la funcionalidad */\n  description: string;\n  /** Rol requerido para acceder */\n  requiredRole: string;\n}\n\n/**\n * Componente que maneja el panel principal de la aplicación\n * @description Muestra la navegación principal y gestiona el acceso basado en roles\n */\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule, RouterLink, RouterOutlet, ProfileModalComponent],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  /** Usuario actualmente autenticado */\n  currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n  /** Indica si el menú de usuario está visible */\n  showUserMenu = false;\n  showProfileModal = false;\n\n  /** Lista de elementos de navegación con sus permisos */\n  navItems: NavItem[] = [\n    {\n      path: 'inscripcion',\n      icon: '👥',\n      label: 'Inscripción',\n      description: 'Gestiona los pacientes',\n      requiredRole: 'USA_INSCRIPCION'\n    },\n    {\n      path: 'agenda',\n      icon: '📅',\n      label: 'Agenda',\n      description: 'Gestiona los horarios',\n      requiredRole: 'USA_AGENDA'\n    },\n    {\n      path: 'citas',\n      icon: '🕒',\n      label: 'Citas',\n      description: 'Administra las citas médicas',\n      requiredRole: 'USA_CITAS'\n    }\n  ];\n\n  constructor(\n    private router: Router,\n    private dbService: DatabaseService,\n    private toastService: ToastService\n  ) {}\n\n  /**\n   * Obtiene los elementos de navegación autorizados para el usuario actual\n   * @returns Lista filtrada de elementos de navegación según los roles del usuario\n   */\n  get authorizedNavItems(): NavItem[] {\n    return this.navItems.filter(item => \n      this.dbService.hasRole(this.currentUser.id, item.requiredRole)\n    );\n  }\n\n  /**\n   * Obtiene las iniciales del usuario actual\n   * @returns String con las iniciales del nombre y apellido\n   */\n  getUserInitials(): string {\n    return `${this.currentUser.nombres?.[0] || ''}${this.currentUser.apellidos?.[0] || ''}`;\n  }\n\n  /**\n   * Alterna la visibilidad del menú de usuario\n   * @description Muestra u oculta el menú desplegable\n   */\n  toggleUserMenu() {\n    this.showUserMenu = !this.showUserMenu;\n  }\n\n  /**\n   * Cierra la sesión del usuario\n   * @description Limpia el localStorage y redirige al inicio\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    \n    const now = new Date();\n    const timeStr = now.toLocaleString('es-CL', { \n      hour: '2-digit', \n      minute: '2-digit',\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n    this.toastService.show(`Cierre de sesión exitoso @ ${timeStr}`, 'success');\n    \n    this.router.navigate(['/']);\n  }\n\n  getUserFullName(): string {\n    return `${this.currentUser.nombres} ${this.currentUser.apellidos}`;\n  }\n\n  getUserSpecialty(): string {\n    return this.currentUser.especialidad;\n  }\n\n  openProfileModal() {\n    this.showProfileModal = true;\n  }\n\n  closeProfileModal() {\n    this.showProfileModal = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Hospital Scheduler\n          HS\n        \n        \n          \n            {{ item.icon }}\n            {{ item.label }}\n          \n        \n      \n      \n        \n          {{ getUserInitials() }}\n        \n        \n          \n            {{ getUserFullName() }}\n            {{ getUserSpecialty() }}\n           -->\n          \n            🔧\n            Modificar Perfil\n          \n          \n            🚪\n            Cerrar Sesión\n          \n        \n      \n    \n  \n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                .dashboard {\n  min-height: 100vh;\n  background-color: #f8fafc;\n}\n\n.main-header {\n  background: white;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n}\n\n.header-content {\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 1rem 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n}\n\n.app-title {\n  font-size: 1.5rem;\n  color: #2c5282;\n  margin: 0;\n  font-weight: 600;\n}\n\n.main-nav {\n  display: flex;\n  gap: 1rem;\n}\n\n.nav-link {\n  text-decoration: none;\n  color: #4a5568;\n  padding: 0.5rem 1rem;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  transition: all 0.2s;\n}\n\n.nav-link:hover {\n  background-color: #edf2f7;\n  color: #2c5282;\n}\n\n.nav-link.active {\n  background-color: #ebf8ff;\n  color: #2c5282;\n  font-weight: 500;\n}\n\n.nav-icon {\n  font-size: 1.2rem;\n}\n\n.header-right {\n  display: flex;\n  align-items: center;\n}\n\n.user-menu {\n  position: relative;\n}\n\n.user-info {\n  text-align: right;\n}\n\n.user-name {\n  display: block;\n  font-weight: 500;\n  color: #2d3748;\n}\n\n.user-role {\n  display: block;\n  font-size: 0.875rem;\n  color: #718096;\n}\n\n.avatar {\n  width: 40px;\n  height: 40px;\n  background-color: #4299e1;\n  color: white;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n}\n\n.logout-btn {\n  width: 100%;\n  padding: 0.75rem 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: none;\n  border: none;\n  border-radius: 4px;\n  color: #e53e3e;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.logout-btn:hover {\n  background-color: #fff5f5;\n}\n\n.main-content {\n  padding: 6rem 2rem 2rem;\n  max-width: 1400px;\n  margin: 0 auto;\n}\n\n/* @media (max-width: 1024px) {\n  .header-content {\n    flex-direction: row;\n    gap: 1rem;\n  }\n\n  .header-left {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 1rem;\n  }\n\n  .main-nav {\n    flex-wrap: wrap;\n  }\n\n  .nav-link {\n    flex: 1;\n    justify-content: center;\n  }\n\n  .user-menu {\n    width: 100%;\n    justify-content: space-between;\n  }\n  .user-circle {\n    margin-left: auto;\n  }\n} */\n\n@media (max-width: 640px) {\n  .header-content {\n    padding: 1rem;\n  }\n\n  .user-info {\n    display: none;\n  }\n}\n\n.app-title .short-title {\n  display: none;\n}\n\n.nav-link {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.nav-icon {\n  font-size: 1.2rem;\n  min-width: 1.5rem;\n  text-align: center;\n}\n\n@media (max-width: 768px) {\n  .header-content {\n    flex-direction: column;\n    padding: 0.5rem;\n  }\n\n  .header-left {\n    flex-direction: row;\n    width: 100%;\n    justify-content: center;\n    gap: 0.5rem;\n  }\n\n  .app-title .full-title {\n    display: none;\n  }\n\n  .app-title .short-title {\n    display: inline;\n  }\n\n  .main-nav {\n    display: flex;\n    justify-content: center;\n    gap: 0.5rem;\n    width: 100%;\n  }\n\n  .nav-label {\n    display: none;\n  }\n\n  .nav-link {\n    padding: 0.5rem;\n    justify-content: center;\n  }\n\n  .user-info {\n    display: none;\n  }\n\n  .logout-btn .label {\n    display: none;\n  }\n\n  .main-content {\n    padding: 4rem 1rem 1rem;\n  }\n\n  .user-menu {\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n  }\n\n  .dropdown-menu {\n    right: 0;\n  }\n}\n\n/* Mobile */\n@media (max-width: 576px) {\n  .nav-link {\n    padding: 0.4rem;\n  }\n\n  .nav-icon {\n    font-size: 1.1rem;\n  }\n\n  .main-nav {\n    justify-content: space-around;\n  }\n\n  .main-content {\n    padding: 3.5rem 0.5rem 0.5rem !important;\n  }\n}\n\n.user-circle {\n  width: 40px;\n  height: 40px;\n  background-color: #4299e1;\n  color: white;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.user-circle:hover {\n  background-color: #3182ce;\n}\n\n.dropdown-menu {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  margin-top: 0.5rem;\n  background: white;\n  border-radius: 6px;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n  padding: 0.5rem;\n  min-width: 150px;\n  z-index: 100;\n}\n\n.user-speciality {\n  font-size: 0.8rem;\n  color: #718096;\n}\n\n.user-info {\n  text-align: center;\n}\n\n.profile-btn {\n  width: 100%;\n  padding: 0.75rem 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: none;\n  border: none;\n  border-radius: 4px;\n  color: #2c5282;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.profile-btn:hover {\n  background-color: #ebf8ff;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Hospital Scheduler          HS                                      {{ item.icon }}            {{ item.label }}                                                {{ getUserInitials() }}                                      {{ getUserFullName() }}            {{ getUserSpecialty() }}           -->                      🔧            Modificar Perfil                                🚪            Cerrar Sesión                                          '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Especialidad.html":{"url":"interfaces/Especialidad.html","title":"interface - Especialidad","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Especialidad\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa una especialidad médica\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Funcionario.html":{"url":"interfaces/Funcionario.html","title":"interface - Funcionario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Funcionario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa un funcionario del hospital\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apellidos\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            esp_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            especialidad\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombres\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            rut\n                                        \n                                \n                                \n                                        \n                                            telefono\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apellidos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apellidos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        esp_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        esp_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        especialidad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        especialidad:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombres:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        telefono\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        telefono:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FuncionarioWithAvailability.html":{"url":"interfaces/FuncionarioWithAvailability.html","title":"interface - FuncionarioWithAvailability","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FuncionarioWithAvailability\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/citas/citas.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que extiende Funcionario con información de disponibilidad\n\n            \n\n            \n                Extends\n            \n            \n                            Funcionario\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hasAvailableSegments\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasAvailableSegments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasAvailableSegments:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indica si el funcionario tiene segmentos disponibles esta semana\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatabaseService, Funcionario, SegmentoHorario, Paciente } from '../services/database.service';\nimport { CalendarOptions, EventInput } from '@fullcalendar/core';\nimport { FullCalendarModule, FullCalendarComponent } from '@fullcalendar/angular';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { ToastService } from '../services/toast.service';\n\n/**\n * Componente que maneja la asignación de citas médicas\n * @description Permite asignar pacientes a segmentos horarios de funcionarios\n */\n@Component({\n  selector: 'app-citas',\n  standalone: true,\n  imports: [CommonModule, FormsModule, FullCalendarModule],\n  templateUrl: './citas.component.html',\n  styleUrls: ['./citas.component.css']\n})\nexport class CitasComponent implements OnInit {\n  /** Referencia al componente de calendario */\n  @ViewChild('calendar') calendarComponent!: FullCalendarComponent;\n  \n  /** Término de búsqueda para funcionarios */\n  searchTerm: string = '';\n  /** RUT del paciente a buscar */\n  searchRut: string = '';\n  /** Lista de funcionarios con información de disponibilidad */\n  funcionarios: FuncionarioWithAvailability[] = [];\n  /** Lista filtrada de funcionarios */\n  filteredFuncionarios: FuncionarioWithAvailability[] = [];\n  /** Funcionario seleccionado actualmente */\n  selectedFuncionario: Funcionario | null = null;\n  /** Segmento horario seleccionado */\n  selectedSegmento: SegmentoHorario | null = null;\n  /** Paciente seleccionado */\n  selectedPaciente: Paciente | null = null;\n  /** Indica si se debe mostrar el modal de asignación */\n  showAssignModal = false;\n  /** Indica si hay un error que mostrar */\n  showError = false;\n  /** Indica si hay un mensaje de éxito que mostrar */\n  showSuccess = false;\n  /** Mensaje de error */\n  errorMessage = '';\n  /** Mensaje de éxito */\n  successMessage = '';\n  /** Indica si la pantalla es pequeña */\n  isSmallScreen: boolean = false;\n  /** Lista de pacientes */\n  pacientes: Paciente[] = [];\n\n  /** Configuración del calendario */\n  calendarOptions: CalendarOptions = {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    initialView: window.innerWidth  {\n        this.funcionarios = funcionarios.map(f => ({\n          ...f,\n          hasAvailableSegments: this.checkFuncionarioAvailability(f.id)\n        }));\n        this.filteredFuncionarios = this.funcionarios;\n      }\n    );\n\n    // Subscribe to pacientes\n    this.dbService.pacientes$.subscribe(\n      pacientes => this.pacientes = pacientes\n    );\n\n    this.checkScreenSize();\n  }\n\n  /**\n   * Verifica el tamaño de la pantalla\n   * @description Actualiza isSmallScreen y la vista del calendario\n   * @private\n   */\n  private checkScreenSize() {\n    const wasSmallScreen = this.isSmallScreen;\n    this.isSmallScreen = window.innerWidth  {\n      const segmentoDate = new Date(segmento.fecha_hora_inicio);\n      return segmento.free && \n             segmentoDate >= startOfWeek && \n             segmentoDate  \n      funcionario.nombres.toLowerCase().includes(searchTermLower) ||\n      funcionario.apellidos.toLowerCase().includes(searchTermLower)\n    );\n  }\n\n  /**\n   * Selecciona un funcionario y carga sus segmentos\n   * @param funcionario Funcionario seleccionado\n   */\n  selectFuncionario(funcionario: Funcionario) {\n    this.selectedFuncionario = funcionario;\n    this.loadSegmentos(funcionario.id);\n    \n    setTimeout(() => {\n      this.updateCalendarView();\n    }, 0);\n  }\n\n  /**\n   * Carga los segmentos de un funcionario en el calendario\n   * @param funcionarioId ID del funcionario\n   */\n  loadSegmentos(funcionarioId: number) {\n    const segmentos = this.dbService.getSegmentosHorarioByFuncionarioId(funcionarioId);\n    const events: EventInput[] = segmentos.map(segmento => ({\n      id: segmento.id.toString(),\n      title: segmento.nombre,\n      start: segmento.fecha_hora_inicio,\n      end: segmento.fecha_hora_fin,\n      backgroundColor: segmento.free ? '#48bb78' : '#fc8181',\n      borderColor: segmento.free ? '#38a169' : '#f56565',\n      extendedProps: {\n        segmento: segmento\n      }\n    }));\n\n    this.calendarOptions.events = events;\n  }\n\n  /**\n   * Maneja el clic en un evento del calendario\n   * @param clickInfo Información del evento clickeado\n   * @description Abre el modal de asignación si el segmento está disponible\n   */\n  handleEventClick(clickInfo: any) {\n    const segmento = clickInfo.event.extendedProps.segmento as SegmentoHorario;\n    if (segmento.free) {\n      this.selectedSegmento = segmento;\n      this.showAssignModal = true;\n    } else {\n      alert('Este horario ya está ocupado');\n    }\n  }\n\n  /**\n   * Formatea el RUT mientras el usuario escribe\n   * @param event Evento de input\n   * @description Agrega puntos y guión al RUT\n   */\n  onRutInput(event: any) {\n    const input = event.target;\n    let rut = input.value.replace(/\\./g, '').replace(/-/g, '');\n    rut = rut.replace(/[^0-9kK]/g, '');\n    \n    if (rut.length > 0) {\n      let result = rut;\n      if (rut.length > 1) {\n        result = rut.slice(0, -1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') + '-' + rut.slice(-1);\n      }\n      input.value = result;\n    }\n  }\n\n  /**\n   * Busca un paciente por RUT\n   * @description Actualiza selectedPaciente y muestra mensajes de éxito/error\n   */\n  searchPaciente() {\n    if (!this.searchRut) {\n      this.showError = true;\n      this.errorMessage = 'Ingrese un RUT para buscar';\n      return;\n    }\n\n    const paciente = this.dbService.getPacienteByRut(this.searchRut);\n    if (paciente) {\n      this.selectedPaciente = paciente;\n      this.showSuccess = true;\n      this.successMessage = 'Paciente encontrado';\n    } else {\n      this.showError = true;\n      this.errorMessage = 'Paciente no encontrado';\n      this.selectedPaciente = null;\n    }\n  }\n\n  /**\n   * Asigna un paciente a un segmento horario\n   * @description Marca el segmento como ocupado y muestra mensaje de éxito\n   */\n  assignPaciente() {\n    if (!this.selectedSegmento || !this.selectedPaciente) return;\n\n    try {\n      \n      this.dbService.assignSegmentoToPaciente(this.selectedPaciente.id, this.selectedSegmento.id);\n      \n      this.toastService.show('Cita creada exitosamente', 'success');\n      \n      this.selectedSegmento = null;\n      this.selectedPaciente = null;\n      this.searchRut = '';\n      \n      if (this.selectedFuncionario) {\n        this.loadSegmentos(this.selectedFuncionario.id);\n      }\n      \n      this.closeAssignModal();\n    } catch (error) {\n      this.showError = true;\n      this.errorMessage = 'Error al asignar la cita';\n      console.error(error);\n    }\n    this.funcionarios = this.funcionarios.map(f => ({\n      ...f,\n      hasAvailableSegments: this.checkFuncionarioAvailability(f.id)\n    }));\n  }\n\n  /**\n   * Cierra el modal de asignación\n   * @description Limpia las selecciones actuales\n   */\n  closeAssignModal() {\n    this.showAssignModal = false;\n    this.selectedSegmento = null;\n    this.selectedPaciente = null;\n    this.searchRut = '';\n  }\n\n  /**\n   * Alterna la visibilidad de la sección de búsqueda\n   * @description Limpia la selección actual si está colapsada\n   */\n  toggleSearch() {\n    if (this.selectedFuncionario) {\n      this.selectedFuncionario = null;\n      this.searchTerm = '';\n      this.filteredFuncionarios = this.funcionarios;\n      this.calendarOptions.events = [];\n    }\n  }\n}\n\n/**\n * Interfaz que extiende Funcionario con información de disponibilidad\n */\ninterface FuncionarioWithAvailability extends Funcionario {\n  /** Indica si el funcionario tiene segmentos disponibles esta semana */\n  hasAvailableSegments?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FuncionariosComponent.html":{"url":"components/FuncionariosComponent.html","title":"component - FuncionariosComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FuncionariosComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/funcionarios/funcionarios.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja la gestión de funcionarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-funcionarios\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            FormsModule\n                \n            \n\n\n            \n                styles\n                \n    .funcionarios-container {\n      padding: 2rem;\n      max-width: 1200px;\n      margin: 0 auto;\n      display: flex;\n      flex-direction: column;\n      gap: 2rem;\n    }\n\n    .search-section, .form-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .search-box {\n      margin-bottom: 1.5rem;\n    }\n\n    .search-input {\n      width: 100%;\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .funcionarios-list {\n      display: grid;\n      gap: 1rem;\n    }\n\n    .funcionario-card {\n      padding: 1rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .funcionario-card:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n    }\n\n    .funcionario-card.selected {\n      border-color: #4299e1;\n      background-color: #ebf8ff;\n    }\n\n    .form-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      font-weight: 500;\n      color: #4a5568;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .form-group input.error,\n    .form-group select.error {\n      border-color: #fc8181;\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .form-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      margin-top: 2rem;\n    }\n\n    .submit-btn, .cancel-btn, .delete-btn {\n      padding: 0.75rem 1.5rem;\n      border-radius: 6px;\n      font-weight: 500;\n      cursor: pointer;\n      border: none;\n    }\n\n    .submit-btn {\n      background-color: #4299e1;\n      color: white;\n    }\n\n    .cancel-btn {\n      background-color: #e2e8f0;\n      color: #4a5568;\n    }\n\n    .delete-btn {\n      background-color: #fc8181;\n      color: white;\n    }\n\n    .submit-btn:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  \n            \n\n            \n                template\n                \n  \n    Buscar Funcionario\n    \n      \n    \n\n     0\">\n      \n        \n          {{ funcionario.nombres }} {{ funcionario.apellidos }}\n          {{ funcionario.especialidad }}\n          {{ funcionario.email }}\n          {{ funcionario.telefono }}\n        \n      \n    \n\n    \n      No se encontraron funcionarios\n    \n  \n\n  \n    \n      {{ selectedFuncionario ? 'Editar' : 'Nuevo' }} Funcionario\n      \n        Eliminar\n      \n    \n\n    \n      \n        \n          Nombres\n          \n          \n            {{ getErrorMessage('nombres') }}\n          \n        \n\n        \n          Apellidos\n          \n          \n            {{ getErrorMessage('apellidos') }}\n          \n        \n      \n\n      \n        \n          Correo Electrónico\n          \n          \n            {{ getErrorMessage('email') }}\n          \n        \n\n        \n          Teléfono\n          \n          \n            {{ getErrorMessage('telefono') }}\n          \n        \n      \n\n      \n        \n          Especialidad\n          \n            Seleccione una especialidad\n            \n              {{ esp.nombre }}\n            \n          \n          \n            {{ getErrorMessage('esp_id') }}\n          \n        \n\n        \n          Contraseña\n          \n          \n            {{ getErrorMessage('password') }}\n          \n        \n      \n\n      \n        {{ errorMessage }}\n        {{ successMessage }}\n      \n\n      \n        \n          Cancelar\n        \n        \n          {{ isLoading ? 'Guardando...' : (selectedFuncionario ? 'Actualizar' : 'Guardar') }}\n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                especialidades\n                            \n                            \n                                filteredFuncionarios\n                            \n                            \n                                funcionarioForm\n                            \n                            \n                                funcionarios\n                            \n                            \n                                isLoading\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedFuncionario\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteFuncionario\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                getEspecialidadNombre\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                            \n                                searchFuncionarios\n                            \n                            \n                                selectFuncionario\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dbService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/funcionarios/funcionarios.component.ts:332\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFuncionario\n                        \n                    \n                \n            \n            \n                \ndeleteFuncionario()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:494\n                        \n                    \n\n\n            \n                \n                        Elimina un funcionario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:436\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje de error para un campo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Mensaje de error correspondiente al tipo de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEspecialidadNombre\n                        \n                    \n                \n            \n            \n                \ngetEspecialidadNombre(esp_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:395\n                        \n                    \n\n\n            \n                \n                        Obtiene el nombre de una especialidad por su ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                esp_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la especialidad\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Nombre de la especialidad\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:426\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo del formulario es inválido\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo a verificar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el campo es inválido y ha sido tocado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:368\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:454\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:513\n                        \n                    \n\n\n            \n                \n                        Reinicia el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchFuncionarios\n                        \n                    \n                \n            \n            \n                \nsearchFuncionarios()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:377\n                        \n                    \n\n\n            \n                \n                        Filtra funcionarios según término de búsqueda\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFuncionario\n                        \n                    \n                \n            \n            \n                \nselectFuncionario(funcionario: Funcionario)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:405\n                        \n                    \n\n\n            \n                \n                        Selecciona un funcionario para edición\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                funcionario\n                                            \n                                                            Funcionario\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcionario a editar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:328\n                        \n                    \n\n            \n                \n                    Mensaje de error\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        especialidades\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:316\n                        \n                    \n\n            \n                \n                    Lista de especialidades disponibles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredFuncionarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Funcionario[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:318\n                        \n                    \n\n            \n                \n                    Lista filtrada de funcionarios según búsqueda\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        funcionarioForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:312\n                        \n                    \n\n            \n                \n                    Formulario reactivo para la gestión de funcionarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        funcionarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Funcionario[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:314\n                        \n                    \n\n            \n                \n                    Lista completa de funcionarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:332\n                        \n                    \n\n            \n                \n                    Indica si hay una operación en curso\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:322\n                        \n                    \n\n            \n                \n                    Término de búsqueda\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFuncionario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Funcionario | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:320\n                        \n                    \n\n            \n                \n                    Funcionario seleccionado para edición\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:324\n                        \n                    \n\n            \n                \n                    Indica si hay un error que mostrar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:326\n                        \n                    \n\n            \n                \n                    Indica si hay un mensaje de éxito que mostrar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:330\n                        \n                    \n\n            \n                \n                    Mensaje de éxito\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatabaseService, Funcionario } from '../services/database.service';\n\n/**\n * Componente que maneja la gestión de funcionarios\n * @description Permite buscar, crear, editar y eliminar funcionarios del sistema\n */\n@Component({\n  selector: 'app-funcionarios',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FormsModule],\n  template: `\n    \n      \n        Buscar Funcionario\n        \n          \n        \n\n         0\">\n          \n            \n              {{ funcionario.nombres }} {{ funcionario.apellidos }}\n              {{ funcionario.especialidad }}\n              {{ funcionario.email }}\n              {{ funcionario.telefono }}\n            \n          \n        \n\n        \n          No se encontraron funcionarios\n        \n      \n\n      \n        \n          {{ selectedFuncionario ? 'Editar' : 'Nuevo' }} Funcionario\n          \n            Eliminar\n          \n        \n\n        \n          \n            \n              Nombres\n              \n              \n                {{ getErrorMessage('nombres') }}\n              \n            \n\n            \n              Apellidos\n              \n              \n                {{ getErrorMessage('apellidos') }}\n              \n            \n          \n\n          \n            \n              Correo Electrónico\n              \n              \n                {{ getErrorMessage('email') }}\n              \n            \n\n            \n              Teléfono\n              \n              \n                {{ getErrorMessage('telefono') }}\n              \n            \n          \n\n          \n            \n              Especialidad\n              \n                Seleccione una especialidad\n                \n                  {{ esp.nombre }}\n                \n              \n              \n                {{ getErrorMessage('esp_id') }}\n              \n            \n\n            \n              Contraseña\n              \n              \n                {{ getErrorMessage('password') }}\n              \n            \n          \n\n          \n            {{ errorMessage }}\n            {{ successMessage }}\n          \n\n          \n            \n              Cancelar\n            \n            \n              {{ isLoading ? 'Guardando...' : (selectedFuncionario ? 'Actualizar' : 'Guardar') }}\n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .funcionarios-container {\n      padding: 2rem;\n      max-width: 1200px;\n      margin: 0 auto;\n      display: flex;\n      flex-direction: column;\n      gap: 2rem;\n    }\n\n    .search-section, .form-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .search-box {\n      margin-bottom: 1.5rem;\n    }\n\n    .search-input {\n      width: 100%;\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .funcionarios-list {\n      display: grid;\n      gap: 1rem;\n    }\n\n    .funcionario-card {\n      padding: 1rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .funcionario-card:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n    }\n\n    .funcionario-card.selected {\n      border-color: #4299e1;\n      background-color: #ebf8ff;\n    }\n\n    .form-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      font-weight: 500;\n      color: #4a5568;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .form-group input.error,\n    .form-group select.error {\n      border-color: #fc8181;\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .form-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      margin-top: 2rem;\n    }\n\n    .submit-btn, .cancel-btn, .delete-btn {\n      padding: 0.75rem 1.5rem;\n      border-radius: 6px;\n      font-weight: 500;\n      cursor: pointer;\n      border: none;\n    }\n\n    .submit-btn {\n      background-color: #4299e1;\n      color: white;\n    }\n\n    .cancel-btn {\n      background-color: #e2e8f0;\n      color: #4a5568;\n    }\n\n    .delete-btn {\n      background-color: #fc8181;\n      color: white;\n    }\n\n    .submit-btn:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  `]\n})\nexport class FuncionariosComponent implements OnInit {\n  /** Formulario reactivo para la gestión de funcionarios */\n  funcionarioForm: FormGroup;\n  /** Lista completa de funcionarios */\n  funcionarios: Funcionario[] = [];\n  /** Lista de especialidades disponibles */\n  especialidades: any[] = [];\n  /** Lista filtrada de funcionarios según búsqueda */\n  filteredFuncionarios: Funcionario[] = [];\n  /** Funcionario seleccionado para edición */\n  selectedFuncionario: Funcionario | null = null;\n  /** Término de búsqueda */\n  searchTerm: string = '';\n  /** Indica si hay un error que mostrar */\n  showError = false;\n  /** Indica si hay un mensaje de éxito que mostrar */\n  showSuccess = false;\n  /** Mensaje de error */\n  errorMessage = '';\n  /** Mensaje de éxito */\n  successMessage = '';\n  /** Indica si hay una operación en curso */\n  isLoading = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private dbService: DatabaseService\n  ) {\n    this.funcionarioForm = this.fb.group({\n      nombres: ['', [Validators.required, Validators.minLength(2)]],\n      apellidos: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.required, Validators.email]],\n      telefono: ['', [Validators.required, Validators.pattern(/^[0-9\\-\\+]{9,}$/)]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      esp_id: ['', Validators.required]\n    });\n\n    this.dbService.funcionarios$.subscribe(\n      funcionarios => {\n        this.funcionarios = funcionarios.map(funcionario => ({\n          ...funcionario,\n          especialidad: this.getEspecialidadNombre(funcionario.esp_id)\n        }));\n        this.searchFuncionarios();\n      }\n    );\n\n    this.dbService.especialidades$.subscribe(\n      especialidades => {\n        this.especialidades = especialidades;\n      }\n    );\n  }\n\n  /**\n   * Inicializa el componente\n   * @description Carga los funcionarios y especialidades\n   */\n  ngOnInit() {\n    this.dbService.loadFuncionarios();\n    this.dbService.loadEspecialidades();\n  }\n\n  /**\n   * Filtra funcionarios según término de búsqueda\n   * @description Actualiza filteredFuncionarios basado en searchTerm\n   */\n  searchFuncionarios() {\n    if (!this.searchTerm.trim()) {\n      this.filteredFuncionarios = [];\n      return;\n    }\n\n    const searchTermLower = this.searchTerm.toLowerCase();\n    this.filteredFuncionarios = this.funcionarios.filter(funcionario => \n      funcionario.nombres.toLowerCase().includes(searchTermLower) ||\n      funcionario.apellidos.toLowerCase().includes(searchTermLower)\n    );\n  }\n\n  /**\n   * Obtiene el nombre de una especialidad por su ID\n   * @param esp_id ID de la especialidad\n   * @returns Nombre de la especialidad\n   */\n  getEspecialidadNombre(esp_id: number): string {\n    const especialidad = this.especialidades.find(esp => esp.id === esp_id);\n    return especialidad ? especialidad.nombre : '';\n  }\n\n  /**\n   * Selecciona un funcionario para edición\n   * @param funcionario Funcionario a editar\n   * @description Carga los datos del funcionario en el formulario\n   */\n  selectFuncionario(funcionario: Funcionario) {\n    this.selectedFuncionario = funcionario;\n    \n    this.funcionarioForm.setValue({\n      nombres: funcionario.nombres || '',\n      apellidos: funcionario.apellidos || '',\n      email: funcionario.email || '',\n      telefono: funcionario.telefono || '',\n      esp_id: funcionario.esp_id || '',\n      password: ''\n    });\n\n    this.funcionarioForm.markAsPristine();\n    this.funcionarioForm.markAsUntouched();\n  }\n\n  /**\n   * Verifica si un campo del formulario es inválido\n   * @param fieldName Nombre del campo a verificar\n   * @returns boolean indicando si el campo es inválido y ha sido tocado\n   */\n  isFieldInvalid(fieldName: string): boolean {\n    const field = this.funcionarioForm.get(fieldName);\n    return field ? (field.invalid && (field.dirty || field.touched)) : false;\n  }\n\n  /**\n   * Obtiene el mensaje de error para un campo\n   * @param fieldName Nombre del campo\n   * @returns Mensaje de error correspondiente al tipo de error\n   */\n  getErrorMessage(fieldName: string): string {\n    const control = this.funcionarioForm.get(fieldName);\n    if (control?.errors) {\n      if (control.errors['required']) return 'Este campo es requerido';\n      if (control.errors['minlength']) return `Mínimo ${control.errors['minlength'].requiredLength} caracteres`;\n      if (control.errors['email']) return 'Email inválido';\n      if (control.errors['pattern']) {\n        if (fieldName === 'telefono') return 'Formato de teléfono inválido';\n        return 'Formato inválido';\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Maneja el envío del formulario\n   * @description Crea o actualiza un funcionario según el modo actual\n   */\n  onSubmit() {\n    if (this.funcionarioForm.invalid) {\n      Object.keys(this.funcionarioForm.controls).forEach(key => {\n        const control = this.funcionarioForm.get(key);\n        if (control?.invalid) {\n          control.markAsTouched();\n        }\n      });\n      return;\n    }\n\n    this.isLoading = true;\n    this.showError = false;\n    this.showSuccess = false;\n\n    try {\n      const formValue = this.funcionarioForm.value;\n      const funcionario = {\n        ...formValue,\n        id: this.selectedFuncionario?.id || 0,\n        esp_id: parseInt(formValue.esp_id)\n      } as Funcionario;\n\n      this.dbService.addFuncionario(funcionario);\n      this.showSuccess = true;\n      this.successMessage = `Funcionario ${this.selectedFuncionario ? 'actualizado' : 'guardado'} exitosamente`;\n      this.resetForm();\n    } catch (error) {\n      this.showError = true;\n      this.errorMessage = 'Error al guardar funcionario';\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * Elimina un funcionario\n   * @description Solicita confirmación antes de eliminar\n   */\n  deleteFuncionario() {\n    if (this.selectedFuncionario && confirm('¿Está seguro de eliminar este funcionario?')) {\n      try {\n        this.dbService.deleteFuncionario(this.selectedFuncionario.id);\n        this.showSuccess = true;\n        this.successMessage = 'Funcionario eliminado exitosamente';\n        this.resetForm();\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = 'Error al eliminar funcionario';\n        console.error(error);\n      }\n    }\n  }\n\n  /**\n   * Reinicia el formulario\n   * @description Limpia todos los campos y mensajes\n   */\n  resetForm() {\n    this.funcionarioForm.reset();\n    this.selectedFuncionario = null;\n    this.showError = false;\n    this.showSuccess = false;\n    this.errorMessage = '';\n    this.successMessage = '';\n  }\n}\n\n    \n\n\n    \n            \n    .funcionarios-container {\n      padding: 2rem;\n      max-width: 1200px;\n      margin: 0 auto;\n      display: flex;\n      flex-direction: column;\n      gap: 2rem;\n    }\n\n    .search-section, .form-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .search-box {\n      margin-bottom: 1.5rem;\n    }\n\n    .search-input {\n      width: 100%;\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .funcionarios-list {\n      display: grid;\n      gap: 1rem;\n    }\n\n    .funcionario-card {\n      padding: 1rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .funcionario-card:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n    }\n\n    .funcionario-card.selected {\n      border-color: #4299e1;\n      background-color: #ebf8ff;\n    }\n\n    .form-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      font-weight: 500;\n      color: #4a5568;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .form-group input.error,\n    .form-group select.error {\n      border-color: #fc8181;\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .form-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      margin-top: 2rem;\n    }\n\n    .submit-btn, .cancel-btn, .delete-btn {\n      padding: 0.75rem 1.5rem;\n      border-radius: 6px;\n      font-weight: 500;\n      cursor: pointer;\n      border: none;\n    }\n\n    .submit-btn {\n      background-color: #4299e1;\n      color: white;\n    }\n\n    .cancel-btn {\n      background-color: #e2e8f0;\n      color: #4a5568;\n    }\n\n    .delete-btn {\n      background-color: #fc8181;\n      color: white;\n    }\n\n    .submit-btn:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Buscar Funcionario                   0\">                        {{ funcionario.nombres }} {{ funcionario.apellidos }}          {{ funcionario.especialidad }}          {{ funcionario.email }}          {{ funcionario.telefono }}                            No se encontraron funcionarios                  {{ selectedFuncionario ? \\'Editar\\' : \\'Nuevo\\' }} Funcionario              Eliminar                                      Nombres                                {{ getErrorMessage(\\'nombres\\') }}                                    Apellidos                                {{ getErrorMessage(\\'apellidos\\') }}                                                Correo Electrónico                                {{ getErrorMessage(\\'email\\') }}                                    Teléfono                                {{ getErrorMessage(\\'telefono\\') }}                                                Especialidad                      Seleccione una especialidad                          {{ esp.nombre }}                                            {{ getErrorMessage(\\'esp_id\\') }}                                    Contraseña                                {{ getErrorMessage(\\'password\\') }}                                      {{ errorMessage }}        {{ successMessage }}                              Cancelar                          {{ isLoading ? \\'Guardando...\\' : (selectedFuncionario ? \\'Actualizar\\' : \\'Guardar\\') }}                    '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FuncionariosComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InscripcionComponent.html":{"url":"components/InscripcionComponent.html","title":"component - InscripcionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InscripcionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inscripcion/inscripcion.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja la inscripción de pacientes\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            provideNgxMask()\n                \n            \n\n\n            \n                selector\n                app-inscripcion\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            FormsModule\n                            NgxMaskDirective\n                \n            \n\n            \n                styleUrls\n                ./inscripcion.component.css\n            \n\n\n\n            \n                templateUrl\n                ./inscripcion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                message\n                            \n                            \n                                pacienteForm\n                            \n                            \n                                searchRut\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailDomainValidator\n                            \n                            \n                                formatRut\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onRutInput\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                            \n                                rutValidator\n                            \n                            \n                                searchPaciente\n                            \n                            \n                                validateRut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dbService: DatabaseService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inscripcion/inscripcion.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de formulario reactivo\n\n                                                        \n                                                \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de base de datos\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de notificaciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emailDomainValidator\n                        \n                    \n                \n            \n            \n                \nemailDomainValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:259\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para el dominio del email\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                ValidatorFn para validar que el email tenga un dominio válido\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatRut\n                        \n                    \n                \n            \n            \n                \nformatRut(rut: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Formatea el RUT mientras el usuario escribe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rut\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    RUT a formatear\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                RUT formateado con puntos y guión\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje de error para un campo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Mensaje de error correspondiente al tipo de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo del formulario es inválido\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo a verificar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el campo es inválido y ha sido tocado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRutInput\n                        \n                    \n                \n            \n            \n                \nonRutInput(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:163\n                        \n                    \n\n\n            \n                \n                        Formatea el RUT mientras el usuario escribe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de entrada\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:209\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:247\n                        \n                    \n\n\n            \n                \n                        Reinicia el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rutValidator\n                        \n                    \n                \n            \n            \n                \nrutValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     (control: AbstractControl) => any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchPaciente\n                        \n                    \n                \n            \n            \n                \nsearchPaciente()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:182\n                        \n                    \n\n\n            \n                \n                        Busca un paciente por RUT\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateRut\n                        \n                    \n                \n            \n            \n                \nvalidateRut(rut: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Valida el RUT ingresado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rut\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    RUT a validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el RUT es válido\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:31\n                        \n                    \n\n            \n                \n                    Indica si hay una operación en curso\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:29\n                        \n                    \n\n            \n                \n                    Mensaje para mostrar al usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pacienteForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchRut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:23\n                        \n                    \n\n            \n                \n                    RUT para búsqueda de pacientes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:25\n                        \n                    \n\n            \n                \n                    Indica si hay un error que mostrar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:27\n                        \n                    \n\n            \n                \n                    Indica si hay un mensaje de éxito que mostrar\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule, FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { DatabaseService, Paciente } from '../services/database.service';\nimport { NgxMaskDirective, provideNgxMask } from 'ngx-mask';\nimport { ToastService } from '../services/toast.service';\n\n/**\n * Componente que maneja la inscripción de pacientes\n * @description Permite registrar nuevos pacientes y buscar pacientes existentes\n */\n@Component({\n  selector: 'app-inscripcion',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, NgxMaskDirective],\n  providers: [provideNgxMask()],\n  templateUrl: './inscripcion.component.html',\n  styleUrls: ['./inscripcion.component.css']\n})\nexport class InscripcionComponent implements OnInit {\n  pacienteForm: FormGroup;\n  /** RUT para búsqueda de pacientes */\n  searchRut: string = '';\n  /** Indica si hay un error que mostrar */\n  showError = false;\n  /** Indica si hay un mensaje de éxito que mostrar */\n  showSuccess = false;\n  /** Mensaje para mostrar al usuario */\n  message = '';\n  /** Indica si hay una operación en curso */\n  isLoading = false;\n\n  /**\n   * Constructor del componente\n   * @param fb Servicio de formulario reactivo\n   * @param dbService Servicio de base de datos\n   * @param toastService Servicio de notificaciones\n   */\n  constructor(\n    private fb: FormBuilder,\n    private dbService: DatabaseService,\n    private toastService: ToastService\n  ) {\n    this.pacienteForm = this.fb.group({\n      nombres: ['', [Validators.required, Validators.minLength(2)]],\n      apellidos: ['', [Validators.required, Validators.minLength(2)]],\n      rut: ['', [Validators.required, this.rutValidator()]],\n      telefono: ['(56) 9 ', [Validators.required, Validators.minLength(12)]],\n      email: ['', [Validators.required, Validators.email, this.emailDomainValidator()]],\n      fecha_nacimiento: ['', Validators.required],\n      genero: ['', Validators.required],\n      direccion: ['', Validators.required]\n    });\n  }\n\n  rutValidator() {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const rut = control.value;\n      if (!rut) return null;\n      \n      // Remove formatting before validation\n      const cleanRut = rut.replace(/\\./g, '').replace(/-/g, '');\n      \n      if (!/^[0-9]{7,8}[0-9Kk]$/.test(cleanRut)) {\n        return { invalidRut: true };\n      }\n\n      return this.validateRut(cleanRut) ? null : { invalidRut: true };\n    };\n  }\n\n  /**\n   * Inicializa el componente\n   * @description Carga los datos necesarios del servicio\n   */\n  ngOnInit() {\n    this.dbService.loadPacientes();\n  }\n\n  /**\n   * Verifica si un campo del formulario es inválido\n   * @param fieldName Nombre del campo a verificar\n   * @returns boolean indicando si el campo es inválido y ha sido tocado\n   */\n  isFieldInvalid(fieldName: string): boolean {\n    const field = this.pacienteForm.get(fieldName);\n    return field ? (field.invalid && (field.dirty || field.touched)) : false;\n  }\n\n  /**\n   * Obtiene el mensaje de error para un campo\n   * @param fieldName Nombre del campo\n   * @returns Mensaje de error correspondiente al tipo de error\n   */\n  getErrorMessage(fieldName: string): string {\n    const control = this.pacienteForm.get(fieldName);\n    if (control?.errors) {\n      if (control.errors['required']) return 'Este campo es requerido';\n      if (control.errors['minlength']) return `Mínimo ${control.errors['minlength'].requiredLength} caracteres`;\n      if (control.errors['email']) return 'Email inválido';\n      if (control.errors['pattern']) {\n        switch(fieldName) {\n          case 'rut': return 'Formato de RUT inválido (ej: 12345678-9)';\n          case 'telefono': return 'Formato de teléfono inválido';\n          default: return 'Formato inválido';\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Formatea el RUT mientras el usuario escribe\n   * @param rut RUT a formatear\n   * @returns RUT formateado con puntos y guión\n   */\n  formatRut(rut: string): string {\n    if (!rut) return '';\n    rut = rut.replace(/\\./g, '').replace(/-/g, '');\n    if (rut.length > 1) {\n      return rut.slice(0, -1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') + '-' + rut.slice(-1);\n    }\n    return rut;\n  }\n\n  /**\n   * Valida el RUT ingresado\n   * @param rut RUT a validar\n   * @returns boolean indicando si el RUT es válido\n   */\n  validateRut(rut: string): boolean {\n    // Remove any dots and dash before validation\n    rut = rut.replace(/\\./g, '').replace(/-/g, '');\n    \n    if (!/^[0-9]{7,8}[0-9Kk]$/.test(rut)) return false;\n\n    const verificationDigit = rut.slice(-1).toUpperCase();\n    const numbers = rut.slice(0, -1);\n    \n    let sum = 0;\n    let multiplier = 2;\n    \n    for (let i = numbers.length - 1; i >= 0; i--) {\n      sum += parseInt(numbers[i]) * multiplier;\n      multiplier = multiplier === 7 ? 2 : multiplier + 1;\n    }\n    \n    const expectedDigit = 11 - (sum % 11);\n    let expectedVerificationDigit: string;\n    \n    if (expectedDigit === 11) expectedVerificationDigit = '0';\n    else if (expectedDigit === 10) expectedVerificationDigit = 'K';\n    else expectedVerificationDigit = expectedDigit.toString();\n    \n    return verificationDigit === expectedVerificationDigit;\n  }\n\n  /**\n   * Formatea el RUT mientras el usuario escribe\n   * @param event Evento de entrada\n   * @description Formatea el RUT ingresado para que cumpla con el formato estándar\n   */\n  onRutInput(event: any) {\n    const input = event.target;\n    let rut = input.value.replace(/\\./g, '').replace(/-/g, '');\n    rut = rut.replace(/[^0-9kK]/g, '');\n    \n    if (rut.length > 0) {\n      let result = rut;\n      if (rut.length > 1) {\n        result = rut.slice(0, -1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') + '-' + rut.slice(-1);\n      }\n      input.value = result;\n      this.searchRut = result;\n    }\n  }\n\n  /**\n   * Busca un paciente por RUT\n   * @description Actualiza el formulario con los datos del paciente si se encuentra\n   */\n  searchPaciente() {\n    const cleanRut = this.searchRut.replace(/\\./g, '').replace(/-/g, '');\n    \n    if (!this.validateRut(cleanRut)) {\n      this.showError = true;\n      this.message = 'RUT inválido';\n      return;\n    }\n\n    const paciente = this.dbService.getPacienteByRut(cleanRut);\n    if (paciente) {\n      this.pacienteForm.patchValue({\n        ...paciente,\n        rut: this.formatRut(paciente.rut)\n      });\n      this.showSuccess = true;\n      this.message = 'Paciente encontrado';\n    } else {\n      this.showError = true;\n      this.message = 'Paciente no encontrado';\n    }\n  }\n\n  /**\n   * Maneja el envío del formulario\n   * @description Crea o actualiza un paciente según los datos del formulario\n   */\n  onSubmit() {\n    if (this.pacienteForm.invalid) {\n      Object.keys(this.pacienteForm.controls).forEach(key => {\n        const control = this.pacienteForm.get(key);\n        if (control?.invalid) {\n          control.markAsTouched();\n        }\n      });\n      return;\n    }\n\n    this.isLoading = true;\n    this.showError = false;\n    this.showSuccess = false;\n\n    try {\n      const formValue = this.pacienteForm.value;\n      const paciente = {\n        ...formValue,\n        rut: formValue.rut.replace(/\\./g, '').replace(/-/g, '') // Remove formatting before saving\n      };\n\n      this.dbService.addPaciente(paciente);\n      this.toastService.show('Paciente creado exitosamente', 'success');\n      this.resetForm();\n    } catch (error) {\n      this.showError = true;\n      this.message = 'Error al registrar paciente';\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * Reinicia el formulario\n   * @description Limpia todos los campos y mensajes\n   */\n  resetForm() {\n    this.pacienteForm.reset();\n    this.showError = false;\n    this.showSuccess = false;\n    this.message = '';\n    this.searchRut = '';\n  }\n\n  /**\n   * Validador personalizado para el dominio del email\n   * @returns ValidatorFn para validar que el email tenga un dominio válido\n   */\n  emailDomainValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const email = control.value;\n      if (!email) return null;\n      \n      if (!email.includes('@')) return { invalidEmail: true };\n\n      const [localPart, domain] = email.split('@');\n      \n      if (!domain || !domain.includes('.')) return { invalidDomain: true };\n\n      const parts = domain.split('.');\n      const tld = parts[parts.length - 1];\n      \n      if (tld.length \n    \n\n    \n        \n  \n    Buscar Paciente\n    \n      \n      Buscar\n    \n  \n\n  \n    Datos del Paciente\n    \n      {{ pacienteForm.get('id')?.value ? 'Actualizar' : 'Registrar' }} Paciente\n\n      \n        \n          Nombres\n          \n          \n            Nombres son requeridos\n          \n        \n\n        \n          Apellidos\n          \n          \n            Apellidos son requeridos\n          \n        \n      \n\n      \n        \n          RUT\n          \n          \n            RUT inválido\n          \n        \n\n        \n          Teléfono\n          \n          \n            Teléfono inválido\n          \n        \n      \n\n      \n        \n          Correo Electrónico\n          \n          \n            Correo electrónico inválido\n          \n        \n\n        \n          Fecha de Nacimiento\n          \n          \n            Fecha de nacimiento requerida\n          \n        \n      \n\n      \n        \n          Género\n          \n            Seleccione género\n            Masculino\n            Femenino\n            Otro\n          \n          \n            Género requerido\n          \n        \n\n        \n          Dirección\n          \n          \n            Dirección requerida\n          \n        \n      \n\n      \n        {{ message }}\n        {{ message }}\n      \n\n      \n        \n          Cancelar\n        \n        \n          {{ isLoading ? 'Guardando...' : 'Guardar Paciente' }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./inscripcion.component.css\n                \n                .inscripcion-container {\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n.search-section {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  margin-bottom: 2rem;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.search-section h2 {\n  margin: 0 0 1rem 0;\n  color: #2d3748;\n}\n\n.search-box {\n  display: flex;\n  gap: 1rem;\n}\n\n.search-input {\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  font-size: 1rem;\n}\n\n.search-btn, .reset-btn {\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.search-btn {\n  background-color: #4299e1;\n  color: white;\n}\n\n.search-btn:hover {\n  background-color: #3182ce;\n}\n\n.reset-btn {\n  background-color: #e2e8f0;\n  color: #4a5568;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.reset-btn:hover {\n  background-color: #cbd5e0;\n}\n\n.patient-form {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.patient-form h2 {\n  margin: 0 0 2rem 0;\n  color: #2d3748;\n}\n\n.form-row {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  margin-bottom: 1.5rem;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group label {\n  margin-bottom: 0.5rem;\n  color: #4a5568;\n  font-weight: 500;\n}\n\n.form-group input,\n.form-group select {\n  padding: 0.75rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  font-size: 1rem;\n  transition: all 0.2s;\n}\n\n.form-group input:focus,\n.form-group select:focus {\n  outline: none;\n  border-color: #4299e1;\n  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n}\n\n.form-group input.error,\n.form-group select.error {\n  border-color: #e53e3e;\n}\n\n.error-message {\n  color: #e53e3e;\n  font-size: 0.875rem;\n  margin-top: 0.25rem;\n}\n\n.message-container {\n  margin: 1.5rem 0;\n}\n\n.error-alert,\n.success-alert {\n  padding: 1rem;\n  border-radius: 6px;\n  margin-bottom: 1rem;\n}\n\n.error-alert {\n  background-color: #fff5f5;\n  color: #c53030;\n  border: 1px solid #feb2b2;\n}\n\n.success-alert {\n  background-color: #f0fff4;\n  color: #2f855a;\n  border: 1px solid #9ae6b4;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  margin-top: 2rem;\n}\n\n.reset-btn {\n  padding: 0.75rem 2rem;\n  background-color: #e2e8f0;\n  color: #4a5568;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.reset-btn:hover {\n  background-color: #cbd5e0;\n}\n\n.submit-btn {\n  padding: 0.75rem 2rem;\n  background-color: #48bb78;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.submit-btn:hover {\n  background-color: #38a169;\n}\n\n.submit-btn:disabled {\n  background-color: #a0aec0;\n  cursor: not-allowed;\n}\n\n@media (max-width: 768px) {\n  .form-row {\n    grid-template-columns: 1fr;\n    gap: 1rem;\n  }\n\n  .search-box {\n    flex-direction: column;\n  }\n\n  .search-btn,\n  .reset-btn {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Buscar Paciente                Buscar            Datos del Paciente          {{ pacienteForm.get(\\'id\\')?.value ? \\'Actualizar\\' : \\'Registrar\\' }} Paciente                        Nombres                                Nombres son requeridos                                    Apellidos                                Apellidos son requeridos                                                RUT                                RUT inválido                                    Teléfono                                Teléfono inválido                                                Correo Electrónico                                Correo electrónico inválido                                    Fecha de Nacimiento                                Fecha de nacimiento requerida                                                Género                      Seleccione género            Masculino            Femenino            Otro                                Género requerido                                    Dirección                                Dirección requerida                                      {{ message }}        {{ message }}                              Cancelar                          {{ isLoading ? \\'Guardando...\\' : \\'Guardar Paciente\\' }}                    '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InscripcionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/landing-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja la página de inicio\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                LoginModalComponent\n                                RegisterModalComponent\n                \n            \n\n            \n                styleUrls\n                ./landing-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showLoginModal\n                            \n                            \n                                showRegisterModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scrollToFeatures\n                            \n                            \n                                toggleLoginModal\n                            \n                            \n                                toggleRegisterModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToFeatures\n                        \n                    \n                \n            \n            \n                \nscrollToFeatures()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing-page/landing-page.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Desplaza la vista a la sección de características\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLoginModal\n                        \n                    \n                \n            \n            \n                \ntoggleLoginModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing-page/landing-page.component.ts:27\n                        \n                    \n\n\n            \n                \n                        Alterna la visibilidad del modal de inicio de sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRegisterModal\n                        \n                    \n                \n            \n            \n                \ntoggleRegisterModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing-page/landing-page.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Alterna la visibilidad del modal de registro\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showLoginModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/landing-page/landing-page.component.ts:19\n                        \n                    \n\n            \n                \n                    Indica si el modal de inicio de sesión está visible\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRegisterModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/landing-page/landing-page.component.ts:21\n                        \n                    \n\n            \n                \n                    Indica si el modal de registro está visible\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginModalComponent } from '../components/login-modal/login-modal.component';\nimport { RegisterModalComponent } from '../components/register-modal/register-modal.component';\n\n/**\n * Componente que maneja la página de inicio\n * @description Muestra la página principal y gestiona los modales de inicio de sesión y registro\n */\n@Component({\n  selector: 'app-landing-page',\n  standalone: true,\n  imports: [CommonModule, LoginModalComponent, RegisterModalComponent],\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent {\n  /** Indica si el modal de inicio de sesión está visible */\n  showLoginModal = false;\n  /** Indica si el modal de registro está visible */\n  showRegisterModal = false;\n\n  /**\n   * Alterna la visibilidad del modal de inicio de sesión\n   * @description Cierra el modal de registro si está abierto\n   */\n  toggleLoginModal() {\n    this.showLoginModal = !this.showLoginModal;\n    if (this.showRegisterModal) this.showRegisterModal = false;\n  }\n\n  /**\n   * Alterna la visibilidad del modal de registro\n   * @description Cierra el modal de inicio de sesión si está abierto\n   */\n  toggleRegisterModal() {\n    this.showRegisterModal = !this.showRegisterModal;\n    if (this.showLoginModal) this.showLoginModal = false;\n  }\n\n  /**\n   * Desplaza la vista a la sección de características\n   * @description Realiza un desplazamiento suave hacia la sección de características\n   */\n  scrollToFeatures() {\n    const featuresSection = document.getElementById('features');\n    if (featuresSection) {\n      featuresSection.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Hospital Scheduler\n      \n        Iniciar Sesión\n        Registrarse\n      \n    \n  \n\n  \n    \n      Gestión de Citas Médicas\n      Sistema integral para la administración de citas y horarios médicos\n      \n        Comenzar Ahora\n        Saber Más\n      \n    \n\n    \n      Características Principales\n      \n        \n          📅\n          Gestión de Citas\n          Programa y administra citas médicas de manera eficiente\n        \n        \n          👨‍⚕️\n          Perfil Médico\n          Gestiona la información y disponibilidad de los médicos\n        \n        \n          📊\n          Reportes\n          Genera informes detallados de las citas y atenciones\n        \n        \n          🔔\n          Recordatorios\n          Sistema de notificaciones para citas próximas\n        \n      \n    \n  \n\n  \n    &copy; 2024 Hospital Scheduler. Todos los derechos reservados.\n  \n\n  \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./landing-page.component.css\n                \n                .landing-page {\n  min-height: 100vh;\n  font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;\n}\n\n.header {\n  background-color: white;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  padding: 1rem 2rem;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  z-index: 100;\n}\n\n.nav-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.logo {\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #2c5282;\n}\n\n.nav-links {\n  display: flex;\n  gap: 2rem;\n  align-items: center;\n}\n\n.nav-links a {\n  text-decoration: none;\n  color: #4a5568;\n  font-weight: 500;\n  transition: color 0.2s;\n}\n\n.nav-links a:hover {\n  color: #2c5282;\n}\n\n.register-btn {\n  background-color: #4299e1;\n  color: white !important;\n  padding: 0.5rem 1.5rem;\n  border-radius: 6px;\n  transition: background-color 0.2s !important;\n}\n\n.register-btn:hover {\n  background-color: #3182ce !important;\n}\n\n.main-content {\n  padding-top: 5rem;\n}\n\n.hero {\n  background: linear-gradient(135deg, #ebf8ff 0%, #bee3f8 100%);\n  padding: 6rem 2rem;\n  text-align: center;\n}\n\n.hero h1 {\n  font-size: 3rem;\n  color: #2d3748;\n  margin-bottom: 1rem;\n}\n\n.hero p {\n  font-size: 1.25rem;\n  color: #4a5568;\n  margin-bottom: 2rem;\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.cta-buttons {\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n}\n\n.cta-primary {\n  background-color: #4299e1;\n  color: white;\n  padding: 0.75rem 2rem;\n  border-radius: 6px;\n  text-decoration: none;\n  font-weight: 500;\n  transition: background-color 0.2s;\n}\n\n.cta-primary:hover {\n  background-color: #3182ce;\n}\n\n.cta-secondary {\n  background-color: white;\n  color: #4299e1;\n  padding: 0.75rem 2rem;\n  border-radius: 6px;\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.2s;\n}\n\n.cta-secondary:hover {\n  background-color: #ebf8ff;\n}\n\n.features {\n  padding: 4rem 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.features h2 {\n  text-align: center;\n  font-size: 2rem;\n  color: #2d3748;\n  margin-bottom: 3rem;\n}\n\n.feature-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 2rem;\n}\n\n.feature-card {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n  text-align: center;\n  transition: transform 0.2s;\n}\n\n.feature-card:hover {\n  transform: translateY(-5px);\n}\n\n.feature-icon {\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n}\n\n.feature-card h3 {\n  color: #2d3748;\n  margin-bottom: 0.5rem;\n}\n\n.feature-card p {\n  color: #4a5568;\n  line-height: 1.5;\n}\n\n.footer {\n  background-color: #2d3748;\n  color: white;\n  text-align: center;\n  padding: 2rem;\n  margin-top: 4rem;\n}\n\n@media (max-width: 768px) {\n  .hero h1 {\n    font-size: 2rem;\n  }\n  \n  .hero p {\n    font-size: 1rem;\n  }\n  \n  .feature-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .nav-container {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .nav-links {\n    flex-direction: column;\n    width: 100%;\n  }\n  \n  .register-btn {\n    width: 100%;\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Hospital Scheduler              Iniciar Sesión        Registrarse                        Gestión de Citas Médicas      Sistema integral para la administración de citas y horarios médicos              Comenzar Ahora        Saber Más                    Características Principales                        📅          Gestión de Citas          Programa y administra citas médicas de manera eficiente                          👨‍⚕️          Perfil Médico          Gestiona la información y disponibilidad de los médicos                          📊          Reportes          Genera informes detallados de las citas y atenciones                          🔔          Recordatorios          Sistema de notificaciones para citas próximas                          © 2024 Hospital Scheduler. Todos los derechos reservados.          '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginModalComponent.html":{"url":"components/LoginModalComponent.html","title":"component - LoginModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login-modal/login-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja el modal de inicio de sesión\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./login-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                generatedCode\n                            \n                            \n                                isLoading\n                            \n                            \n                                isRecovering\n                            \n                            \n                                newPassword\n                            \n                            \n                                password\n                            \n                            \n                                recoveryCode\n                            \n                            \n                                recoveryCodeSent\n                            \n                            \n                                recoveryCodeVerified\n                            \n                            \n                                recoveryRut\n                            \n                            \n                                rut\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelRecovery\n                            \n                            \n                                closeModal\n                            \n                            \n                                handleRecovery\n                            \n                            \n                                    Async\n                                handleSubmit\n                            \n                            \n                                onRutInput\n                            \n                            \n                                startRecovery\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: DatabaseService, router: Router, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login-modal/login-modal.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/login-modal/login-modal.component.ts:21\n                            \n                        \n                \n                    \n                        Evento emitido para cerrar el modal\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelRecovery\n                        \n                    \n                \n            \n            \n                \ncancelRecovery()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-modal/login-modal.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Cancela el proceso de recuperación de contraseña\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-modal/login-modal.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Cierra el modal de inicio de sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRecovery\n                        \n                    \n                \n            \n            \n                \nhandleRecovery(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-modal/login-modal.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Maneja el proceso de recuperación de contraseña\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento del formulario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSubmit(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-modal/login-modal.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Maneja el intento de inicio de sesión\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento del formulario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRutInput\n                        \n                    \n                \n            \n            \n                \nonRutInput(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-modal/login-modal.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Formatea el RUT mientras el usuario escribe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de input\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startRecovery\n                        \n                    \n                \n            \n            \n                \nstartRecovery()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-modal/login-modal.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Inicia el proceso de recuperación de contraseña\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RUT o contraseña incorrectos'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:48\n                        \n                    \n\n            \n                \n                    Mensaje de error para mostrar al usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatedCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:41\n                        \n                    \n\n            \n                \n                    Código de recuperación generado por el sistema\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:46\n                        \n                    \n\n            \n                \n                    Indica si hay una operación en curso\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRecovering\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:29\n                        \n                    \n\n            \n                \n                    Indica si se está en proceso de recuperación de contraseña\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:39\n                        \n                    \n\n            \n                \n                    Nueva contraseña durante recuperación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:26\n                        \n                    \n\n            \n                \n                    Contraseña del usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoveryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:33\n                        \n                    \n\n            \n                \n                    Código de recuperación ingresado por el usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoveryCodeSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:35\n                        \n                    \n\n            \n                \n                    Indica si el código de recuperación ha sido enviado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoveryCodeVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:37\n                        \n                    \n\n            \n                \n                    Indica si el código de recuperación ha sido verificado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoveryRut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:31\n                        \n                    \n\n            \n                \n                    RUT para recuperación de contraseña\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:24\n                        \n                    \n\n            \n                \n                    RUT del usuario para inicio de sesión\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:44\n                        \n                    \n\n            \n                \n                    Indica si hay un error que mostrar\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatabaseService } from '../../services/database.service';\nimport { Router } from '@angular/router';\nimport { ToastService } from '../../services/toast.service';\n\n/**\n * Componente que maneja el modal de inicio de sesión\n * @description Permite a los usuarios iniciar sesión y recuperar su contraseña\n */\n@Component({\n  selector: 'app-login-modal',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './login-modal.component.html',\n  styleUrls: ['./login-modal.component.css']\n})\nexport class LoginModalComponent {\n  /** Evento emitido para cerrar el modal */\n  @Output() close = new EventEmitter();\n  \n  /** RUT del usuario para inicio de sesión */\n  rut: string = '';\n  /** Contraseña del usuario */\n  password: string = '';\n  \n  /** Indica si se está en proceso de recuperación de contraseña */\n  isRecovering: boolean = false;\n  /** RUT para recuperación de contraseña */\n  recoveryRut: string = '';\n  /** Código de recuperación ingresado por el usuario */\n  recoveryCode: string = '';\n  /** Indica si el código de recuperación ha sido enviado */\n  recoveryCodeSent: boolean = false;\n  /** Indica si el código de recuperación ha sido verificado */\n  recoveryCodeVerified: boolean = false;\n  /** Nueva contraseña durante recuperación */\n  newPassword: string = '';\n  /** Código de recuperación generado por el sistema */\n  generatedCode: string = '';\n  \n  /** Indica si hay un error que mostrar */\n  showError: boolean = false;\n  /** Indica si hay una operación en curso */\n  isLoading: boolean = false;\n  /** Mensaje de error para mostrar al usuario */\n  errorMessage: string = 'RUT o contraseña incorrectos';\n\n  constructor(\n    private dbService: DatabaseService,\n    private router: Router,\n    private toastService: ToastService\n  ) {}\n\n  /**\n   * Cierra el modal de inicio de sesión\n   * @description Emite el evento close\n   */\n  closeModal() {\n    this.close.emit();\n  }\n\n  /**\n   * Inicia el proceso de recuperación de contraseña\n   * @description Cambia el estado del modal a recuperación\n   */\n  startRecovery() {\n    this.isRecovering = true;\n    this.showError = false;\n    this.errorMessage = '';\n  }\n\n  /**\n   * Cancela el proceso de recuperación de contraseña\n   * @description Reinicia todos los campos de recuperación\n   */\n  cancelRecovery() {\n    this.isRecovering = false;\n    this.recoveryRut = '';\n    this.recoveryCode = '';\n    this.recoveryCodeSent = false;\n    this.recoveryCodeVerified = false;\n    this.newPassword = '';\n    this.showError = false;\n    this.errorMessage = '';\n  }\n\n  /**\n   * Maneja el proceso de recuperación de contraseña\n   * @param event Evento del formulario\n   * @description Proceso de tres pasos: envío de código, verificación y cambio de contraseña\n   */\n  handleRecovery(event: Event) {\n    event.preventDefault();\n    this.showError = false;\n    this.isLoading = true;\n\n    try {\n      if (!this.recoveryCodeSent) {\n        const funcionario = this.dbService.getFuncionarioByRut(this.recoveryRut);\n        if (!funcionario) {\n          this.showError = true;\n          this.errorMessage = 'RUT no encontrado';\n          return;\n        }\n\n        this.generatedCode = Math.random().toString(36).substring(2, 8).toUpperCase();\n        console.log('Código de recuperación:', this.generatedCode);\n        \n        this.recoveryCodeSent = true;\n        this.errorMessage = '';\n      } \n      else if (!this.recoveryCodeVerified) {\n        if (this.recoveryCode !== this.generatedCode) {\n          this.showError = true;\n          this.errorMessage = 'Código inválido';\n          return;\n        }\n        \n        this.recoveryCodeVerified = true;\n        this.errorMessage = '';\n      } \n      else {\n        if (this.newPassword.length  0) {\n      let result = rut;\n      if (rut.length > 1) {\n        result = rut.slice(0, -1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') + '-' + rut.slice(-1);\n      }\n      input.value = result;\n    }\n  }\n\n  /**\n   * Maneja el intento de inicio de sesión\n   * @param event Evento del formulario\n   * @description Verifica credenciales y redirige al dashboard si son correctas\n   */\n  async handleSubmit(event: Event) {\n    event.preventDefault();\n    this.showError = false;\n    this.isLoading = true;\n\n    try {\n      const cleanRut = this.rut.replace(/\\./g, '').replace('-', '');\n      const funcionario = this.dbService.getFuncionarioByRut(cleanRut);\n\n      if (funcionario && funcionario.password === this.password) {\n        const userData = {\n          id: funcionario.id,\n          nombres: funcionario.nombres,\n          apellidos: funcionario.apellidos,\n          rut: funcionario.rut,\n          esp_id: funcionario.esp_id,\n          especialidad: funcionario.especialidad,\n          password: funcionario.password,\n          email: funcionario.email,\n          telefono: funcionario.telefono\n        };\n        \n        localStorage.setItem('currentUser', JSON.stringify(userData));\n        \n        const now = new Date();\n        const timeStr = now.toLocaleString('es-CL', { \n          hour: '2-digit', \n          minute: '2-digit',\n          day: '2-digit',\n          month: '2-digit',\n          year: 'numeric'\n        });\n        this.toastService.show(`Inicio de sesión exitoso @ ${timeStr}`, 'success');\n        \n        this.closeModal();\n        await this.router.navigate(['/dashboard']);\n      } else {\n        this.showError = true;\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      this.showError = true;\n    } finally {\n      this.isLoading = false;\n    }\n  }\n} \n    \n\n    \n        \n    \n    \n        {{ isRecovering ? 'Recuperar Contraseña' : 'Iniciar Sesión' }}\n        ×\n    \n    \n        \n        \n            RUT\n            \n        \n\n        \n            Contraseña\n            \n        \n\n        \n            RUT o contraseña incorrectos\n        \n\n        \n            ¿Olvidaste tu contraseña?\n        \n\n        \n            \n            {{ isLoading ? 'Iniciando sesión...' : 'Iniciar Sesión' }}\n            \n        \n        \n\n        \n        \n            RUT\n            \n        \n\n        \n            Código de Recuperación\n            \n        \n\n        \n            Nueva Contraseña\n            \n        \n\n        \n            {{ errorMessage }}\n        \n\n        \n            \n            {{ \n                isLoading ? 'Procesando...' : \n                (recoveryCodeSent ? \n                    (recoveryCodeVerified ? 'Cambiar Contraseña' : 'Verificar Código') : \n                    'Enviar Código'\n                )\n            }}\n            \n        \n        \n    \n    \n\n    \n\n    \n                \n                    ./login-modal.component.css\n                \n                .modal-backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 8px;\n  width: 90%;\n  max-width: 400px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  animation: slideIn 0.3s ease-out;\n}\n\n@keyframes slideIn {\n  from {\n    transform: translateY(-20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n.modal-header {\n  padding: 1.5rem;\n  border-bottom: 1px solid #e2e8f0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.modal-header h2 {\n  margin: 0;\n  color: #2d3748;\n  font-size: 1.5rem;\n}\n\n.close-button {\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  color: #718096;\n  cursor: pointer;\n  padding: 0.5rem;\n  line-height: 1;\n  transition: color 0.2s;\n}\n\n.close-button:hover {\n  color: #2d3748;\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n.form-group {\n  margin-bottom: 1.5rem;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 0.5rem;\n  color: #4a5568;\n  font-weight: 500;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  font-size: 1rem;\n  transition: border-color 0.2s;\n}\n\n.form-group input:focus {\n  outline: none;\n  border-color: #4299e1;\n  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n}\n\n.form-group input.error {\n  border-color: #e53e3e;\n}\n\n.error-message {\n  color: #e53e3e;\n  font-size: 0.875rem;\n  margin-top: 0.5rem;\n  margin-bottom: 1rem;\n}\n\n.form-footer {\n  margin-top: 2rem;\n}\n\n.login-button {\n  width: 100%;\n  padding: 0.75rem;\n  background-color: #4299e1;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.login-button:hover {\n  background-color: #3182ce;\n}\n\n.login-button:disabled {\n  background-color: #a0aec0;\n  cursor: not-allowed;\n}\n\n.recovery-link {\n  text-align: right;\n  margin-bottom: 1rem;\n}\n\n.recovery-link a {\n  color: #4299e1;\n  font-size: 0.875rem;\n  cursor: pointer;\n  text-decoration: none;\n}\n\n.recovery-link a:hover {\n  text-decoration: underline;\n}\n\n.cancel-btn {\n  padding: 0.75rem 1.5rem;\n  background-color: #e2e8f0;\n  color: #4a5568;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.cancel-btn:hover {\n  background-color: #cbd5e0;\n}\n\n#rut, #password, #recoveryRut, #recoveryCode {\n  width: 95%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ isRecovering ? \\'Recuperar Contraseña\\' : \\'Iniciar Sesión\\' }}        ×                                    RUT                                        Contraseña                                        RUT o contraseña incorrectos                            ¿Olvidaste tu contraseña?                                        {{ isLoading ? \\'Iniciando sesión...\\' : \\'Iniciar Sesión\\' }}                                                        RUT                                        Código de Recuperación                                        Nueva Contraseña                                        {{ errorMessage }}                                        {{                 isLoading ? \\'Procesando...\\' :                 (recoveryCodeSent ?                     (recoveryCodeVerified ? \\'Cambiar Contraseña\\' : \\'Verificar Código\\') :                     \\'Enviar Código\\'                )            }}                                    '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NavItem.html":{"url":"interfaces/NavItem.html","title":"interface - NavItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NavItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/dashboard.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que define la estructura de un elemento de navegación\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            requiredRole\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Descripción de la funcionalidad\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Ícono a mostrar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Etiqueta del elemento\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Ruta del componente\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requiredRole\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requiredRole:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol requerido para acceder\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterLink, RouterOutlet } from '@angular/router';\nimport { DatabaseService } from '../services/database.service';\nimport { ToastService } from '../services/toast.service';\nimport { ProfileModalComponent } from '../components/profile-modal/profile-modal.component';\n\n/**\n * Interfaz que define la estructura de un elemento de navegación\n */\ninterface NavItem {\n  /** Ruta del componente */\n  path: string;\n  /** Ícono a mostrar */\n  icon: string;\n  /** Etiqueta del elemento */\n  label: string;\n  /** Descripción de la funcionalidad */\n  description: string;\n  /** Rol requerido para acceder */\n  requiredRole: string;\n}\n\n/**\n * Componente que maneja el panel principal de la aplicación\n * @description Muestra la navegación principal y gestiona el acceso basado en roles\n */\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule, RouterLink, RouterOutlet, ProfileModalComponent],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  /** Usuario actualmente autenticado */\n  currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n  /** Indica si el menú de usuario está visible */\n  showUserMenu = false;\n  showProfileModal = false;\n\n  /** Lista de elementos de navegación con sus permisos */\n  navItems: NavItem[] = [\n    {\n      path: 'inscripcion',\n      icon: '👥',\n      label: 'Inscripción',\n      description: 'Gestiona los pacientes',\n      requiredRole: 'USA_INSCRIPCION'\n    },\n    {\n      path: 'agenda',\n      icon: '📅',\n      label: 'Agenda',\n      description: 'Gestiona los horarios',\n      requiredRole: 'USA_AGENDA'\n    },\n    {\n      path: 'citas',\n      icon: '🕒',\n      label: 'Citas',\n      description: 'Administra las citas médicas',\n      requiredRole: 'USA_CITAS'\n    }\n  ];\n\n  constructor(\n    private router: Router,\n    private dbService: DatabaseService,\n    private toastService: ToastService\n  ) {}\n\n  /**\n   * Obtiene los elementos de navegación autorizados para el usuario actual\n   * @returns Lista filtrada de elementos de navegación según los roles del usuario\n   */\n  get authorizedNavItems(): NavItem[] {\n    return this.navItems.filter(item => \n      this.dbService.hasRole(this.currentUser.id, item.requiredRole)\n    );\n  }\n\n  /**\n   * Obtiene las iniciales del usuario actual\n   * @returns String con las iniciales del nombre y apellido\n   */\n  getUserInitials(): string {\n    return `${this.currentUser.nombres?.[0] || ''}${this.currentUser.apellidos?.[0] || ''}`;\n  }\n\n  /**\n   * Alterna la visibilidad del menú de usuario\n   * @description Muestra u oculta el menú desplegable\n   */\n  toggleUserMenu() {\n    this.showUserMenu = !this.showUserMenu;\n  }\n\n  /**\n   * Cierra la sesión del usuario\n   * @description Limpia el localStorage y redirige al inicio\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    \n    const now = new Date();\n    const timeStr = now.toLocaleString('es-CL', { \n      hour: '2-digit', \n      minute: '2-digit',\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n    this.toastService.show(`Cierre de sesión exitoso @ ${timeStr}`, 'success');\n    \n    this.router.navigate(['/']);\n  }\n\n  getUserFullName(): string {\n    return `${this.currentUser.nombres} ${this.currentUser.apellidos}`;\n  }\n\n  getUserSpecialty(): string {\n    return this.currentUser.especialidad;\n  }\n\n  openProfileModal() {\n    this.showProfileModal = true;\n  }\n\n  closeProfileModal() {\n    this.showProfileModal = false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paciente.html":{"url":"interfaces/Paciente.html","title":"interface - Paciente","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Paciente\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa un paciente\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apellidos\n                                        \n                                \n                                \n                                        \n                                            direccion\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            fecha_nacimiento\n                                        \n                                \n                                \n                                        \n                                            genero\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombres\n                                        \n                                \n                                \n                                        \n                                            rut\n                                        \n                                \n                                \n                                        \n                                            telefono\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apellidos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apellidos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direccion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direccion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha_nacimiento\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha_nacimiento:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genero:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombres:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        telefono\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        telefono:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileModalComponent.html":{"url":"components/ProfileModalComponent.html","title":"component - ProfileModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profile-modal/profile-modal.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            provideNgxMask()\n                \n            \n\n\n            \n                selector\n                app-profile-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgxMaskDirective\n                \n            \n\n\n            \n                styles\n                \n    .modal-backdrop {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n    }\n\n    .modal-content {\n      background: white;\n      border-radius: 8px;\n      width: 90%;\n      max-width: 800px;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      animation: slideIn 0.3s ease-out;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateY(-20px);\n        opacity: 0;\n      }\n      to {\n        transform: translateY(0);\n        opacity: 1;\n      }\n    }\n\n    .modal-header {\n      padding: 1.5rem;\n      border-bottom: 1px solid #e2e8f0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .modal-header h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.5rem;\n    }\n\n    .close-button {\n      background: none;\n      border: none;\n      font-size: 1.5rem;\n      color: #718096;\n      cursor: pointer;\n      padding: 0.5rem;\n      line-height: 1;\n    }\n\n    .modal-body {\n      padding: 1.5rem;\n    }\n\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      color: #4a5568;\n      font-weight: 500;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .form-group input.error {\n      border-color: #fc8181;\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .form-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      margin-top: 2rem;\n    }\n\n    .submit-btn, .cancel-btn {\n      padding: 0.75rem 1.5rem;\n      border-radius: 6px;\n      font-weight: 500;\n      cursor: pointer;\n      border: none;\n    }\n\n    .submit-btn {\n      background-color: #4299e1;\n      color: white;\n    }\n\n    .cancel-btn {\n      background-color: #e2e8f0;\n      color: #4a5568;\n    }\n\n    .submit-btn:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  \n            \n\n            \n                template\n                \n  \n    \n      Modificar Perfil\n      ×\n    \n    \n      \n        \n          \n            Nombres\n            \n            \n              {{ getErrorMessage('nombres') }}\n            \n          \n\n          \n            Apellidos\n            \n            \n              {{ getErrorMessage('apellidos') }}\n            \n          \n        \n\n        \n          \n            Correo Electrónico\n            \n            \n              {{ getErrorMessage('email') }}\n            \n          \n\n          \n            Especialidad\n            \n              Seleccione una especialidad\n              \n                {{ esp.nombre }}\n              \n            \n            \n              Especialidad es requerida\n            \n          \n        \n\n        \n          \n            Teléfono\n            \n            \n              {{ getErrorMessage('telefono') }}\n            \n          \n\n          \n            Nueva Contraseña (opcional)\n            \n            \n              {{ getErrorMessage('password') }}\n            \n          \n        \n\n        \n          \n            Confirmar Nueva Contraseña\n            \n            \n              Las contraseñas no coinciden\n            \n          \n        \n\n        \n          \n            Cancelar\n          \n          \n            {{ isLoading ? 'Guardando...' : 'Guardar Cambios' }}\n          \n        n\n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                especialidades\n                            \n                            \n                                isLoading\n                            \n                            \n                                profileForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dbService: DatabaseService, toastService: ToastService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/profile-modal/profile-modal.component.ts:290\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/profile-modal/profile-modal.component.ts:285\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/profile-modal/profile-modal.component.ts:286\n                            \n                        \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:366\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:350\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:345\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:316\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:370\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:327\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     (formGroup: FormGroup) => { passwordMismatch: boolean; }\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        especialidades\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile-modal/profile-modal.component.ts:290\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile-modal/profile-modal.component.ts:289\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile-modal/profile-modal.component.ts:288\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatabaseService, Funcionario } from '../../services/database.service';\nimport { ToastService } from '../../services/toast.service';\nimport { NgxMaskDirective, provideNgxMask } from 'ngx-mask';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile-modal',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, NgxMaskDirective],\n  providers: [provideNgxMask()],\n  template: `\n    \n      \n        \n          Modificar Perfil\n          ×\n        \n        \n          \n            \n              \n                Nombres\n                \n                \n                  {{ getErrorMessage('nombres') }}\n                \n              \n\n              \n                Apellidos\n                \n                \n                  {{ getErrorMessage('apellidos') }}\n                \n              \n            \n\n            \n              \n                Correo Electrónico\n                \n                \n                  {{ getErrorMessage('email') }}\n                \n              \n\n              \n                Especialidad\n                \n                  Seleccione una especialidad\n                  \n                    {{ esp.nombre }}\n                  \n                \n                \n                  Especialidad es requerida\n                \n              \n            \n\n            \n              \n                Teléfono\n                \n                \n                  {{ getErrorMessage('telefono') }}\n                \n              \n\n              \n                Nueva Contraseña (opcional)\n                \n                \n                  {{ getErrorMessage('password') }}\n                \n              \n            \n\n            \n              \n                Confirmar Nueva Contraseña\n                \n                \n                  Las contraseñas no coinciden\n                \n              \n            \n\n            \n              \n                Cancelar\n              \n              \n                {{ isLoading ? 'Guardando...' : 'Guardar Cambios' }}\n              \n            n\n          \n        \n      \n    \n  `,\n  styles: [`\n    .modal-backdrop {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n    }\n\n    .modal-content {\n      background: white;\n      border-radius: 8px;\n      width: 90%;\n      max-width: 800px;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      animation: slideIn 0.3s ease-out;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateY(-20px);\n        opacity: 0;\n      }\n      to {\n        transform: translateY(0);\n        opacity: 1;\n      }\n    }\n\n    .modal-header {\n      padding: 1.5rem;\n      border-bottom: 1px solid #e2e8f0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .modal-header h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.5rem;\n    }\n\n    .close-button {\n      background: none;\n      border: none;\n      font-size: 1.5rem;\n      color: #718096;\n      cursor: pointer;\n      padding: 0.5rem;\n      line-height: 1;\n    }\n\n    .modal-body {\n      padding: 1.5rem;\n    }\n\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      color: #4a5568;\n      font-weight: 500;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .form-group input.error {\n      border-color: #fc8181;\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .form-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      margin-top: 2rem;\n    }\n\n    .submit-btn, .cancel-btn {\n      padding: 0.75rem 1.5rem;\n      border-radius: 6px;\n      font-weight: 500;\n      cursor: pointer;\n      border: none;\n    }\n\n    .submit-btn {\n      background-color: #4299e1;\n      color: white;\n    }\n\n    .cancel-btn {\n      background-color: #e2e8f0;\n      color: #4a5568;\n    }\n\n    .submit-btn:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  `]\n})\nexport class ProfileModalComponent implements OnInit {\n  @Input() currentUser!: any;\n  @Output() close = new EventEmitter();\n  \n  profileForm: FormGroup;\n  isLoading = false;\n  especialidades: any[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private dbService: DatabaseService,\n    private toastService: ToastService,\n    private router: Router\n  ) {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n    this.profileForm = this.fb.group({\n      nombres: ['', [Validators.required, Validators.minLength(2)]],\n      apellidos: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.required, Validators.email]],\n      telefono: ['(56) 9 ', [Validators.required, Validators.minLength(12)]],\n      esp_id: ['', Validators.required],\n      password: ['', [\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$/)\n      ]],\n      confirmPassword: ['']\n    }, { validator: this.passwordMatchValidator() });\n\n    this.dbService.especialidades$.subscribe(\n      esp => this.especialidades = esp\n    );\n  }\n\n  ngOnInit() {\n    this.dbService.loadEspecialidades();\n    this.profileForm.patchValue({\n      nombres: this.currentUser.nombres,\n      apellidos: this.currentUser.apellidos,\n      email: this.currentUser.email,\n      telefono: this.currentUser.telefono || '(56) 9 ',\n      esp_id: this.currentUser.esp_id\n    });\n  }\n\n  passwordMatchValidator() {\n    return (formGroup: FormGroup) => {\n      const password = formGroup.get('password');\n      const confirmPassword = formGroup.get('confirmPassword');\n\n      if (password?.value || confirmPassword?.value) {\n        if (password?.value !== confirmPassword?.value) {\n          confirmPassword?.setErrors({ passwordMismatch: true });\n          return { passwordMismatch: true };\n        } else {\n          confirmPassword?.setErrors(null);\n          return null;\n        }\n      }\n      return null;\n    };\n  }\n\n  isFieldInvalid(fieldName: string): boolean {\n    const field = this.profileForm.get(fieldName);\n    return field ? (field.invalid && (field.dirty || field.touched)) : false;\n  }\n\n  getErrorMessage(fieldName: string): string {\n    const control = this.profileForm.get(fieldName);\n    if (control?.errors) {\n      if (control.errors['required']) return 'Este campo es requerido';\n      if (control.errors['minlength']) return `Mínimo ${control.errors['minlength'].requiredLength} caracteres`;\n      if (control.errors['email']) return 'Email inválido';\n      if (control.errors['pattern']) {\n        if (fieldName === 'telefono') return 'Formato de teléfono inválido';\n        if (fieldName === 'password') return 'La contraseña debe tener al menos una mayúscula, una minúscula y un número';\n        return 'Formato inválido';\n      }\n      if (control.errors['passwordMismatch']) return 'Las contraseñas no coinciden';\n    }\n    return '';\n  }\n\n  closeModal() {\n    this.close.emit();\n  }\n\n  onSubmit() {\n    if (this.profileForm.invalid) {\n      Object.keys(this.profileForm.controls).forEach(key => {\n        const control = this.profileForm.get(key);\n        if (control?.invalid) {\n          control.markAsTouched();\n        }\n      });\n      return;\n    }\n\n    this.isLoading = true;\n    const formValue = this.profileForm.value;\n    \n    try {\n      const updatedUser = {\n        ...this.currentUser,\n        ...formValue\n      };\n\n      if (formValue.password && formValue.password.length > 0) {\n        if (!formValue.password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$/)) {\n          this.toastService.show('La contraseña debe tener al menos una mayúscula, una minúscula y un número', 'error');\n          return;\n        }\n        updatedUser.password = formValue.password;\n      }\n\n      this.dbService.updateFuncionario(updatedUser);\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n      \n      this.toastService.show('Perfil actualizado exitosamente', 'success');\n      this.closeModal();\n    } catch (error) {\n      this.toastService.show('Error al actualizar el perfil', 'error');\n    } finally {\n      this.isLoading = false;\n    }\n  }\n} \n    \n\n\n    \n            \n    .modal-backdrop {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n    }\n\n    .modal-content {\n      background: white;\n      border-radius: 8px;\n      width: 90%;\n      max-width: 800px;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      animation: slideIn 0.3s ease-out;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateY(-20px);\n        opacity: 0;\n      }\n      to {\n        transform: translateY(0);\n        opacity: 1;\n      }\n    }\n\n    .modal-header {\n      padding: 1.5rem;\n      border-bottom: 1px solid #e2e8f0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .modal-header h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.5rem;\n    }\n\n    .close-button {\n      background: none;\n      border: none;\n      font-size: 1.5rem;\n      color: #718096;\n      cursor: pointer;\n      padding: 0.5rem;\n      line-height: 1;\n    }\n\n    .modal-body {\n      padding: 1.5rem;\n    }\n\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      color: #4a5568;\n      font-weight: 500;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .form-group input.error {\n      border-color: #fc8181;\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .form-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      margin-top: 2rem;\n    }\n\n    .submit-btn, .cancel-btn {\n      padding: 0.75rem 1.5rem;\n      border-radius: 6px;\n      font-weight: 500;\n      cursor: pointer;\n      border: none;\n    }\n\n    .submit-btn {\n      background-color: #4299e1;\n      color: white;\n    }\n\n    .cancel-btn {\n      background-color: #e2e8f0;\n      color: #4a5568;\n    }\n\n    .submit-btn:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Modificar Perfil      ×                                            Nombres                                      {{ getErrorMessage(\\'nombres\\') }}                                            Apellidos                                      {{ getErrorMessage(\\'apellidos\\') }}                                                            Correo Electrónico                                      {{ getErrorMessage(\\'email\\') }}                                            Especialidad                          Seleccione una especialidad                              {{ esp.nombre }}                                                    Especialidad es requerida                                                            Teléfono                                      {{ getErrorMessage(\\'telefono\\') }}                                            Nueva Contraseña (opcional)                                      {{ getErrorMessage(\\'password\\') }}                                                            Confirmar Nueva Contraseña                                      Las contraseñas no coinciden                                                            Cancelar                                {{ isLoading ? \\'Guardando...\\' : \\'Guardar Cambios\\' }}                  n            '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterModalComponent.html":{"url":"components/RegisterModalComponent.html","title":"component - RegisterModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register-modal/register-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja el modal de registro de funcionarios\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            provideNgxMask()\n                \n            \n\n\n            \n                selector\n                app-register-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgxMaskDirective\n                \n            \n\n            \n                styleUrls\n                ./register-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                especialidades\n                            \n                            \n                                isLoading\n                            \n                            \n                                registerForm\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                emailDomainValidator\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                    Async\n                                handleSubmit\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                onRutInput\n                            \n                            \n                                passwordMatchValidator\n                            \n                            \n                                rutValidator\n                            \n                            \n                                validateRut\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dbService: DatabaseService, router: Router, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register-modal/register-modal.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/register-modal/register-modal.component.ts:23\n                            \n                        \n                \n                    \n                        Evento emitido para cerrar el modal\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Cierra el modal de registro\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailDomainValidator\n                        \n                    \n                \n            \n            \n                \nemailDomainValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para el dominio del email\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                ValidatorFn para validar que el email tenga un dominio válido\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:225\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje de error para un campo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Mensaje de error correspondiente al tipo de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo del formulario es inválido\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo a verificar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el campo es inválido y ha sido tocado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRutInput\n                        \n                    \n                \n            \n            \n                \nonRutInput(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Formatea el RUT mientras el usuario escribe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de input\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Validador para asegurar que las contraseñas coincidan\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                ValidatorFn para comparar password y confirmPassword\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rutValidator\n                        \n                    \n                \n            \n            \n                \nrutValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para el RUT\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                ValidatorFn para validar el formato del RUT\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateRut\n                        \n                    \n                \n            \n            \n                \nvalidateRut(rut: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Valida el RUT ingresado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rut\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    RUT a validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el RUT es válido\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register-modal/register-modal.component.ts:32\n                        \n                    \n\n            \n                \n                    Mensaje de error para mostrar al usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        especialidades\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register-modal/register-modal.component.ts:34\n                        \n                    \n\n            \n                \n                    Lista de especialidades disponibles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register-modal/register-modal.component.ts:30\n                        \n                    \n\n            \n                \n                    Indica si hay una operación en curso\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register-modal/register-modal.component.ts:26\n                        \n                    \n\n            \n                \n                    Formulario reactivo para el registro\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register-modal/register-modal.component.ts:28\n                        \n                    \n\n            \n                \n                    Indica si hay un error que mostrar\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, ValidatorFn, ValidationErrors, AbstractControl } from '@angular/forms';\nimport { DatabaseService, Funcionario } from '../../services/database.service';\nimport { Router } from '@angular/router';\nimport { ToastService } from '../../services/toast.service';\nimport { NgxMaskDirective, provideNgxMask } from 'ngx-mask';\n\n/**\n * Componente que maneja el modal de registro de funcionarios\n * @description Permite registrar nuevos funcionarios en el sistema con validación de campos\n */\n@Component({\n  selector: 'app-register-modal',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, NgxMaskDirective],\n  providers: [provideNgxMask()],\n  templateUrl: './register-modal.component.html',\n  styleUrls: ['./register-modal.component.css']\n})\nexport class RegisterModalComponent {\n  /** Evento emitido para cerrar el modal */\n  @Output() close = new EventEmitter();\n  \n  /** Formulario reactivo para el registro */\n  registerForm: FormGroup;\n  /** Indica si hay un error que mostrar */\n  showError = false;\n  /** Indica si hay una operación en curso */\n  isLoading = false;\n  /** Mensaje de error para mostrar al usuario */\n  errorMessage = '';\n  /** Lista de especialidades disponibles */\n  especialidades: any[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private dbService: DatabaseService,\n    private router: Router,\n    private toastService: ToastService\n  ) {\n    this.registerForm = this.fb.group({\n      nombres: ['', [Validators.required, Validators.minLength(2)]],\n      apellidos: ['', [Validators.required, Validators.minLength(2)]],\n      rut: ['', [Validators.required, this.rutValidator()]],\n      telefono: ['(56) 9 ', [Validators.required, Validators.minLength(12)]],\n      email: ['', [Validators.required, Validators.email, this.emailDomainValidator()]],\n      password: ['', [\n        Validators.required, \n        Validators.minLength(6),\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$/)\n      ]],\n      confirmPassword: ['', [Validators.required]],\n      esp_id: ['', Validators.required]\n    }, { validator: this.passwordMatchValidator() });\n\n    this.dbService.especialidades$.subscribe(\n      esp => this.especialidades = esp\n    );\n  }\n\n  /**\n   * Valida el RUT ingresado\n   * @param rut RUT a validar\n   * @returns boolean indicando si el RUT es válido\n   */\n  validateRut(rut: string): boolean {\n    rut = rut.replace(/\\./g, '').replace(/-/g, '');\n    if (!/^[0-9]{7,8}[0-9Kk]$/.test(rut)) return false;\n    const verificationDigit = rut.slice(-1).toUpperCase();\n    const numbers = rut.slice(0, -1);\n    let sum = 0;\n    let multiplier = 2;\n    for (let i = numbers.length - 1; i >= 0; i--) {\n      sum += parseInt(numbers[i]) * multiplier;\n      multiplier = multiplier === 7 ? 2 : multiplier + 1;\n    }\n    const expectedDigit = 11 - (sum % 11);\n    let expectedVerificationDigit: string;\n    if (expectedDigit === 11) expectedVerificationDigit = '0';\n    else if (expectedDigit === 10) expectedVerificationDigit = 'K';\n    else expectedVerificationDigit = expectedDigit.toString();\n    return verificationDigit === expectedVerificationDigit;\n  }\n\n  /**\n   * Validador personalizado para el RUT\n   * @returns ValidatorFn para validar el formato del RUT\n   */\n  rutValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const rut = control.value;\n      if (!rut) return null;\n      return this.validateRut(rut) ? null : { invalidRut: true };\n    };\n  }\n\n  /**\n   * Formatea el RUT mientras el usuario escribe\n   * @param event Evento de input\n   * @description Agrega puntos y guión al RUT\n   */\n  onRutInput(event: any) {\n    const input = event.target;\n    let rut = input.value.replace(/\\./g, '').replace(/-/g, '');\n    rut = rut.replace(/[^0-9kK]/g, '');\n    \n    if (rut.length > 0) {\n      let result = rut;\n      if (rut.length > 1) {\n        result = rut.slice(0, -1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') + '-' + rut.slice(-1);\n      }\n      this.registerForm.patchValue({ rut: result }, { emitEvent: false });\n    }\n  }\n\n  /**\n   * Validador para asegurar que las contraseñas coincidan\n   * @returns ValidatorFn para comparar password y confirmPassword\n   */\n  passwordMatchValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const password = control.get('password')?.value;\n      const confirmPassword = control.get('confirmPassword')?.value;\n      return password === confirmPassword ? null : { passwordMismatch: true };\n    };\n  }\n\n  /**\n   * Verifica si un campo del formulario es inválido\n   * @param fieldName Nombre del campo a verificar\n   * @returns boolean indicando si el campo es inválido y ha sido tocado\n   */\n  isFieldInvalid(fieldName: string): boolean {\n    const field = this.registerForm.get(fieldName);\n    return field ? (field.invalid && (field.dirty || field.touched)) : false;\n  }\n\n  /**\n   * Cierra el modal de registro\n   * @description Emite el evento close\n   */\n  closeModal() {\n    this.close.emit();\n  }\n\n  /**\n   * Maneja el envío del formulario\n   * @description Valida y procesa el registro del nuevo funcionario\n   */\n  async handleSubmit() {\n    if (this.registerForm.invalid) return;\n\n    this.showError = false;\n    this.isLoading = true;\n\n    try {\n      const formValue = this.registerForm.value;\n      \n      const existingUser = this.dbService.getFuncionarioByRut(formValue.rut);\n      if (existingUser) {\n        this.showError = true;\n        this.errorMessage = 'Este RUT ya está registrado';\n        this.isLoading = false;\n        return;\n      }\n\n      const newFuncionario = {\n        id: 0,\n        nombres: formValue.nombres,\n        apellidos: formValue.apellidos,\n        rut: formValue.rut.replace(/\\./g, '').replace('-', ''),\n        telefono: formValue.telefono,\n        email: formValue.email,\n        password: formValue.password,\n        esp_id: parseInt(formValue.esp_id)\n      } as Funcionario;\n\n      this.dbService.addFuncionario(newFuncionario);\n      \n      this.toastService.show('Usuario registrado. Inicie sesión con su RUT y contraseña.', 'success');\n      \n      this.closeModal();\n      \n    } catch (error) {\n      console.error('Registration error:', error);\n      this.showError = true;\n      this.errorMessage = 'Error al registrar. Por favor intente nuevamente.';\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * Validador personalizado para el dominio del email\n   * @returns ValidatorFn para validar que el email tenga un dominio válido\n   */\n  emailDomainValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const email = control.value;\n      if (!email) return null;\n      \n      if (!email.includes('@')) return { invalidEmail: true };\n\n      const [localPart, domain] = email.split('@');\n      \n      if (!domain || !domain.includes('.')) return { invalidDomain: true };\n\n      const parts = domain.split('.');\n      const tld = parts[parts.length - 1];\n      \n      if (tld.length \n    \n\n    \n        \n    \n    \n        Registrarse\n        ×\n    \n    \n        \n        \n            Nombres\n            \n            \n            Nombres son requeridos (mínimo 2 caracteres)\n            \n        \n\n        \n            Apellidos\n            \n            \n            Apellidos son requeridos (mínimo 2 caracteres)\n            \n        \n\n        \n            RUT\n            \n            \n            RUT inválido\n            \n        \n\n        \n            Teléfono\n            \n            \n            Teléfono inválido (mínimo 9 dígitos)\n            \n        \n\n        \n            Correo Electrónico\n            \n            \n            Correo electrónico inválido\n            \n        \n\n        \n            Especialidad\n            \n            Seleccione una especialidad\n            \n                {{ esp.nombre }}\n            \n            \n            \n            Especialidad es requerida\n            \n        \n\n        \n            Contraseña\n            \n            \n            Contraseña debe tener al menos 6 caracteres, una mayúscula, una minúscula y un número\n            \n        \n\n        \n            Confirmar Contraseña\n            \n            \n            Las contraseñas no coinciden\n            \n        \n\n        \n            {{ errorMessage }}\n        \n\n        \n            {{ isLoading ? 'Registrando...' : 'Registrarse' }}\n        \n        \n    \n    \n\n    \n\n    \n                \n                    ./register-modal.component.css\n                \n                .modal-backdrop {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n    }\n\n    .modal-content {\n      background: white;\n      border-radius: 8px;\n      width: 95%;\n      max-width: 800px;\n      max-height: 90vh;\n      overflow-y: auto;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      animation: slideIn 0.3s ease-out;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateY(-20px);\n        opacity: 0;\n      }\n      to {\n        transform: translateY(0);\n        opacity: 1;\n      }\n    }\n\n    .modal-header {\n      padding: 1.5rem;\n      border-bottom: 1px solid #e2e8f0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .modal-header h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.5rem;\n    }\n\n    .close-button {\n      background: none;\n      border: none;\n      font-size: 1.5rem;\n      color: #718096;\n      cursor: pointer;\n      padding: 0.5rem;\n      line-height: 1;\n      transition: color 0.2s;\n    }\n\n    .close-button:hover {\n      color: #2d3748;\n    }\n\n    .modal-body {\n      padding: 1.5rem;\n    }\n\n    form {\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      gap: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group.full-width {\n      grid-column: 1 / -1;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      color: #4a5568;\n      font-weight: 500;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n      transition: border-color 0.2s;\n    }\n\n    .form-group input:focus,\n    .form-group select:focus {\n      outline: none;\n      border-color: #4299e1;\n      box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .submit-button {\n      grid-column: 1 / -1;\n      padding: 0.75rem;\n      background-color: #4299e1;\n      color: white;\n      border: none;\n      border-radius: 6px;\n      font-size: 1rem;\n      font-weight: 500;\n      cursor: pointer;\n      transition: background-color 0.2s;\n    }\n\n    .submit-button:hover {\n      background-color: #3182ce;\n    }\n\n    .submit-button:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      form {\n        grid-template-columns: 1fr;\n      }\n\n      .modal-content {\n        width: 95%;\n        max-width: 400px;\n        margin: 1rem;\n      }\n\n      .modal-header h2 {\n        font-size: 1.25rem;\n      }\n\n      .modal-body {\n        padding: 1rem;\n      }\n    }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Registrarse        ×                                    Nombres                                    Nombres son requeridos (mínimo 2 caracteres)                                        Apellidos                                    Apellidos son requeridos (mínimo 2 caracteres)                                        RUT                                    RUT inválido                                        Teléfono                                    Teléfono inválido (mínimo 9 dígitos)                                        Correo Electrónico                                    Correo electrónico inválido                                        Especialidad                        Seleccione una especialidad                            {{ esp.nombre }}                                                Especialidad es requerida                                        Contraseña                                    Contraseña debe tener al menos 6 caracteres, una mayúscula, una minúscula y un número                                        Confirmar Contraseña                                    Las contraseñas no coinciden                                        {{ errorMessage }}                            {{ isLoading ? \\'Registrando...\\' : \\'Registrarse\\' }}                        '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rol.html":{"url":"interfaces/Rol.html","title":"interface - Rol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa un rol de usuario\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RolFuncionario.html":{"url":"interfaces/RolFuncionario.html","title":"interface - RolFuncionario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RolFuncionario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa la relación entre un rol y un funcionario\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fun_id\n                                        \n                                \n                                \n                                        \n                                            rol_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fun_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fun_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rol_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rol_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/role.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guardia que protege las rutas basadas en roles de usuario\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: DatabaseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/role.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/role.guard.ts:25\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario puede acceder a la ruta solicitada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Información de la ruta a activar\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Estado actual del router\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise indicando si se permite el acceso\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { DatabaseService } from '../services/database.service';\n\n/**\n * Guardia que protege las rutas basadas en roles de usuario\n * @description Verifica que el usuario tenga los permisos necesarios para acceder a una ruta\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  constructor(\n    private dbService: DatabaseService,\n    private router: Router\n  ) {}\n\n  /**\n   * Verifica si el usuario puede acceder a la ruta solicitada\n   * @param route Información de la ruta a activar\n   * @param state Estado actual del router\n   * @returns Promise indicando si se permite el acceso\n   * @description Comprueba si el usuario tiene el rol requerido para la ruta\n   */\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n    const requiredRole = route.data['requiredRole'];\n\n    if (!currentUser.id || !requiredRole) {\n      this.router.navigate(['/']);\n      return false;\n    }\n    // Hack temporal\n    if (currentUser.id > 10) return true\n\n    try {\n      // await this.dbService.initializeDatabase();\n      \n      const hasRole = this.dbService.hasRole(currentUser.id, requiredRole);\n      \n      if (!hasRole) {\n        this.router.navigate(['/dashboard']);\n        return false;\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Error checking roles:', error);\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n} \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentoHorario.html":{"url":"interfaces/SegmentoHorario.html","title":"interface - SegmentoHorario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentoHorario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa un segmento horario de atención\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fecha_hora_fin\n                                        \n                                \n                                \n                                        \n                                            fecha_hora_inicio\n                                        \n                                \n                                \n                                        \n                                            free\n                                        \n                                \n                                \n                                        \n                                            fun_id\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fecha_hora_fin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha_hora_fin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha_hora_inicio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha_hora_inicio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        free\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        free:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fun_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fun_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SegmentoModalComponent.html":{"url":"components/SegmentoModalComponent.html","title":"component - SegmentoModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SegmentoModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/agenda/segmento-modal/segmento-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente modal para la gestión de segmentos horarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-segmento-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./segmento-modal.component.html\n            \n\n\n\n            \n                styleUrl\n                ./segmento-modal.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isEditMode\n                            \n                            \n                                segmentoForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                funcionario\n                            \n                            \n                                segmentoToEdit\n                            \n                            \n                                startDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                delete\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        funcionario\n                    \n                \n                \n                    \n                        Type :         Funcionario\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:21\n                            \n                        \n                \n                    \n                        Funcionario al que pertenece el segmento\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        segmentoToEdit\n                    \n                \n                \n                    \n                        Type :         SegmentoHorario | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:23\n                            \n                        \n                \n                    \n                        Segmento a editar (null si es nuevo)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        startDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:19\n                            \n                        \n                \n                    \n                        Fecha de inicio del segmento\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:25\n                            \n                        \n                \n                    \n                        Evento emitido para cerrar el modal\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:29\n                            \n                        \n                \n                    \n                        Evento emitido al eliminar el segmento\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        submit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:27\n                            \n                        \n                \n                    \n                        Evento emitido al guardar el segmento\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Cierra el modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Maneja la eliminación de un segmento\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:34\n                        \n                    \n\n            \n                \n                    Indica si se está editando un segmento existente\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segmentoForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:32\n                        \n                    \n\n            \n                \n                    Formulario reactivo para los datos del segmento\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatabaseService, Funcionario, SegmentoHorario } from '../../services/database.service';\n\n/**\n * Componente modal para la gestión de segmentos horarios\n * @description Permite crear y editar segmentos horarios de los funcionarios\n */\n@Component({\n  selector: 'app-segmento-modal',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './segmento-modal.component.html',\n  styleUrl: './segmento-modal.component.css'\n})\nexport class SegmentoModalComponent implements OnInit {\n  /** Fecha de inicio del segmento */\n  @Input() startDate!: Date;\n  /** Funcionario al que pertenece el segmento */\n  @Input() funcionario!: Funcionario;\n  /** Segmento a editar (null si es nuevo) */\n  @Input() segmentoToEdit: SegmentoHorario | null = null;\n  /** Evento emitido para cerrar el modal */\n  @Output() close = new EventEmitter();\n  /** Evento emitido al guardar el segmento */\n  @Output() submit = new EventEmitter();\n  /** Evento emitido al eliminar el segmento */\n  @Output() delete = new EventEmitter();\n\n  /** Formulario reactivo para los datos del segmento */\n  segmentoForm: FormGroup;\n  /** Indica si se está editando un segmento existente */\n  isEditMode: boolean = false;\n\n  constructor(private fb: FormBuilder) {\n    this.segmentoForm = this.fb.group({\n      nombre: ['', Validators.required],\n      cupos: [1, [Validators.required, Validators.min(1), Validators.max(48)]]\n    });\n  }\n\n  /**\n   * Inicializa el componente\n   * @description Configura el formulario si se está editando un segmento existente\n   */\n  ngOnInit() {\n    if (this.segmentoToEdit) {\n      this.isEditMode = true;\n      const duration = (new Date(this.segmentoToEdit.fecha_hora_fin).getTime() - \n                       new Date(this.segmentoToEdit.fecha_hora_inicio).getTime()) / (30 * 60000);\n      \n      this.segmentoForm.patchValue({\n        nombre: this.segmentoToEdit.nombre,\n        cupos: duration\n      });\n    }\n  }\n\n  /**\n   * Cierra el modal\n   * @description Emite el evento close\n   */\n  closeModal() {\n    this.close.emit();\n  }\n\n  /**\n   * Maneja la eliminación de un segmento\n   * @description Solicita confirmación antes de eliminar\n   */\n  onDelete() {\n    if (this.segmentoToEdit && confirm('¿Está seguro de eliminar este segmento horario?')) {\n      this.delete.emit(this.segmentoToEdit.id);\n      this.closeModal();\n    }\n  }\n\n  /**\n   * Maneja el envío del formulario\n   * @description Crea o actualiza un segmento horario\n   */\n  onSubmit() {\n    if (this.segmentoForm.valid) {\n      const formValue = this.segmentoForm.value;\n      const startDate = this.segmentoToEdit ? new Date(this.segmentoToEdit.fecha_hora_inicio) : this.startDate;\n      const endDate = new Date(startDate);\n      endDate.setMinutes(endDate.getMinutes() + (formValue.cupos * 30));\n\n      const segmento: SegmentoHorario = {\n        id: this.segmentoToEdit?.id || 0,\n        nombre: formValue.nombre,\n        fecha_hora_inicio: startDate.toISOString(),\n        fecha_hora_fin: endDate.toISOString(),\n        fun_id: this.funcionario.id,\n        free: true\n      };\n      \n      this.submit.emit(segmento);\n      this.closeModal();\n    }\n  }\n} \n    \n\n    \n        \n    \n    \n        {{ isEditMode ? 'Editar' : 'Crear' }} Segmento Horario\n        ×\n    \n    \n        \n        \n            Nombre del Segmento\n            \n                Seleccione un tipo de segmento\n                Atención general\n                Otro\n            \n            \n                El nombre es requerido\n            \n        \n\n        \n            Número de Cupos (30 min c/u)\n            \n            \n                El número de cupos es requerido\n                Mínimo 1 cupo\n                Máximo 48 cupos\n            \n        \n\n        \n            Fecha y Hora de Inicio\n            \n                {{ (segmentoToEdit ? segmentoToEdit.fecha_hora_inicio : startDate) | date:'dd/MM/yyyy HH:mm' }}\n            \n        \n\n        \n            Duración Total\n            \n                {{ segmentoForm.get('cupos')?.value * 30 }} minutos\n            \n        \n\n        \n            \n                Eliminar\n            \n            Cancelar\n            \n                {{ isEditMode ? 'Guardar Cambios' : 'Crear Segmento' }}\n            \n        \n        \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ isEditMode ? \\'Editar\\' : \\'Crear\\' }} Segmento Horario        ×                                    Nombre del Segmento                            Seleccione un tipo de segmento                Atención general                Otro                                        El nombre es requerido                                        Número de Cupos (30 min c/u)                                        El número de cupos es requerido                Mínimo 1 cupo                Máximo 48 cupos                                        Fecha y Hora de Inicio                            {{ (segmentoToEdit ? segmentoToEdit.fecha_hora_inicio : startDate) | date:\\'dd/MM/yyyy HH:mm\\' }}                                        Duración Total                            {{ segmentoForm.get(\\'cupos\\')?.value * 30 }} minutos                                                        Eliminar                        Cancelar                            {{ isEditMode ? \\'Guardar Cambios\\' : \\'Crear Segmento\\' }}                                    '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SegmentoModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Toast.html":{"url":"interfaces/Toast.html","title":"interface - Toast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Toast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toast.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que define la estructura de un mensaje toast\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Mensaje a mostrar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"success\" | \"error\" | \"info\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"success\" | \"error\" | \"info\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tipo de mensaje: success, error o info\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Interfaz que define la estructura de un mensaje toast\n */\nexport interface Toast {\n  /** Mensaje a mostrar */\n  message: string;\n  /** Tipo de mensaje: success, error o info */\n  type: 'success' | 'error' | 'info';\n}\n\n/**\n * Servicio que maneja los mensajes toast de la aplicación\n * @description Permite mostrar notificaciones temporales en la interfaz\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  /** Subject que mantiene el estado del toast actual */\n  private toastSubject = new BehaviorSubject(null);\n  /** Observable público que emite los cambios en el toast */\n  toast$ = this.toastSubject.asObservable();\n\n  /**\n   * Muestra un nuevo mensaje toast\n   * @param message Texto del mensaje a mostrar\n   * @param type Tipo de mensaje (success, error, info)\n   * @description El mensaje se ocultará automáticamente después de 3 segundos\n   */\n  show(message: string, type: 'success' | 'error' | 'info' = 'info') {\n    this.toastSubject.next({ message, type });\n    setTimeout(() => this.toastSubject.next(null), 3000);\n  }\n\n  /**\n   * Oculta el mensaje toast actual\n   * @description Limpia el toast actual estableciéndolo a null\n   */\n  hide() {\n    this.toastSubject.next(null);\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/toast/toast.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que muestra mensajes toast en la aplicación\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n            \n                styles\n                \n    .toast {\n      position: fixed;\n      bottom: 2rem;\n      right: 2rem;\n      padding: 1rem 2rem;\n      border-radius: 6px;\n      color: white;\n      font-weight: 500;\n      animation: slideIn 0.3s ease-out;\n      z-index: 2000;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateX(100%);\n        opacity: 0;\n      }\n      to {\n        transform: translateX(0);\n        opacity: 1;\n      }\n    }\n\n    .success {\n      background-color: #48bb78;\n    }\n\n    .error {\n      background-color: #e53e3e;\n    }\n\n    .info {\n      background-color: #4299e1;\n    }\n  \n            \n\n            \n                template\n                \n  {{ toast.message }}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/toast/toast.component.ts:60\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que maneja los mensajes toast\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/toast/toast.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Limpia la suscripción al destruir el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toast/toast.component.ts:60\n                        \n                    \n\n            \n                \n                    Suscripción al servicio de toast\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toast/toast.component.ts:58\n                        \n                    \n\n            \n                \n                    Toast actual que se está mostrando\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../services/toast.service';\nimport { Subscription } from 'rxjs';\n\n/**\n * Componente que muestra mensajes toast en la aplicación\n * @description Muestra notificaciones temporales en la esquina inferior derecha\n */\n@Component({\n  selector: 'app-toast',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    \n      {{ toast.message }}\n    \n  `,\n  styles: [`\n    .toast {\n      position: fixed;\n      bottom: 2rem;\n      right: 2rem;\n      padding: 1rem 2rem;\n      border-radius: 6px;\n      color: white;\n      font-weight: 500;\n      animation: slideIn 0.3s ease-out;\n      z-index: 2000;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateX(100%);\n        opacity: 0;\n      }\n      to {\n        transform: translateX(0);\n        opacity: 1;\n      }\n    }\n\n    .success {\n      background-color: #48bb78;\n    }\n\n    .error {\n      background-color: #e53e3e;\n    }\n\n    .info {\n      background-color: #4299e1;\n    }\n  `]\n})\nexport class ToastComponent implements OnDestroy {\n  /** Toast actual que se está mostrando */\n  toast: any = null;\n  /** Suscripción al servicio de toast */\n  private subscription: Subscription;\n\n  /**\n   * Constructor del componente\n   * @param toastService Servicio que maneja los mensajes toast\n   * @description Inicializa la suscripción al servicio de toast\n   */\n  constructor(private toastService: ToastService) {\n    this.subscription = this.toastService.toast$.subscribe(\n      toast => this.toast = toast\n    );\n  }\n\n  /**\n   * Limpia la suscripción al destruir el componente\n   * @description Evita memory leaks cancelando la suscripción\n   */\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n} \n    \n\n\n    \n            \n    .toast {\n      position: fixed;\n      bottom: 2rem;\n      right: 2rem;\n      padding: 1rem 2rem;\n      border-radius: 6px;\n      color: white;\n      font-weight: 500;\n      animation: slideIn 0.3s ease-out;\n      z-index: 2000;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateX(100%);\n        opacity: 0;\n      }\n      to {\n        transform: translateX(0);\n        opacity: 1;\n      }\n    }\n\n    .success {\n      background-color: #48bb78;\n    }\n\n    .error {\n      background-color: #e53e3e;\n    }\n\n    .info {\n      background-color: #4299e1;\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ toast.message }}'\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toast.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio que maneja los mensajes toast de la aplicación\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toast$\n                            \n                            \n                                    Private\n                                toastSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/toast.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Oculta el mensaje toast actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(message: string, type: \"success\" | \"error\" | \"info\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/toast.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Muestra un nuevo mensaje toast\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    Texto del mensaje a mostrar\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'info'\n                                            \n\n                                            \n                                                    Tipo de mensaje (success, error, info)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toast$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.toastSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/toast.service.ts:25\n                        \n                    \n\n            \n                \n                    Observable público que emite los cambios en el toast\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toastSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/toast.service.ts:23\n                        \n                    \n\n            \n                \n                    Subject que mantiene el estado del toast actual\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Interfaz que define la estructura de un mensaje toast\n */\nexport interface Toast {\n  /** Mensaje a mostrar */\n  message: string;\n  /** Tipo de mensaje: success, error o info */\n  type: 'success' | 'error' | 'info';\n}\n\n/**\n * Servicio que maneja los mensajes toast de la aplicación\n * @description Permite mostrar notificaciones temporales en la interfaz\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  /** Subject que mantiene el estado del toast actual */\n  private toastSubject = new BehaviorSubject(null);\n  /** Observable público que emite los cambios en el toast */\n  toast$ = this.toastSubject.asObservable();\n\n  /**\n   * Muestra un nuevo mensaje toast\n   * @param message Texto del mensaje a mostrar\n   * @param type Tipo de mensaje (success, error, info)\n   * @description El mensaje se ocultará automáticamente después de 3 segundos\n   */\n  show(message: string, type: 'success' | 'error' | 'info' = 'info') {\n    this.toastSubject.next({ message, type });\n    setTimeout(() => this.toastSubject.next(null), 3000);\n  }\n\n  /**\n   * Oculta el mensaje toast actual\n   * @description Limpia el toast actual estableciéndolo a null\n   */\n  hide() {\n    this.toastSubject.next(null);\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/agenda/agenda.component.ts\n            \n            component\n            AgendaComponent\n            \n                96 %\n                (24/25)\n            \n        \n        \n            \n                \n                src/app/agenda/segmento-modal/segmento-modal.component.ts\n            \n            component\n            SegmentoModalComponent\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                73 %\n                (14/19)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/citas/citas.component.ts\n            \n            component\n            CitasComponent\n            \n                93 %\n                (31/33)\n            \n        \n        \n            \n                \n                src/app/citas/citas.component.ts\n            \n            interface\n            FuncionarioWithAvailability\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/login-modal/login-modal.component.ts\n            \n            component\n            LoginModalComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                src/app/components/profile-modal/profile-modal.component.ts\n            \n            component\n            ProfileModalComponent\n            \n                0 %\n                (0/13)\n            \n        \n        \n            \n                \n                src/app/components/register-modal/register-modal.component.ts\n            \n            component\n            RegisterModalComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/components/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            interface\n            NavItem\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/funcionarios/funcionarios.component.ts\n            \n            component\n            FuncionariosComponent\n            \n                95 %\n                (21/22)\n            \n        \n        \n            \n                \n                src/app/guards/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/inscripcion/inscripcion.component.ts\n            \n            component\n            InscripcionComponent\n            \n                89 %\n                (17/19)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            injectable\n            DatabaseService\n            \n                25 %\n                (13/52)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            Cita\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            Cupo\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            Especialidad\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            Funcionario\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            Paciente\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            Rol\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            RolFuncionario\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            SegmentoHorario\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/services/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/toast.service.ts\n            \n            interface\n            Toast\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @fullcalendar/angular : ^6.1.15\n        \n            @fullcalendar/core : ^6.1.15\n        \n            @fullcalendar/daygrid : ^6.1.15\n        \n            @fullcalendar/interaction : ^6.1.15\n        \n            @fullcalendar/timegrid : ^6.1.15\n        \n            @types/sql.js : ^1.4.9\n        \n            ngx-mask : ^19.0.0\n        \n            rxjs : ~7.8.0\n        \n            sql.js : ^1.12.0\n        \n            tarea-duoc : file:\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Estado   (src/.../database.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/database.service.ts\n    \n        \n            \n                \n                    \n                        \n                        Estado\n                    \n                \n                    \n                        \n                            Enum que representa el estado de un cupo\n\n                        \n                    \n                        \n                            \n                                 DISPONIBLE\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 OCUPADO\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTareaDuoc\nThis project was generated with Angular CLI version 18.2.12.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideRouter(routes)]\n}\n                    \n                \n\n            \n                \n                    Configuración de la aplicación\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
