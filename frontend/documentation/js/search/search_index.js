var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AppComponent.html",[0,0.445,1,1.085]],["body/components/AppComponent.html",[0,0.662,1,1.744,2,1.535,3,0.276,4,0.276,5,1.208,6,1.328,7,1.208,8,1.208,9,0.194,10,2.381,11,1.445,12,1.988,13,2.532,14,0.42,15,0.545,16,2.303,17,1.85,18,2.606,19,3.817,20,1.208,21,2.1,22,2.1,23,1.066,24,1.401,25,1.593,26,1.401,27,1.613,28,3.3,29,4.602,30,1.744,31,1.85,32,4.602,33,1.683,34,3.999,35,0.194,36,0.326,37,0.875,38,1.529,39,1.395,40,3.57,41,4.602,42,1.27,43,4.602,44,1.401,45,4.129,46,3.3,47,3.152,48,1.766,49,2.381,50,0.8,51,2.045,52,3.999,53,0.406,54,1.102,55,0.037,56,1.613,57,0.462,58,1.006,59,0.881,60,3.57,61,1.315,62,2.87,63,1.683,64,0.896,65,4.977,66,1.535,67,3.317,68,0.478,69,0.508,70,1.102,71,2.87,72,2.819,73,0.716,74,0.803,75,1.78,76,1.949,77,0.798,78,1.744,79,3.999,80,1.044,81,2.87,82,2.895,83,2.264,84,0.918,85,2.87,86,1.169,87,0.881,88,2.87,89,1.535,90,1.683,91,3.999,92,2.87,93,3.999,94,0.575,95,1.28,96,1.117,97,2.87,98,3.999,99,1.117,100,2.87,101,1.169,102,0.881,103,0.52,104,0.234,105,0.919,106,1.328,107,1.328,108,2.87,109,1.102,110,0.839,111,2.87,112,1.102,113,2.058,114,3.999,115,0.442,116,0.276,117,0.463,118,0.384,119,2.87,120,0.839,121,2.381,122,2.381,123,2.381,124,2.381,125,2.87,126,2.87,127,2.87,128,1.465,129,2.541,130,2.058,131,2.767,132,2.045,133,2.264,134,2.625,135,2.541,136,1.85,137,2.381,138,2.381,139,3.317,140,3.317,141,2.381,142,2.381,143,2.381,144,1.625,145,2.672,146,2.541,147,1.465,148,2.041,149,1.625,150,1.625,151,2.606,152,2.264,153,2.606,154,2.422,155,2.381,156,2.864,157,1.465,158,2.264,159,2.773,160,1.85,161,2.422,162,2.791,163,2.767,164,2.041,165,2.508,166,2.508,167,2.303,168,2.964,169,2.964,170,2.606,171,2.606,172,2.532,173,1.625,174,2.87,175,2.87,176,1.465,177,4.977,178,5.42,179,1.465,180,2.349,181,0.919,182,2.041,183,2.264,184,2.914,185,2.914,186,1.465,187,2.058,188,2.532,189,1.465,190,2.381,191,2.058,192,3.999,193,2.87,194,1.625,195,1.465,196,1.465,197,2.914,198,2.041,199,2.058,200,1.817,201,2.87,202,2.87,203,2.87,204,5.42,205,3.753,206,2.541,207,2.381,208,2.819,209,2.87,210,2.381,211,1.817,212,3.817,213,1.817,214,4.602,215,2.041,216,2.264,217,2.868,218,2.381,219,2.87,220,3.999,221,4.602,222,2.381,223,2.87,224,2.058,225,2.381,226,2.87,227,1.625,228,2.87,229,2.87,230,2.868,231,2.058,232,1.817,233,2.87,234,2.532,235,1.28,236,2.058,237,2.381,238,1.208,239,1.683,240,1.683,241,1.208,242,2.095,243,1.208,244,1.102,245,1.208,246,1.208,247,1.006,248,1.208,249,0.919,250,1.208,251,1.006,252,1.208,253,1.006,254,1.208,255,1.208,256,1.102,257,1.208,258,2.095,259,0.919,260,1.208,261,1.006,262,1.208,263,1.006,264,0.463,265,0.839,266,1.208,267,1.208,268,0.022,269,0.022]],["title/interfaces/Cita.html",[270,0.09,271,0.905]],["body/interfaces/Cita.html",[3,0.265,4,0.265,9,0.187,14,0.417,15,0.548,23,0.736,35,0.187,36,0.317,37,0.888,38,1.137,39,1.037,42,0.945,50,0.397,53,0.504,55,0.037,57,0.367,59,0.609,61,1.405,64,0.497,68,0.588,69,0.79,73,0.904,74,0.446,77,0.551,80,0.899,84,1.262,86,0.807,87,0.609,94,0.56,95,0.884,96,1.509,99,1.405,101,1.137,102,0.994,103,0.47,104,0.225,115,0.556,116,0.265,117,1.005,118,0.47,120,0.807,235,1.246,264,0.987,268,0.022,269,0.022,270,0.166,271,1.317,272,0.736,273,0.968,274,1.533,275,1.984,276,0.945,277,1.494,278,1.494,279,1.494,280,1.06,281,1.87,282,1.494,283,0.609,284,1.06,285,1.06,286,1.246,287,1.405,288,1.566,289,0.884,290,1.317,291,1.317,292,1.18,293,1.03,294,1.137,295,1.137,296,0.968,297,0.968,298,0.968,299,1.137,300,0.968,301,0.968,302,0.968,303,1.06,304,1.512,305,1.494,306,0.884,307,0.807,308,0.648,309,1.494,310,1.494,311,1.06,312,1.06,313,1.494,314,1.06,315,1.06,316,1.06,317,1.494,318,1.06,319,1.443,320,1.06,321,1.06,322,1.06,323,1.06,324,1.06,325,1.494,326,1.06,327,1.06,328,1.06,329,1.06,330,1.06,331,1.118,332,0.742,333,1.06,334,1.06,335,1.494,336,1.06,337,1.037,338,1.037,339,1.06,340,1.06,341,2.38,342,2.055,343,1.06,344,1.06,345,1.73,346,1.364,347,1.06,348,1.06,349,1.06,350,1.06,351,1.715,352,1.494,353,2.156,354,1.608,355,1.06,356,1.06,357,1.06,358,1.06,359,1.06,360,1.06,361,1.06,362,1.06,363,1.06,364,1.06,365,1.06,366,1.06,367,1.06,368,1.906,369,0.968,370,1.494,371,0.968,372,1.06,373,0.446,374,1.494,375,1.06,376,1.06,377,1.06,378,1.06,379,1.06,380,1.06,381,1.06,382,1.06,383,1.06,384,1.579,385,1.06,386,1.06,387,0.884,388,1.06,389,0.968,390,1.494,391,1.06,392,1.06,393,1.06,394,1.06,395,1.06,396,1.06,397,1.06,398,1.73,399,1.06,400,1.06,401,1.06,402,1.06,403,1.06,404,1.06,405,1.73,406,0.807,407,1.06,408,1.06,409,1.06,410,1.06]],["title/components/DashboardComponent.html",[0,0.445,249,0.991]],["body/components/DashboardComponent.html",[0,0.549,1,0.727,2,1.212,3,0.441,4,0.199,5,0.874,6,0.96,7,0.874,8,0.874,9,0.14,11,1.505,12,1.339,13,2.419,14,0.409,15,0.542,16,1.461,20,0.874,21,1.978,22,2.048,24,1.106,25,1.223,26,1.106,27,1.339,30,0.727,31,1.461,33,1.329,35,0.258,36,0.257,42,0.766,44,1.106,48,1.212,50,0.723,51,1.999,53,0.482,54,0.797,55,0.037,56,1.496,57,0.257,58,0.727,63,0.874,64,0.87,66,0.797,68,0.568,69,0.725,70,1.639,73,0.85,75,1.47,76,1.496,78,1.106,80,0.852,82,1.95,83,1.788,86,0.922,89,1.212,90,1.329,94,0.549,102,0.696,103,0.464,104,0.169,105,0.664,107,0.96,109,0.797,110,0.922,112,1.639,115,0.199,116,0.199,118,0.483,128,2.469,129,2.962,131,2.344,132,1.928,133,2.163,134,2.582,135,2.179,136,2.582,144,3.006,145,3.035,146,2.983,147,2.71,148,2.983,149,2.163,150,1.788,151,3.197,152,3.065,153,3.309,154,0.96,156,2.806,157,1.059,158,2.163,159,2.704,160,1.768,161,1.975,162,2.398,163,2.809,164,2.938,165,2.505,166,2.238,167,1.768,168,2.163,169,2.163,170,2.417,171,2.417,172,1.999,173,1.175,176,1.059,179,2.763,181,0.664,182,1.612,183,1.175,186,2.469,189,1.612,195,1.612,196,1.612,197,1.999,198,2.179,206,2.469,207,2.618,208,2.739,210,4.683,212,3.169,215,2.179,216,2.417,218,1.721,222,2.618,230,3.061,231,1.488,238,0.874,239,1.329,240,1.329,241,0.874,242,1.797,243,0.874,244,0.797,245,0.874,246,0.874,247,0.727,248,0.874,249,1.366,250,0.874,251,0.727,252,0.874,253,0.727,254,0.874,255,0.874,256,0.797,257,0.874,258,1.797,259,1.366,260,1.608,261,0.727,262,0.874,263,0.727,264,0.335,265,0.606,266,0.874,267,0.874,268,0.018,269,0.018,270,0.06,292,0.696,293,0.762,299,1.066,304,1.258,306,1.01,308,0.549,331,0.826,332,0.298,337,0.553,338,1.224,373,0.509,389,0.727,411,1.488,412,1.116,413,2.618,414,3.169,415,3.169,416,3.169,417,3.169,418,3.169,419,2.618,420,2.419,421,3.169,422,3.169,423,3.169,424,3.541,425,3.541,426,4.012,427,4.012,428,4.012,429,4.17,430,3.541,431,3.541,432,3.157,433,3.169,434,2.075,435,2.739,436,1.609,437,2.075,438,2.075,439,1.975,440,2.238,441,3.281,442,2.075,443,2.618,444,3.541,445,3.061,446,4.628,447,2.075,448,2.934,449,3.541,450,2.764,451,2.075,452,3.541,453,1.797,454,2.618,455,2.075,456,2.075,457,2.075,458,2.264,459,2.075,460,1.999,461,1.999,462,3.809,463,1.999,464,2.075,465,2.264,466,2.618,467,2.908,468,2.264,469,3.882,470,3.006,471,2.264,472,3.293,473,3.606,474,2.618,475,4.012,476,2.618,477,2.739,478,2.264,479,2.618,480,2.075,481,3.809,482,4.17,483,2.264,484,2.264,485,1.763,486,2.075,487,2.075,488,2.264,489,2.075,490,2.075,491,2.618,492,0.96,493,1.721,494,1.314,495,1.488,496,1.175,497,1.314,498,1.314,499,0.727,500,2.618,501,1.488,502,1.721,503,0.96,504,1.721,505,1.721,506,1.721,507,1.059,508,1.488,509,1.768,510,1.488,511,1.721,512,0.664,513,1.488,514,1.488,515,1.721,516,1.721,517,1.721,518,1.721,519,1.721,520,1.721,521,1.721,522,1.999,523,1.721,524,2.618,525,1.721,526,1.721,527,1.721,528,1.721,529,1.175,530,2.618,531,1.721,532,1.721,533,1.721,534,2.417,535,3.541,536,1.721,537,1.721,538,1.721,539,1.721,540,1.721,541,1.721,542,1.721,543,0.797,544,1.488,545,1.721,546,1.721,547,1.721,548,2.618,549,1.721,550,3.157,551,3.157,552,3.157,553,2.618,554,1.999,555,2.74,556,1.721,557,2.075,558,4.298,559,2.264,560,1.175,561,3.469,562,1.612,563,1.488,564,3.157,565,4.17,566,3.809,567,2.469,568,3.169,569,4.847,570,4.592,571,1.175,572,2.075,573,2.075,574,3.169,575,1.95,576,3.157,577,4.592,578,1.314,579,2.264,580,2.075,581,4.269,582,3.157,583,2.645,584,1.721,585,1.721,586,2.417,587,2.075,588,2.417,589,2.264,590,1.788,591,2.075,592,3.157,593,3.157,594,2.075,595,3.157,596,1.175,597,2.075,598,2.075,599,1.721,600,3.157,601,2.075,602,2.075,603,2.075,604,2.075,605,2.075,606,2.075,607,1.721,608,2.075,609,2.075,610,2.075,611,2.075,612,2.075,613,2.075]],["title/interfaces/Especialidad.html",[80,0.618,270,0.09]],["body/interfaces/Especialidad.html",[3,0.266,4,0.266,9,0.187,14,0.417,15,0.549,23,0.739,35,0.187,36,0.318,37,0.889,38,1.14,39,1.04,42,0.947,50,0.398,53,0.504,55,0.037,57,0.318,59,0.611,61,1.406,64,0.499,68,0.588,69,0.79,73,0.907,74,0.447,77,0.553,80,0.978,84,1.262,86,0.81,87,0.611,94,0.561,95,0.887,96,1.486,99,1.254,101,1.14,102,0.995,103,0.471,104,0.226,115,0.556,116,0.266,117,1.006,118,0.471,120,0.81,235,1.249,264,0.988,268,0.022,269,0.022,270,0.166,271,1.14,272,0.739,273,0.971,274,1.533,275,1.985,276,0.947,277,1.498,278,1.498,279,1.498,280,1.064,281,1.87,282,1.498,283,0.611,284,1.064,285,1.064,286,1.249,287,1.406,288,1.569,289,0.887,290,1.32,291,1.32,292,1.181,293,1.031,294,1.14,295,1.14,296,0.971,297,0.971,298,0.971,299,1.239,300,0.971,301,0.971,302,0.971,303,1.064,304,1.513,305,1.498,306,0.887,307,0.81,308,0.649,309,1.498,310,1.498,311,1.064,312,1.064,313,1.498,314,1.064,315,1.064,316,1.064,317,1.498,318,1.064,319,1.445,320,1.064,321,1.064,322,1.064,323,1.064,324,1.064,325,1.498,326,1.064,327,1.064,328,1.064,329,1.064,330,1.064,331,1.119,332,0.743,333,1.064,334,1.064,335,1.498,336,1.064,337,1.04,338,1.04,339,1.064,340,1.064,341,2.381,342,2.057,343,1.064,344,1.064,345,1.733,346,1.367,347,1.064,348,1.064,349,1.064,350,1.064,351,1.718,352,1.498,353,2.158,354,1.609,355,1.064,356,1.064,357,1.064,358,1.064,359,1.064,360,1.064,361,1.064,362,1.064,363,1.064,364,1.064,365,1.064,366,1.064,367,1.064,368,1.907,369,0.971,370,1.498,371,0.971,372,1.064,373,0.447,374,1.498,375,1.064,376,1.064,377,1.064,378,1.064,379,1.064,380,1.064,381,1.064,382,1.064,383,1.064,384,1.582,385,1.064,386,1.064,387,0.887,388,1.064,389,0.971,390,1.498,391,1.064,392,1.064,393,1.064,394,1.064,395,1.064,396,1.064,397,1.064,398,1.733,399,1.064,400,1.064,401,1.064,402,1.064,403,1.064,404,1.064,405,1.733,406,0.81,407,1.064,408,1.064,409,1.064,410,1.064]],["title/interfaces/Funcionario.html",[84,0.618,270,0.09]],["body/interfaces/Funcionario.html",[3,0.26,4,0.26,9,0.183,14,0.416,15,0.546,23,0.721,35,0.183,36,0.313,37,0.883,38,1.121,39,1.023,42,0.931,50,0.389,53,0.503,55,0.037,57,0.463,59,0.597,61,1.399,64,0.487,68,0.586,69,0.788,73,0.916,74,0.437,77,0.54,80,1.115,84,1.262,86,0.791,87,0.597,94,0.552,95,0.866,96,1.481,99,1.243,101,1.121,102,0.983,103,0.466,104,0.221,115,0.553,116,0.26,117,1.004,118,0.466,120,0.791,235,1.228,264,0.985,268,0.022,269,0.022,270,0.165,271,1.121,272,0.721,273,0.948,274,1.531,275,1.98,276,0.931,277,1.473,278,1.473,279,1.473,280,1.039,281,1.868,282,1.473,283,0.597,284,1.039,285,1.039,286,1.228,287,1.44,288,1.751,289,0.866,290,1.554,291,1.554,292,1.253,293,1.091,294,1.496,295,1.496,296,0.948,297,0.948,298,0.948,299,1.129,300,0.948,301,0.948,302,0.948,303,1.039,304,1.509,305,1.473,306,0.866,307,0.791,308,0.641,309,1.473,310,1.473,311,1.039,312,1.039,313,1.473,314,1.039,315,1.039,316,1.039,317,1.473,318,1.039,319,1.427,320,1.039,321,1.039,322,1.039,323,1.039,324,1.039,325,1.473,326,1.039,327,1.039,328,1.039,329,1.039,330,1.039,331,1.116,332,0.736,333,1.039,334,1.039,335,1.473,336,1.039,337,1.023,338,1.023,339,1.039,340,1.039,341,2.375,342,2.041,343,1.039,344,1.039,345,1.711,346,1.345,347,1.039,348,1.039,349,1.039,350,1.039,351,1.7,352,1.473,353,2.145,354,1.598,355,1.039,356,1.039,357,1.039,358,1.039,359,1.039,360,1.039,361,1.039,362,1.039,363,1.039,364,1.039,365,1.039,366,1.039,367,1.039,368,1.9,369,0.948,370,1.473,371,0.948,372,1.039,373,0.437,374,1.473,375,1.039,376,1.039,377,1.039,378,1.039,379,1.039,380,1.039,381,1.039,382,1.039,383,1.039,384,1.562,385,1.039,386,1.039,387,0.866,388,1.039,389,0.948,390,1.473,391,1.039,392,1.039,393,1.039,394,1.039,395,1.039,396,1.039,397,1.039,398,1.711,399,1.039,400,1.039,401,1.039,402,1.039,403,1.039,404,1.039,405,1.711,406,0.791,407,1.039,408,1.039,409,1.039,410,1.039]],["title/interfaces/FuncionarioWithAvailability.html",[270,0.09,614,2.221]],["body/interfaces/FuncionarioWithAvailability.html",[0,0.555,3,0.262,4,0.262,9,0.184,11,1.518,12,1.351,14,0.42,15,0.538,17,1.261,18,2.184,21,0.955,22,0.955,24,0.955,25,1.754,26,0.955,27,1.351,28,2.766,31,1.261,33,1.147,35,0.184,36,0.314,37,0.99,39,1.461,40,2.766,42,1.086,50,0.392,53,0.435,55,0.037,57,0.222,58,1.351,63,1.623,64,0.49,66,2.046,68,0.566,73,0.555,74,0.942,77,0.971,78,1.962,82,2.285,83,1.543,84,1.228,87,1.073,89,2.046,90,1.884,94,0.555,96,1.452,99,1.086,101,1.602,102,0.85,103,0.561,104,0.222,105,0.872,106,1.261,109,1.046,110,1.127,112,1.971,115,0.262,116,0.262,117,0.785,118,0.262,132,1.351,180,1.969,181,1.432,188,1.726,191,1.955,236,1.955,237,2.261,247,0.955,264,0.903,268,0.022,269,0.022,270,0.079,271,1.127,272,0.726,274,0.936,275,0.872,281,0.797,283,0.601,287,1.359,304,1.086,308,0.555,319,0.872,331,0.924,332,0.7,368,1.432,371,0.955,373,0.931,384,0.955,387,0.872,412,1.5,436,0.872,439,1.261,440,2.071,450,1.261,453,1.147,458,1.955,460,1.726,461,1.726,465,1.955,477,2.184,483,1.955,485,2.046,492,1.261,496,2.184,499,1.995,503,2.071,509,1.785,512,1.234,513,1.955,529,1.543,543,1.046,565,2.261,614,3.489,615,2.261,616,3.856,617,3.081,618,3.712,619,3.856,620,5.134,621,2.766,622,2.766,623,3.856,624,3.856,625,2.726,626,2.726,627,4.475,628,3.856,629,2.261,630,3.856,631,3.856,632,2.261,633,3.856,634,2.261,635,3.856,636,2.261,637,3.856,638,2.261,639,2.726,640,4.866,641,1.147,642,3.856,643,2.726,644,2.726,645,2.726,646,5.134,647,2.726,648,2.726,649,2.726,650,3.199,651,2.726,652,3.712,653,2.261,654,2.726,655,4.866,656,2.726,657,2.726,658,3.856,659,1.147,660,1.726,661,2.726,662,2.442,663,1.955,664,3.712,665,2.261,666,2.726,667,3.856,668,1.543,669,2.726,670,3.856,671,2.261,672,2.726,673,2.726,674,3.856,675,4.475,676,2.726,677,2.726,678,3.856,679,3.856,680,2.726,681,2.726,682,2.726,683,4.866,684,2.726,685,3.081,686,3.199,687,3.199,688,2.726,689,1.543,690,2.726,691,2.442,692,2.261,693,2.726,694,2.726,695,3.856,696,2.726,697,2.726,698,2.261,699,3.856,700,2.726,701,2.726,702,2.726,703,2.726,704,2.726,705,2.726,706,1.955,707,2.726,708,4.475,709,2.726,710,4.866,711,2.726,712,2.726,713,2.726,714,3.199,715,2.726,716,5.134,717,2.726,718,1.955,719,2.726,720,2.726,721,2.726,722,2.834,723,3.856,724,2.726,725,2.726,726,2.726,727,2.726,728,2.726,729,1.955,730,2.726,731,2.726,732,2.726,733,2.726,734,3.856,735,2.726,736,2.534,737,2.726,738,2.726,739,2.726,740,2.726,741,2.726,742,4.475,743,3.856,744,2.726,745,2.261,746,3.856,747,1.955,748,1.955,749,1.955,750,1.955,751,2.261,752,1.955,753,1.955,754,1.955,755,1.955,756,1.955,757,2.766,758,2.766,759,1.955,760,1.955,761,2.766,762,3.209,763,1.955,764,1.955,765,1.955,766,2.261,767,2.261,768,1.955,769,1.543,770,2.726,771,2.261,772,3.199,773,3.489,774,4.036,775,2.726,776,2.261,777,2.261,778,2.261,779,5.134,780,2.261,781,2.726,782,3.199,783,2.261,784,2.726,785,2.726,786,2.726,787,2.726,788,2.726,789,2.726,790,2.726,791,1.955,792,2.726,793,1.955,794,2.726,795,2.726,796,2.726,797,2.726,798,2.726,799,2.726,800,2.726,801,2.726,802,2.726,803,2.726,804,2.726,805,2.726,806,2.261,807,2.726,808,2.726,809,2.726,810,2.726]],["title/components/InscripcionComponent.html",[0,0.445,251,1.085]],["body/components/InscripcionComponent.html",[0,0.478,1,0.585,2,1.022,3,0.16,4,0.16,5,1.399,6,0.772,7,0.703,8,0.703,9,0.113,11,1.432,12,1.549,14,0.403,15,0.424,17,1.233,18,1.882,20,0.703,21,1.883,22,1.883,24,0.933,25,1.781,26,0.933,27,1.165,28,2.384,30,0.585,31,1.233,33,1.121,35,0.113,36,0.217,37,0.951,42,1.072,44,0.933,47,2.403,48,1.456,50,0.692,51,2.013,53,0.476,54,1.696,55,0.037,56,1.688,57,0.415,58,1.549,59,1.022,60,1.91,61,1.125,63,0.703,66,1.848,68,0.581,69,0.72,70,1.591,72,1.508,73,0.826,74,0.748,75,1.484,76,1.549,77,0.961,78,1.883,87,1.062,89,1.696,94,0.808,96,1.461,103,0.424,104,0.136,105,0.534,106,0.772,109,0.641,110,1.109,112,1.696,115,0.16,116,0.16,117,0.777,118,0.364,128,1.36,129,1.697,131,2.598,132,2.047,133,0.945,134,2.297,135,2.459,136,2.228,145,1.937,146,2.367,147,0.852,148,0.852,154,1.756,156,2.739,157,1.36,158,2.727,159,2.575,160,1.233,161,1.756,162,2.64,163,2.117,164,0.852,165,2.228,166,2.297,167,2.146,168,2.348,169,2.148,170,2.348,171,2.348,172,2.403,173,0.945,176,1.36,179,1.937,180,1.937,181,1.664,182,2.117,183,2.148,184,2.403,185,2.403,186,1.697,188,1.057,189,1.937,191,1.197,194,1.508,195,2.117,196,1.697,197,1.687,198,1.36,200,1.057,205,1.91,211,1.057,215,1.36,224,1.197,234,1.057,238,0.703,239,1.121,240,1.121,241,0.703,242,1.597,243,0.703,244,0.641,245,0.703,246,0.703,247,0.585,248,0.703,249,0.534,250,0.703,251,1.33,252,0.703,253,0.585,254,0.703,255,0.703,256,0.641,257,0.703,258,1.597,259,0.534,260,0.703,261,0.585,262,0.703,263,0.585,264,0.269,265,0.488,266,0.703,267,0.703,268,0.015,269,0.015,274,0.807,275,0.534,287,1.503,290,1.291,291,1.291,294,0.971,295,1.451,296,1.165,297,0.933,298,0.933,299,0.836,304,0.921,308,0.478,331,1.083,332,0.546,346,0.585,354,0.778,369,1.165,373,0.927,412,1.451,436,1.541,448,1.508,450,2.045,468,2.384,470,0.945,471,1.91,485,2.136,492,0.772,499,1.883,503,2.045,507,1.697,512,0.853,514,1.197,529,1.882,534,1.508,543,1.456,559,1.91,562,1.36,567,2.117,571,1.882,575,2.117,578,1.057,583,0.852,584,1.384,586,0.945,588,1.508,589,1.91,590,1.508,596,0.945,641,0.703,650,2.209,652,3.665,653,2.757,659,0.703,660,1.057,662,2.798,663,2.384,664,2.209,665,2.757,668,2.626,685,2.105,689,1.508,691,1.687,698,2.209,706,1.197,714,1.384,722,2.105,729,1.197,736,1.508,747,2.973,748,2.721,749,2.721,750,1.91,752,1.91,753,1.91,754,1.91,755,1.197,756,1.197,757,3.169,758,3.169,759,1.197,760,1.197,761,2.384,762,2.721,763,2.384,764,1.91,765,2.384,766,1.384,767,2.209,768,1.91,769,0.945,771,3.147,772,2.209,773,3.454,776,2.209,777,1.384,778,1.384,780,2.757,782,3.147,783,1.384,793,1.91,811,1.384,812,1.687,813,2.384,814,2.105,815,2.384,816,3.324,817,2.664,818,2.973,819,2.811,820,3.324,821,3.324,822,2.721,823,2.664,824,1.91,825,1.91,826,2.209,827,2.721,828,3.794,829,3.147,830,2.209,831,1.057,832,2.403,833,2.664,834,2.105,835,3.223,836,1.687,837,1.36,838,1.669,839,2.973,840,2.973,841,3.847,842,3.794,843,3.56,844,3.56,845,1.669,846,2.721,847,1.687,848,2.721,849,2.664,850,1.669,851,2.664,852,2.664,853,1.91,854,1.669,855,3.727,856,2.721,857,1.91,858,1.36,859,1.91,860,1.669,861,3.95,862,1.91,863,2.403,864,1.91,865,1.91,866,1.91,867,1.669,868,1.669,869,2.664,870,1.669,871,1.687,872,1.669,873,2.664,874,1.669,875,3.454,876,2.625,877,2.721,878,1.669,879,2.209,880,1.669,881,1.91,882,2.757,883,1.669,884,1.687,885,1.91,886,1.669,887,2.105,888,1.669,889,1.669,890,1.669,891,1.669,892,1.057,893,2.384,894,1.057,895,1.057,896,3.665,897,1.384,898,1.669,899,1.669,900,1.057,901,3.05,902,1.91,903,1.91,904,1.91,905,1.384,906,1.197,907,1.91,908,1.669,909,1.384,910,1.197,911,2.664,912,1.669,913,2.384,914,2.664,915,1.669,916,2.664,917,2.664,918,2.757,919,2.209,920,1.669,921,2.209,922,2.664,923,1.384,924,2.384,925,2.664,926,1.197,927,1.197,928,1.197,929,1.384,930,1.384,931,1.057,932,1.384,933,1.057,934,1.384,935,1.197,936,1.669,937,1.384,938,1.669,939,2.664,940,1.669,941,1.669,942,2.973,943,1.669,944,1.669,945,1.669,946,2.664,947,1.669,948,1.669,949,1.669,950,1.384,951,1.669,952,1.669,953,1.669,954,1.384,955,2.209,956,1.384,957,1.384,958,2.757,959,3.439,960,1.384,961,1.384,962,2.757,963,2.384,964,3.439,965,1.384,966,1.384,967,1.384,968,1.384,969,1.384,970,1.669,971,1.669,972,1.669,973,5.09,974,1.669,975,1.669,976,1.669,977,1.669,978,1.669,979,1.669,980,2.664,981,1.669,982,1.669,983,1.669,984,1.669,985,1.669,986,1.384,987,1.057,988,1.669,989,1.669,990,1.669,991,1.384,992,1.384,993,2.721,994,1.057,995,1.057,996,1.669,997,1.197,998,1.197,999,1.384,1000,1.197,1001,1.197,1002,1.669,1003,1.669,1004,1.669,1005,1.669,1006,2.664,1007,1.384,1008,2.664,1009,2.664,1010,2.209,1011,1.669,1012,1.057,1013,1.669,1014,1.197,1015,1.384,1016,1.669,1017,1.197,1018,1.197,1019,1.197,1020,1.91,1021,1.197,1022,1.197,1023,1.197,1024,1.197,1025,1.197,1026,1.197,1027,1.197,1028,1.197,1029,2.664,1030,1.669,1031,1.669,1032,1.669,1033,2.664,1034,1.669,1035,1.669,1036,1.669,1037,1.669,1038,2.209,1039,3.147,1040,3.147,1041,2.721,1042,2.721,1043,1.669,1044,4.419,1045,1.687,1046,2.664,1047,2.664,1048,2.209,1049,3.794,1050,1.91,1051,1.91,1052,2.209,1053,1.91,1054,1.669,1055,4.964,1056,2.664,1057,1.687,1058,4.419,1059,2.664,1060,2.664,1061,3.853,1062,2.105,1063,1.687,1064,2.105,1065,3.454,1066,1.384,1067,1.384,1068,1.384,1069,1.384,1070,1.384,1071,1.384,1072,1.384,1073,1.669,1074,1.197,1075,3.794,1076,1.669,1077,1.669,1078,1.669,1079,1.669,1080,1.669,1081,1.384,1082,2.105,1083,1.384,1084,1.197,1085,1.669,1086,1.669]],["title/components/LandingPageComponent.html",[0,0.445,253,1.085]],["body/components/LandingPageComponent.html",[0,0.634,1,0.929,2,1.452,3,0.255,4,0.255,5,1.856,6,1.227,7,1.116,8,1.116,9,0.179,11,1.354,12,1.325,13,1.679,14,0.428,15,0.579,20,1.116,21,2.073,22,2.073,24,1.325,25,1.211,26,1.325,27,1.545,30,0.929,31,1.75,33,1.592,35,0.256,36,0.308,44,1.325,51,1.781,53,0.392,55,0.037,56,1.325,64,0.68,68,0.507,69,0.56,70,1.692,75,1.211,76,1.325,78,1.851,83,2.722,86,1.405,89,1.845,90,2.224,94,0.691,102,0.834,103,0.462,104,0.216,105,0.849,110,1.105,112,2.203,113,3.447,115,0.255,116,0.255,118,0.488,128,2.454,129,2.838,131,2.964,132,1.851,133,2.877,134,2.618,135,2.994,136,2.714,137,2.2,138,2.2,139,3.137,140,3.137,141,2.2,142,2.2,143,2.2,144,1.502,145,2.697,146,2.93,147,1.931,148,2.25,149,1.502,150,1.502,151,3.079,152,2.142,153,3.148,154,2.351,155,3.137,156,2.865,157,2.454,158,2.142,159,2.714,160,2.04,161,2.445,162,2.224,163,2.25,164,1.931,165,2.445,166,2.224,167,2.224,170,2.877,171,2.877,172,1.679,173,2.142,179,2.454,181,0.849,182,1.931,186,2.776,189,1.931,194,1.502,195,1.931,196,1.931,197,1.679,198,1.931,205,2.712,206,1.354,208,1.502,215,2.25,216,2.142,225,2.2,227,2.142,230,3.986,231,3.161,232,1.679,238,1.116,239,1.592,240,1.592,241,1.116,242,2.023,243,1.116,244,1.018,245,1.116,246,1.116,247,0.929,248,1.116,249,0.849,250,1.116,251,0.929,252,1.116,253,1.684,254,2.381,255,1.116,256,1.845,257,1.116,258,2.023,259,0.849,260,1.116,261,1.684,262,2.023,263,0.929,264,0.428,265,0.775,266,1.116,267,1.116,268,0.021,269,0.021,306,1.538,337,1.482,338,1.482,373,0.428,412,1.105,439,1.75,440,2.655,441,2.395,460,3.044,461,3.044,469,1.902,472,3.161,477,3.321,478,2.712,485,2.028,488,3.447,495,2.712,499,0.929,509,1.227,555,2.712,556,2.2,558,2.2,559,2.712,560,1.502,561,2.712,562,1.354,566,3.137,567,2.454,568,2.2,569,4.382,571,2.496,574,3.137,575,2.25,583,2.594,585,2.2,586,2.142,588,2.722,590,2.722,596,2.142,599,2.2,607,3.657,617,2.395,618,3.137,692,3.137,806,3.657,837,1.931,1014,2.712,1057,1.679,1062,3.218,1063,2.395,1064,2.395,1087,4.382,1088,4.382,1089,2.2,1090,4.408,1091,4.408,1092,4.408,1093,3.782,1094,4.408,1095,4.408,1096,4.806,1097,4.806,1098,4.806,1099,2.652,1100,3.782,1101,5.081,1102,2.652,1103,2.652,1104,4.382,1105,2.652,1106,2.652,1107,2.652,1108,2.2,1109,2.652,1110,1.902,1111,2.652,1112,3.782,1113,4.806,1114,4.806,1115,2.652,1116,2.652,1117,2.652,1118,2.652,1119,3.782,1120,2.652,1121,2.652,1122,2.652,1123,2.652,1124,3.782,1125,3.137,1126,3.987,1127,3.782,1128,3.782,1129,4.806,1130,3.782,1131,3.782,1132,3.782,1133,3.782,1134,3.782,1135,3.782,1136,3.782,1137,3.782,1138,3.137,1139,3.782,1140,3.782,1141,3.782,1142,3.782,1143,3.782,1144,3.782,1145,3.782,1146,2.652,1147,3.782,1148,3.782,1149,3.782,1150,3.782,1151,2.652,1152,4.806,1153,4.408,1154,2.652,1155,2.652,1156,5.081,1157,2.652,1158,2.652,1159,2.652,1160,4.408,1161,2.2,1162,2.652,1163,5.081,1164,2.652,1165,2.652,1166,2.652,1167,2.652,1168,2.652,1169,3.782,1170,5.437,1171,2.652,1172,2.652,1173,2.652,1174,2.652,1175,2.2,1176,4.408,1177,2.652,1178,1.902,1179,2.652,1180,2.652,1181,2.652,1182,2.652]],["title/interfaces/LoginRequest.html",[270,0.09,286,0.991]],["body/interfaces/LoginRequest.html",[3,0.266,4,0.266,9,0.187,14,0.417,15,0.549,23,0.739,35,0.187,36,0.318,37,0.889,38,1.14,39,1.04,42,0.947,50,0.398,53,0.504,55,0.037,57,0.318,59,0.611,61,1.406,64,0.499,68,0.588,69,0.79,73,0.91,74,0.447,77,0.553,80,0.901,84,1.262,86,0.81,87,0.611,94,0.561,95,0.887,96,1.486,99,1.254,101,1.14,102,0.995,103,0.471,104,0.226,115,0.556,116,0.266,117,1.006,118,0.471,120,0.81,235,1.249,264,0.988,268,0.022,269,0.022,270,0.166,271,1.14,272,0.739,273,0.971,274,1.527,275,1.973,276,0.947,277,1.498,278,1.498,279,1.498,280,1.064,281,1.87,282,1.498,283,0.611,284,1.064,285,1.064,286,1.445,287,1.446,288,1.762,289,0.887,290,1.32,291,1.32,292,1.181,293,1.031,294,1.14,295,1.14,296,0.971,297,0.971,298,0.971,299,1.139,300,0.971,301,0.971,302,0.971,303,1.064,304,1.513,305,1.498,306,0.887,307,0.81,308,0.649,309,1.498,310,1.498,311,1.064,312,1.064,313,1.498,314,1.064,315,1.064,316,1.064,317,1.498,318,1.064,319,1.445,320,1.064,321,1.064,322,1.064,323,1.064,324,1.064,325,1.498,326,1.064,327,1.064,328,1.064,329,1.064,330,1.064,331,1.119,332,0.743,333,1.064,334,1.064,335,1.498,336,1.064,337,1.04,338,1.04,339,1.064,340,1.064,341,2.381,342,2.057,343,1.064,344,1.064,345,1.733,346,1.367,347,1.064,348,1.064,349,1.064,350,1.064,351,1.718,352,1.498,353,2.158,354,1.609,355,1.064,356,1.064,357,1.064,358,1.064,359,1.064,360,1.064,361,1.064,362,1.064,363,1.064,364,1.064,365,1.064,366,1.064,367,1.064,368,1.907,369,0.971,370,1.498,371,0.971,372,1.064,373,0.447,374,1.498,375,1.064,376,1.064,377,1.064,378,1.064,379,1.064,380,1.064,381,1.064,382,1.064,383,1.064,384,1.582,385,1.064,386,1.064,387,0.887,388,1.064,389,0.971,390,1.498,391,1.064,392,1.064,393,1.064,394,1.064,395,1.064,396,1.064,397,1.064,398,1.733,399,1.064,400,1.064,401,1.064,402,1.064,403,1.064,404,1.064,405,1.733,406,0.81,407,1.064,408,1.064,409,1.064,410,1.064]],["title/interfaces/LoginResponse.html",[270,0.09,289,0.991]],["body/interfaces/LoginResponse.html",[3,0.263,4,0.263,9,0.185,14,0.416,15,0.548,23,0.731,35,0.185,36,0.316,37,0.886,38,1.132,39,1.032,42,0.94,50,0.394,53,0.504,55,0.037,57,0.42,59,0.605,61,1.403,64,0.493,68,0.587,69,0.79,73,0.911,74,0.443,77,0.547,80,0.896,84,1.262,86,0.802,87,0.605,94,0.557,95,0.878,96,1.484,99,1.249,101,1.132,102,0.99,103,0.469,104,0.224,115,0.555,116,0.263,117,1.005,118,0.469,120,0.802,235,1.24,264,0.987,268,0.022,269,0.022,270,0.166,271,1.132,272,0.731,273,0.961,274,1.532,275,1.983,276,0.94,277,1.487,278,1.487,279,1.487,280,1.053,281,1.869,282,1.487,283,0.605,284,1.053,285,1.053,286,1.24,287,1.444,288,1.562,289,1.24,290,1.561,291,1.561,292,1.257,293,1.096,294,1.132,295,1.132,296,0.961,297,0.961,298,0.961,299,1.134,300,0.961,301,0.961,302,0.961,303,1.053,304,1.511,305,1.487,306,0.878,307,0.802,308,0.646,309,1.487,310,1.487,311,1.053,312,1.053,313,1.487,314,1.053,315,1.053,316,1.053,317,1.487,318,1.053,319,1.437,320,1.053,321,1.053,322,1.053,323,1.053,324,1.053,325,1.487,326,1.053,327,1.053,328,1.053,329,1.053,330,1.053,331,1.118,332,0.74,333,1.053,334,1.053,335,1.487,336,1.053,337,1.032,338,1.032,339,1.053,340,1.053,341,2.378,342,2.05,343,1.053,344,1.053,345,1.724,346,1.357,347,1.053,348,1.053,349,1.053,350,1.053,351,1.71,352,1.487,353,2.152,354,1.604,355,1.053,356,1.053,357,1.053,358,1.053,359,1.053,360,1.053,361,1.053,362,1.053,363,1.053,364,1.053,365,1.053,366,1.053,367,1.053,368,1.904,369,0.961,370,1.487,371,0.961,372,1.053,373,0.443,374,1.487,375,1.053,376,1.053,377,1.053,378,1.053,379,1.053,380,1.053,381,1.053,382,1.053,383,1.053,384,1.574,385,1.053,386,1.053,387,0.878,388,1.053,389,0.961,390,1.487,391,1.053,392,1.053,393,1.053,394,1.053,395,1.053,396,1.053,397,1.053,398,1.724,399,1.053,400,1.053,401,1.053,402,1.053,403,1.053,404,1.053,405,1.724,406,0.802,407,1.053,408,1.053,409,1.053,410,1.053]],["title/interfaces/NavItem.html",[270,0.09,467,1.961]],["body/interfaces/NavItem.html",[0,0.64,3,0.322,4,0.322,9,0.227,11,1.636,12,1.749,13,2.817,14,0.424,15,0.577,16,1.554,21,1.177,22,1.177,24,1.177,25,1.424,26,1.177,27,1.559,31,1.554,33,1.414,35,0.227,36,0.363,42,0.815,48,1.289,50,0.717,53,0.5,55,0.037,57,0.45,63,1.414,64,0.898,66,1.289,68,0.586,69,0.702,73,0.908,75,1.075,78,1.177,80,0.888,82,2.271,83,1.902,89,1.289,90,1.414,94,0.717,102,0.74,103,0.545,104,0.274,105,1.075,107,1.554,109,1.289,110,0.981,112,1.915,115,0.322,116,0.322,118,0.51,249,1.075,259,1.424,268,0.025,269,0.025,270,0.098,272,0.895,292,0.981,293,1.06,299,1.1,304,1.289,308,0.717,331,0.994,332,0.483,337,0.895,338,1.186,373,0.718,411,2.408,412,1.458,413,2.785,414,2.785,415,3.69,416,3.69,417,3.69,418,2.785,419,2.785,420,2.126,421,2.785,422,2.785,423,2.785,424,2.785,425,2.785,426,2.785,427,2.785,428,2.785,429,2.785,430,2.785,431,2.785,433,2.785,435,2.825,436,1.597,439,2.059,440,2.458,441,3.364,443,2.785,444,3.69,445,3.191,446,4.987,448,3.008,449,3.69,450,2.804,452,3.69,453,1.873,454,2.785,458,2.408,460,2.126,461,2.126,462,4.139,463,2.126,465,2.408,466,2.785,467,3.364,468,2.408,469,4.155,470,3.281,471,2.408,472,3.578,473,4.155,474,2.785,475,4.406,476,2.785,477,2.825,478,2.408,479,2.785,481,4.139,482,4.711,483,2.408,484,2.408,485,1.915,488,2.408,491,2.785,492,1.554,493,2.785,494,2.126,495,2.408,496,2.519,497,2.817,498,2.817,499,1.559,500,4.406,501,3.191,502,3.69,503,2.059,504,3.69,505,3.69,506,3.69,507,2.271,508,3.191,509,2.309,510,2.408,511,2.785,512,1.075,513,2.408,514,2.408,515,2.785,516,2.785,517,2.785,518,2.785,519,2.785,520,2.785,521,2.785,522,2.817,523,2.785,524,3.69,525,2.785,526,2.785,527,2.785,528,2.785,529,1.902,530,3.69,531,2.785,532,2.785,533,2.785,534,3.008,535,4.406,536,2.785,537,2.785,538,2.785,539,2.785,540,2.785,541,2.785,542,2.785,543,1.289,544,2.408,545,2.785,546,2.785,547,2.785,548,3.69,549,2.785]],["title/interfaces/Paciente.html",[96,0.751,270,0.09]],["body/interfaces/Paciente.html",[3,0.26,4,0.26,9,0.183,14,0.416,15,0.546,23,0.721,35,0.183,36,0.313,37,0.883,38,1.121,39,1.023,42,0.931,50,0.389,53,0.503,55,0.037,57,0.463,59,0.597,61,1.399,64,0.487,68,0.586,69,0.788,73,0.918,74,0.437,77,0.54,80,0.89,84,1.26,86,0.791,87,0.597,94,0.552,95,0.866,96,1.487,99,1.243,101,1.121,102,0.983,103,0.466,104,0.221,115,0.553,116,0.26,117,1.004,118,0.466,120,0.791,235,1.228,264,0.985,268,0.022,269,0.022,270,0.165,271,1.121,272,0.721,273,0.948,274,1.531,275,1.98,276,0.931,277,1.473,278,1.473,279,1.473,280,1.039,281,1.868,282,1.473,283,0.597,284,1.039,285,1.039,286,1.228,287,1.44,288,1.552,289,0.866,290,1.554,291,1.554,292,1.172,293,1.022,294,1.496,295,1.496,296,1.7,297,1.7,298,1.7,299,1.129,300,0.948,301,0.948,302,0.948,303,1.039,304,1.509,305,1.473,306,0.866,307,0.791,308,0.641,309,1.473,310,1.473,311,1.039,312,1.039,313,1.473,314,1.039,315,1.039,316,1.039,317,1.473,318,1.039,319,1.427,320,1.039,321,1.039,322,1.039,323,1.039,324,1.039,325,1.473,326,1.039,327,1.039,328,1.039,329,1.039,330,1.039,331,1.116,332,0.736,333,1.039,334,1.039,335,1.473,336,1.039,337,1.023,338,1.023,339,1.039,340,1.039,341,2.375,342,2.041,343,1.039,344,1.039,345,1.711,346,1.345,347,1.039,348,1.039,349,1.039,350,1.039,351,1.7,352,1.473,353,2.145,354,1.598,355,1.039,356,1.039,357,1.039,358,1.039,359,1.039,360,1.039,361,1.039,362,1.039,363,1.039,364,1.039,365,1.039,366,1.039,367,1.039,368,1.9,369,0.948,370,1.473,371,0.948,372,1.039,373,0.437,374,1.473,375,1.039,376,1.039,377,1.039,378,1.039,379,1.039,380,1.039,381,1.039,382,1.039,383,1.039,384,1.562,385,1.039,386,1.039,387,0.866,388,1.039,389,0.948,390,1.473,391,1.039,392,1.039,393,1.039,394,1.039,395,1.039,396,1.039,397,1.039,398,1.711,399,1.039,400,1.039,401,1.039,402,1.039,403,1.039,404,1.039,405,1.711,406,0.791,407,1.039,408,1.039,409,1.039,410,1.039]],["title/components/ProfileModalComponent.html",[0,0.445,259,0.991]],["body/components/ProfileModalComponent.html",[0,0.481,1,0.591,2,1.031,3,0.162,4,0.162,5,2.035,6,1.549,7,0.71,8,0.71,9,0.114,11,1.241,12,1.46,14,0.394,15,0.447,17,1.243,18,1.895,20,0.71,21,1.887,22,1.887,24,0.941,25,1.49,26,0.941,27,1.173,30,0.591,35,0.258,36,0.219,37,0.96,38,1.361,40,1.209,44,0.941,47,2.119,48,1.465,50,0.695,51,1.912,53,0.463,54,1.465,55,0.037,56,1.556,57,0.394,58,1.337,59,0.979,60,1.926,61,1.011,64,0.799,66,1.787,68,0.545,69,0.674,70,1.465,72,0.955,73,0.695,74,0.616,75,0.86,76,0.941,77,0.762,78,1.556,80,1.04,82,1.371,84,0.886,87,0.919,89,1.031,94,0.785,95,1.421,103,0.447,104,0.137,105,0.54,106,0.78,107,0.78,109,0.647,110,0.785,112,1.6,115,0.162,116,0.162,117,0.672,118,0.162,128,2.266,129,2.708,130,2.4,131,2.818,132,2.085,134,2.555,135,1.709,136,2.626,144,2.514,145,2.818,146,2.897,147,2.543,148,2.708,149,1.895,150,1.895,151,2.514,152,2.514,153,2.821,154,2.305,156,2.803,157,1.709,158,3.004,159,2.626,160,1.549,161,2.054,162,2.72,163,2.543,164,2.266,165,2.054,166,2.305,167,2.305,168,2.821,169,2.514,176,1.709,179,2.266,180,2.127,181,1.49,182,2.266,183,2.514,184,2.811,185,3.154,186,2.708,187,2.4,189,2.955,194,1.895,195,1.709,196,1.709,198,1.709,199,3.184,200,2.119,206,1.709,208,1.895,211,2.119,213,2.811,215,2.543,216,2.514,217,2.4,227,2.514,232,2.119,234,2.119,236,2.4,238,0.71,239,1.131,240,1.131,241,0.71,242,1.607,243,0.71,244,0.647,245,0.71,246,0.71,247,0.591,248,0.71,249,0.54,250,0.71,251,0.591,252,0.71,253,0.591,254,0.71,255,0.71,256,0.647,257,0.71,258,1.607,259,1.221,260,1.409,261,0.591,262,0.71,263,0.591,264,0.272,265,0.493,266,0.71,267,0.71,268,0.015,269,0.015,274,0.652,287,0.409,288,1.221,290,1.361,291,1.361,292,0.372,294,1.218,295,1.574,299,0.919,308,0.67,331,1.042,332,0.243,351,1.173,354,0.785,373,0.856,406,1.456,412,1.297,420,2.417,435,2.637,436,1.547,439,1.243,440,2.708,441,3.233,448,1.521,450,1.928,453,1.131,463,1.068,470,1.895,485,1.6,492,0.78,494,3.496,499,1.632,507,0.861,512,0.86,543,1.031,553,2.776,554,1.701,560,1.895,562,2.127,563,2.4,567,2.266,571,2.514,575,2.266,578,2.119,579,2.4,583,2.266,586,1.895,588,1.895,589,3.184,590,1.895,596,1.895,617,1.701,622,1.926,641,0.71,659,1.409,660,1.068,662,1.701,668,2.737,685,1.068,686,3.165,687,1.399,689,2.161,691,1.068,722,1.701,729,2.4,736,1.895,791,1.209,793,1.926,812,1.701,813,2.4,814,2.119,815,2.4,818,3.184,819,1.895,822,2.737,824,1.926,825,1.926,827,2.737,831,1.068,832,2.417,834,2.119,835,2.811,836,1.701,837,1.371,839,2.737,840,2.737,843,3.339,844,1.926,846,3.184,847,1.701,848,1.926,853,1.926,855,3.738,856,3.184,857,1.926,858,1.371,859,1.926,861,3.572,862,1.926,863,1.701,864,1.926,865,1.926,866,1.926,871,1.701,875,1.926,876,2.119,877,1.926,881,1.209,884,2.949,885,1.926,887,2.949,892,1.068,893,1.926,894,1.068,895,1.068,900,1.068,901,2.639,902,1.926,903,1.926,904,2.4,906,1.926,907,1.926,910,1.209,913,1.209,924,1.926,926,1.209,927,1.209,928,1.209,929,1.399,930,1.399,931,1.068,932,1.399,933,1.068,934,1.399,935,1.209,937,1.399,942,2.737,991,1.399,992,1.399,993,2.4,994,1.068,995,1.068,997,1.209,998,1.209,1000,1.209,1001,1.209,1007,2.228,1010,1.399,1012,1.068,1017,1.209,1018,1.209,1019,1.209,1020,1.926,1021,1.209,1022,1.209,1023,1.209,1024,1.209,1025,1.209,1026,1.926,1027,1.209,1028,1.209,1038,3.165,1041,2.4,1042,2.4,1045,2.119,1050,2.4,1051,2.4,1052,2.776,1053,2.4,1057,2.119,1061,4.216,1062,3.154,1063,2.811,1064,3.154,1065,3.959,1072,2.776,1074,2.4,1081,2.776,1082,3.154,1083,2.776,1084,2.4,1178,2.4,1183,4.579,1184,1.068,1185,2.686,1186,2.776,1187,2.776,1188,3.347,1189,2.4,1190,3.184,1191,2.4,1192,2.4,1193,2.4,1194,2.4,1195,2.776,1196,3.339,1197,2.776,1198,4.439,1199,2.686,1200,2.686,1201,2.686,1202,2.776,1203,2.686,1204,3.347,1205,2.686,1206,2.776,1207,4.009,1208,3.165,1209,2.119,1210,3.347,1211,2.737,1212,3.165,1213,2.686,1214,2.228,1215,1.926,1216,2.686,1217,2.686,1218,2.686,1219,1.686,1220,2.686,1221,2.686,1222,2.686,1223,2.4,1224,1.686,1225,1.926,1226,1.686,1227,1.686,1228,1.686,1229,1.686,1230,1.686,1231,1.686,1232,1.686,1233,2.686,1234,2.776,1235,2.228,1236,2.686,1237,1.686,1238,2.686,1239,1.686,1240,1.686,1241,2.686,1242,1.926,1243,1.686,1244,1.399,1245,1.686,1246,2.686,1247,1.686,1248,1.686,1249,2.228,1250,1.399,1251,1.399,1252,1.686,1253,1.399,1254,1.399,1255,1.686,1256,1.686,1257,2.228,1258,1.399,1259,1.399,1260,1.399,1261,1.399,1262,1.686,1263,1.686,1264,1.686,1265,1.686,1266,1.686,1267,1.686,1268,1.686,1269,1.686,1270,2.686,1271,2.686,1272,1.686,1273,1.686,1274,2.686,1275,1.686,1276,1.686,1277,1.686,1278,1.686,1279,1.686,1280,1.399,1281,1.399,1282,1.399,1283,1.399,1284,1.399,1285,1.209,1286,1.686,1287,0.955,1288,1.209,1289,1.686,1290,1.686,1291,1.686,1292,1.686,1293,2.686,1294,1.686,1295,2.776,1296,1.399,1297,1.686,1298,1.686,1299,1.686,1300,1.686,1301,2.686,1302,2.686,1303,1.926,1304,1.686,1305,2.686,1306,1.686,1307,1.686,1308,1.686,1309,1.686,1310,1.686,1311,1.686,1312,1.686,1313,1.686,1314,1.686,1315,1.686,1316,1.686,1317,1.686]],["title/components/RegisterModalComponent.html",[0,0.445,261,1.085]],["body/components/RegisterModalComponent.html",[0,0.521,1,0.668,2,1.136,3,0.183,4,0.183,5,1.526,6,0.883,7,0.803,8,0.803,9,0.129,11,1.38,12,1.037,14,0.386,20,0.803,21,1.943,22,1.943,24,1.037,25,1.725,26,1.037,27,1.27,30,0.668,31,1.369,33,1.246,35,0.2,36,0.241,37,0.957,38,1.426,39,0.966,44,1.037,46,2.599,48,1.136,50,0.702,51,2.002,53,0.446,54,1.697,55,0.037,56,1.71,57,0.422,58,1.549,64,0.735,66,1.988,68,0.588,69,0.713,70,1.136,73,0.775,74,0.787,75,1.307,76,1.431,77,0.815,78,1.854,80,0.974,82,1.511,84,0.723,87,1.112,89,1.568,90,0.803,94,0.839,103,0.469,104,0.155,105,0.611,106,0.883,107,0.883,109,0.732,110,1.194,112,2.031,115,0.183,116,0.183,117,0.585,128,2.085,129,2.491,130,1.368,131,2.085,132,2.045,133,1.08,134,2.164,136,2.334,144,2.053,145,2.085,146,2.085,147,1.511,148,2.085,149,1.08,150,1.08,151,1.676,152,1.676,153,2.053,154,1.369,156,2.595,157,1.511,159,2.258,160,1.369,161,1.369,162,2.396,163,2.085,164,1.511,165,1.89,166,1.677,167,1.677,168,2.053,169,1.676,170,2.053,171,2.053,173,1.08,176,0.974,179,0.974,180,2.085,181,1.795,182,1.511,183,1.676,184,1.874,185,1.874,186,2.388,187,2.122,189,2.257,190,2.454,194,1.08,195,1.511,196,1.511,198,0.974,199,2.122,200,1.874,206,0.974,208,1.08,211,1.208,213,1.874,215,1.511,216,2.053,217,1.368,224,1.368,227,1.676,232,1.208,234,1.208,238,0.803,239,1.246,240,1.246,241,0.803,242,1.719,243,0.803,244,0.732,245,0.803,246,0.803,247,0.668,248,0.803,249,0.611,250,0.803,251,0.668,252,0.803,253,0.668,254,0.803,255,0.803,256,0.732,257,0.803,258,1.719,259,0.611,260,0.803,261,1.431,262,2.123,263,0.668,264,0.308,265,0.557,266,0.803,267,0.803,268,0.017,269,0.017,274,1.073,287,1.482,288,1.497,290,1.367,291,1.367,292,0.42,294,0.865,295,1.474,299,1.076,304,0.718,308,0.587,319,1.415,331,1.019,332,0.274,338,0.508,354,0.865,373,0.905,387,0.611,406,1.426,412,1.474,435,2.763,436,1.562,439,1.369,440,2.644,448,1.08,450,1.89,470,1.08,485,2.128,492,0.883,499,1.815,503,1.89,512,1.16,534,2.053,543,0.732,554,1.874,560,1.08,562,1.85,563,1.368,567,1.511,571,1.08,575,1.511,578,1.208,579,1.368,583,1.511,586,1.08,588,1.08,590,2.053,596,1.08,622,2.122,641,0.803,660,1.874,662,2.586,663,2.599,668,2.856,689,1.676,706,1.368,722,1.874,736,2.503,745,1.582,747,2.122,748,2.122,749,2.122,750,2.122,751,1.582,752,1.368,753,1.368,754,2.122,755,1.368,756,1.368,757,2.929,758,2.122,759,1.368,760,1.368,761,2.122,762,2.599,763,2.122,764,1.368,765,2.122,768,2.599,773,3.17,774,3.388,791,1.368,812,1.874,813,2.599,814,2.295,815,2.599,818,3.17,819,1.08,822,2.929,824,2.122,825,2.122,826,2.454,829,3.388,830,2.454,831,1.208,832,2.586,834,1.874,835,2.962,836,1.874,839,3.354,840,2.929,843,3.976,844,3.354,846,2.929,847,1.874,848,2.929,853,1.368,855,3.617,856,2.599,857,1.368,858,0.974,859,2.122,861,3.795,862,2.599,863,2.586,864,2.122,865,2.122,866,2.122,871,1.874,875,2.122,876,2.295,877,2.929,879,2.454,881,2.599,882,2.454,884,3.194,885,2.122,887,2.295,892,1.208,893,2.929,894,1.208,895,1.208,896,3.006,897,1.582,900,1.208,901,3.194,902,2.122,903,2.122,904,2.599,905,1.582,906,1.368,907,2.599,909,1.582,910,1.368,913,2.122,918,1.582,919,1.582,921,1.582,924,2.122,926,1.368,927,1.368,928,1.368,931,1.208,933,2.962,935,3.795,942,2.929,954,1.582,955,2.454,956,1.582,957,1.582,958,3.006,959,3.667,960,1.582,961,1.582,962,3.006,963,2.599,964,3.667,965,1.582,966,1.582,967,1.582,968,1.582,969,1.582,993,3.17,994,1.208,995,1.208,997,1.368,998,1.368,999,1.582,1000,1.368,1001,1.368,1012,1.208,1015,1.582,1017,1.368,1018,1.368,1019,1.368,1020,2.122,1021,1.368,1022,1.368,1023,1.368,1024,1.368,1025,1.368,1026,1.368,1027,1.368,1028,1.368,1039,3.388,1040,3.388,1041,2.929,1042,2.929,1045,1.874,1050,2.122,1057,1.874,1061,3.714,1062,2.799,1063,1.874,1064,1.874,1065,3.354,1066,1.582,1067,1.582,1068,1.582,1069,1.582,1070,1.582,1071,1.582,1074,1.368,1082,2.295,1084,1.368,1104,4.047,1110,4.13,1125,3.388,1126,1.582,1161,1.582,1175,1.582,1178,1.368,1184,1.208,1186,1.582,1187,1.582,1189,1.368,1190,2.122,1191,1.368,1192,1.368,1193,1.368,1194,1.368,1195,1.582,1196,3.354,1197,2.454,1202,2.454,1206,2.454,1207,3.388,1208,2.454,1211,2.929,1212,3.388,1215,2.122,1223,2.599,1225,2.122,1234,1.582,1235,2.454,1242,2.122,1244,1.582,1249,1.582,1250,1.582,1251,1.582,1253,1.582,1254,1.582,1257,3.667,1258,1.582,1259,1.582,1260,1.582,1261,1.582,1280,2.454,1281,2.454,1282,2.454,1283,2.454,1284,2.454,1285,2.122,1287,1.08,1288,1.368,1295,1.582,1296,1.582,1303,1.368,1318,4.777,1319,3.006,1320,2.454,1321,3.625,1322,4.084,1323,2.454,1324,1.582,1325,1.908,1326,1.908,1327,1.908,1328,1.908,1329,1.908,1330,1.908,1331,1.908,1332,2.959,1333,2.959,1334,1.908,1335,1.908,1336,1.582,1337,1.908,1338,1.908,1339,1.908,1340,1.908,1341,1.908,1342,1.908,1343,1.908,1344,1.908,1345,1.908,1346,1.908,1347,1.908,1348,1.908,1349,1.908,1350,1.908,1351,1.908,1352,1.208,1353,1.908,1354,1.908,1355,1.908,1356,2.959,1357,2.959,1358,1.908,1359,1.368,1360,1.908,1361,1.908,1362,1.908,1363,2.959,1364,3.625,1365,3.625,1366,3.625,1367,1.908,1368,4.084,1369,4.677,1370,4.084,1371,4.084,1372,4.084,1373,2.959,1374,2.959,1375,2.959,1376,2.454,1377,1.908,1378,1.908,1379,1.908,1380,1.908,1381,1.908]],["title/interfaces/Rol.html",[270,0.09,293,0.618]],["body/interfaces/Rol.html",[3,0.266,4,0.266,9,0.187,14,0.417,15,0.549,23,0.739,35,0.187,36,0.318,37,0.889,38,1.14,39,1.04,42,0.947,50,0.398,53,0.504,55,0.037,57,0.318,59,0.611,61,1.406,64,0.499,68,0.588,69,0.79,73,0.907,74,0.447,77,0.553,80,0.901,84,1.262,86,0.81,87,0.611,94,0.561,95,0.887,96,1.486,99,1.254,101,1.14,102,0.995,103,0.471,104,0.226,115,0.556,116,0.266,117,1.006,118,0.471,120,0.81,235,1.249,264,0.988,268,0.022,269,0.022,270,0.166,271,1.14,272,0.739,273,0.971,274,1.533,275,1.985,276,0.947,277,1.498,278,1.498,279,1.498,280,1.064,281,1.87,282,1.498,283,0.611,284,1.064,285,1.064,286,1.249,287,1.406,288,1.569,289,0.887,290,1.32,291,1.32,292,1.181,293,1.069,294,1.14,295,1.14,296,0.971,297,0.971,298,0.971,299,1.239,300,0.971,301,0.971,302,0.971,303,1.064,304,1.513,305,1.498,306,0.887,307,0.81,308,0.649,309,1.498,310,1.498,311,1.064,312,1.064,313,1.498,314,1.064,315,1.064,316,1.064,317,1.498,318,1.064,319,1.445,320,1.064,321,1.064,322,1.064,323,1.064,324,1.064,325,1.498,326,1.064,327,1.064,328,1.064,329,1.064,330,1.064,331,1.119,332,0.743,333,1.064,334,1.064,335,1.498,336,1.064,337,1.04,338,1.04,339,1.064,340,1.064,341,2.381,342,2.057,343,1.064,344,1.064,345,1.733,346,1.367,347,1.064,348,1.064,349,1.064,350,1.064,351,1.718,352,1.498,353,2.158,354,1.609,355,1.064,356,1.064,357,1.064,358,1.064,359,1.064,360,1.064,361,1.064,362,1.064,363,1.064,364,1.064,365,1.064,366,1.064,367,1.064,368,1.907,369,0.971,370,1.498,371,0.971,372,1.064,373,0.447,374,1.498,375,1.064,376,1.064,377,1.064,378,1.064,379,1.064,380,1.064,381,1.064,382,1.064,383,1.064,384,1.582,385,1.064,386,1.064,387,0.887,388,1.064,389,0.971,390,1.498,391,1.064,392,1.064,393,1.064,394,1.064,395,1.064,396,1.064,397,1.064,398,1.733,399,1.064,400,1.064,401,1.064,402,1.064,403,1.064,404,1.064,405,1.733,406,0.81,407,1.064,408,1.064,409,1.064,410,1.064]],["title/interfaces/Rol-1.html",[181,0.83,270,0.075,293,0.517]],["body/interfaces/Rol-1.html",[3,0.266,4,0.266,9,0.187,14,0.417,15,0.549,23,0.739,35,0.187,36,0.318,37,0.889,38,1.14,39,1.04,42,0.947,50,0.398,53,0.504,55,0.037,57,0.318,59,0.611,61,1.406,64,0.499,68,0.588,69,0.79,73,0.907,74,0.447,77,0.553,80,0.901,84,1.262,86,0.81,87,0.611,94,0.561,95,0.887,96,1.486,99,1.254,101,1.14,102,0.995,103,0.471,104,0.226,115,0.556,116,0.266,117,1.006,118,0.471,120,0.81,235,1.249,264,0.988,268,0.022,269,0.022,270,0.166,271,1.14,272,0.739,273,0.971,274,1.533,275,1.985,276,0.947,277,1.498,278,1.498,279,1.498,280,1.064,281,1.87,282,1.498,283,0.611,284,1.064,285,1.064,286,1.249,287,1.406,288,1.569,289,0.887,290,1.32,291,1.32,292,1.181,293,1.069,294,1.14,295,1.14,296,0.971,297,0.971,298,0.971,299,1.239,300,0.971,301,0.971,302,0.971,303,1.064,304,1.513,305,1.498,306,0.887,307,0.81,308,0.649,309,1.498,310,1.498,311,1.064,312,1.064,313,1.498,314,1.064,315,1.064,316,1.064,317,1.498,318,1.064,319,1.445,320,1.064,321,1.064,322,1.064,323,1.064,324,1.064,325,1.498,326,1.064,327,1.064,328,1.064,329,1.064,330,1.064,331,1.119,332,0.743,333,1.064,334,1.064,335,1.498,336,1.064,337,1.04,338,1.04,339,1.064,340,1.064,341,2.381,342,2.057,343,1.064,344,1.064,345,1.733,346,1.367,347,1.064,348,1.064,349,1.064,350,1.064,351,1.718,352,1.498,353,2.158,354,1.609,355,1.064,356,1.064,357,1.064,358,1.064,359,1.064,360,1.064,361,1.064,362,1.064,363,1.064,364,1.064,365,1.064,366,1.064,367,1.064,368,1.907,369,0.971,370,1.498,371,0.971,372,1.064,373,0.447,374,1.498,375,1.064,376,1.064,377,1.064,378,1.064,379,1.064,380,1.064,381,1.064,382,1.064,383,1.064,384,1.582,385,1.064,386,1.064,387,0.887,388,1.064,389,0.971,390,1.498,391,1.064,392,1.064,393,1.064,394,1.064,395,1.064,396,1.064,397,1.064,398,1.733,399,1.064,400,1.064,401,1.064,402,1.064,403,1.064,404,1.064,405,1.733,406,0.81,407,1.064,408,1.064,409,1.064,410,1.064]],["title/guards/RoleGuard.html",[1382,2.221,1383,2.221]],["body/guards/RoleGuard.html",[3,0.394,4,0.394,9,0.277,11,1.525,14,0.387,15,0.564,17,1.898,23,1.093,25,1.313,35,0.277,37,0.816,44,1.772,46,3.931,48,1.941,49,3.402,50,0.861,51,1.772,53,0.412,54,1.941,55,0.036,56,1.772,57,0.412,58,1.772,64,0.91,68,0.582,69,0.643,78,2.06,94,0.727,103,0.55,104,0.334,107,1.898,109,1.574,115,0.394,116,0.394,117,0.816,118,0.394,268,0.028,269,0.028,276,1.227,283,0.904,292,1.208,293,0.818,307,1.199,308,0.727,331,1.03,373,0.885,412,1.602,420,2.597,435,3.496,445,3.626,450,2.77,453,2.128,463,2.597,473,3.931,484,2.941,485,2.104,501,4.292,507,2.094,508,3.931,510,3.626,512,1.618,544,3.626,617,3.202,621,2.941,641,2.128,659,2.128,685,2.597,689,3.104,847,2.597,863,3.202,884,2.597,923,3.402,950,4.194,994,2.597,1012,2.597,1383,3.626,1384,4.101,1385,3.402,1386,5.056,1387,5.056,1388,5.056,1389,5.056,1390,5.722,1391,4.101,1392,5.056,1393,5.722,1394,5.722,1395,5.722,1396,4.101,1397,5.056,1398,5.056,1399,3.626,1400,5.722,1401,5.056,1402,4.101,1403,4.101,1404,4.101,1405,5.056,1406,4.101,1407,4.101,1408,4.101,1409,4.101]],["title/interfaces/SegmentoHorario.html",[99,0.751,270,0.09]],["body/interfaces/SegmentoHorario.html",[3,0.262,4,0.262,9,0.185,14,0.416,15,0.547,23,0.729,35,0.185,36,0.315,37,0.885,38,1.129,39,1.03,42,0.938,50,0.393,53,0.503,55,0.037,57,0.435,59,0.603,61,1.402,64,0.492,68,0.587,69,0.789,73,0.911,74,0.441,77,0.545,80,0.894,84,1.268,86,0.799,87,0.988,94,0.556,95,0.875,96,1.483,99,1.295,101,1.129,102,0.988,103,0.468,104,0.223,115,0.555,116,0.262,117,1.004,118,0.468,120,0.799,235,1.237,264,0.986,268,0.022,269,0.022,270,0.165,271,1.129,272,0.729,273,0.958,274,1.532,275,1.982,276,0.938,277,1.483,278,1.483,279,1.483,280,1.049,281,1.869,282,1.483,283,0.603,284,1.049,285,1.049,286,1.237,287,1.402,288,1.559,289,0.875,290,1.31,291,1.31,292,1.176,293,1.026,294,1.129,295,1.129,296,0.958,297,0.958,298,0.958,299,1.235,300,1.707,301,1.707,302,1.707,303,1.049,304,1.511,305,1.483,306,0.875,307,0.799,308,0.645,309,1.483,310,1.483,311,1.049,312,1.049,313,1.483,314,1.049,315,1.049,316,1.049,317,1.483,318,1.049,319,1.435,320,1.049,321,1.049,322,1.049,323,1.049,324,1.049,325,1.483,326,1.049,327,1.049,328,1.049,329,1.049,330,1.049,331,1.117,332,0.739,333,1.049,334,1.049,335,1.483,336,1.049,337,1.03,338,1.03,339,1.049,340,1.049,341,2.377,342,2.048,343,1.049,344,1.049,345,1.721,346,1.354,347,1.049,348,1.049,349,1.049,350,1.049,351,1.707,352,1.483,353,2.15,354,1.603,355,1.049,356,1.049,357,1.049,358,1.049,359,1.049,360,1.049,361,1.049,362,1.049,363,1.049,364,1.049,365,1.049,366,1.049,367,1.049,368,1.903,369,0.958,370,1.483,371,0.958,372,1.049,373,0.441,374,1.483,375,1.049,376,1.049,377,1.049,378,1.049,379,1.049,380,1.049,381,1.049,382,1.049,383,1.049,384,1.571,385,1.049,386,1.049,387,0.875,388,1.049,389,0.958,390,1.483,391,1.049,392,1.049,393,1.049,394,1.049,395,1.049,396,1.049,397,1.049,398,1.721,399,1.049,400,1.049,401,1.049,402,1.049,403,1.049,404,1.049,405,1.721,406,0.799,407,1.049,408,1.049,409,1.049,410,1.049]],["title/components/SegmentoModalComponent.html",[0,0.445,263,1.085]],["body/components/SegmentoModalComponent.html",[0,0.659,1,0.997,2,1.526,3,0.273,4,0.273,5,1.198,7,1.198,8,1.198,9,0.192,11,1.441,12,1.738,14,0.414,15,0.476,17,1.839,18,2.594,20,1.198,21,2.097,22,2.097,24,1.393,25,1.587,26,1.393,27,1.605,30,0.997,33,1.673,35,0.192,36,0.324,39,0.758,44,1.393,47,3.14,48,1.092,50,0.409,51,2.111,53,0.461,54,1.526,55,0.037,56,1.738,57,0.475,58,1.393,61,0.965,66,2.075,68,0.594,69,0.663,70,1.903,72,2.251,73,0.409,74,0.872,75,1.272,76,1.393,78,1.828,84,1.147,87,0.876,89,1.526,90,1.928,94,0.777,99,1.204,101,1.339,102,1.01,103,0.476,104,0.232,105,0.911,106,1.317,109,1.092,110,1.449,112,1.758,113,2.851,115,0.273,116,0.273,118,0.44,120,0.832,132,1.393,180,2.532,181,1.466,235,1.466,238,1.198,239,1.673,240,1.673,241,1.198,242,2.088,243,1.198,244,1.092,245,1.198,246,1.198,247,0.997,248,1.198,249,0.911,250,1.198,251,0.997,252,1.198,253,0.997,254,1.198,255,1.198,256,1.092,257,1.198,258,2.088,259,0.911,260,1.198,261,0.997,262,1.198,263,1.738,264,1.025,265,0.832,266,1.198,267,1.198,268,0.022,269,0.022,274,0.691,299,1.223,300,0.997,301,0.997,302,0.997,331,0.512,332,0.798,337,1.322,368,1.587,373,0.842,412,1.162,439,1.839,440,2.619,485,1.526,499,1.983,507,2.532,529,3.061,554,2.517,555,2.851,641,1.198,659,1.928,668,3.061,691,1.802,736,3.142,814,2.901,827,3.556,831,1.802,832,3.14,834,2.517,835,3.304,836,2.517,841,4.113,858,2.029,871,2.517,876,2.517,887,2.901,892,1.802,900,1.802,901,2.517,931,1.802,933,2.517,986,2.36,987,1.802,995,1.802,1045,2.517,1048,3.297,1051,2.851,1053,3.556,1082,2.901,1138,3.297,1184,1.802,1196,3.556,1209,2.517,1211,3.556,1214,3.297,1215,2.851,1223,3.979,1225,3.876,1242,3.556,1285,3.556,1287,1.611,1288,2.041,1303,2.851,1319,3.297,1320,3.297,1323,3.297,1324,2.36,1336,2.36,1352,2.517,1410,5.026,1411,5.026,1412,3.975,1413,5.548,1414,4.581,1415,3.975,1416,4.959,1417,5.217,1418,5.405,1419,2.846,1420,3.975,1421,5.217,1422,2.846,1423,2.846,1424,2.846,1425,5.405,1426,2.846,1427,2.846,1428,3.975,1429,2.846,1430,2.846,1431,2.846,1432,3.975,1433,2.846,1434,4.581,1435,4.581,1436,5.217,1437,2.846,1438,5.66,1439,2.846,1440,2.846,1441,2.846,1442,4.581,1443,2.846,1444,3.975,1445,2.846,1446,2.846,1447,5.405,1448,2.846,1449,2.846,1450,2.846,1451,2.846,1452,2.846,1453,2.846,1454,2.846,1455,2.846,1456,2.846,1457,2.846,1458,2.846,1459,2.846,1460,2.846,1461,2.846,1462,2.846,1463,2.846,1464,2.846,1465,2.846,1466,2.846,1467,2.846,1468,2.846,1469,2.846,1470,2.846,1471,2.846,1472,2.846,1473,2.846,1474,2.846,1475,2.846,1476,2.846,1477,3.975,1478,3.975,1479,3.975,1480,3.975,1481,3.975,1482,3.975,1483,3.975,1484,3.975,1485,3.975,1486,3.975,1487,3.975,1488,2.846,1489,3.975,1490,3.975,1491,3.975,1492,2.846,1493,3.975,1494,2.846,1495,2.846]],["title/interfaces/Toast.html",[265,0.905,270,0.09]],["body/interfaces/Toast.html",[3,0.595,4,0.402,9,0.283,11,1.536,14,0.412,15,0.553,16,1.935,23,1.115,35,0.283,36,0.417,37,0.983,53,0.417,55,0.037,57,0.505,59,0.922,63,1.761,68,0.568,73,0.828,74,0.675,77,1.25,103,0.491,104,0.341,110,1.222,115,0.491,116,0.402,117,0.826,118,0.491,265,1.83,268,0.029,269,0.029,270,0.121,272,1.115,276,1.242,281,1.222,283,0.922,307,1.222,308,0.601,332,0.601,412,1.727,436,1.339,453,2.328,496,3.131,497,3.241,498,3.241,499,1.938,503,2.666,509,1.935,512,1.638,522,2.649,543,2.338,641,1.761,659,1.761,718,3,769,2.369,819,3.405,837,2.135,858,2.823,987,3.241,1209,2.649,1287,2.369,1352,2.649,1359,3,1399,3,1496,3,1497,3.469,1498,3,1499,3.469,1500,3.469,1501,3.469,1502,3.469,1503,3.469,1504,3.469,1505,3.469,1506,3.469,1507,3.469,1508,3.469,1509,3.469,1510,3.469,1511,3.469,1512,4.245,1513,3.469,1514,3.469,1515,3.469]],["title/components/ToastComponent.html",[0,0.445,30,1.085]],["body/components/ToastComponent.html",[0,0.728,1,1.211,2,1.74,3,0.516,4,0.332,5,1.909,6,2.342,7,1.455,8,1.455,9,0.234,11,1.487,12,2.006,14,0.342,15,0.56,16,2.098,17,2.098,19,4.198,20,1.455,21,2.159,22,2.159,24,1.589,25,1.451,26,1.589,27,1.773,30,1.883,35,0.363,36,0.37,37,0.817,44,1.589,45,4.456,48,1.942,51,1.883,53,0.37,54,1.327,55,0.037,56,1.773,57,0.413,58,1.211,59,1.23,63,1.909,66,2.141,67,3.761,68,0.435,69,0.439,70,1.327,72,1.957,74,0.732,75,1.106,76,1.211,90,1.909,103,0.516,104,0.282,105,1.106,110,1.325,115,0.332,116,0.332,117,0.558,118,0.435,120,1.01,121,2.867,122,2.867,123,2.867,124,2.867,132,1.773,134,2.342,135,3.057,136,2.342,154,2.342,156,2.836,159,2.771,160,2.342,161,2.342,162,2.342,165,2.342,166,2.342,167,2.342,176,2.583,181,1.62,188,3.205,206,2.583,213,3.626,227,3.242,238,1.455,239,1.909,240,1.909,241,1.455,242,2.262,243,1.455,244,1.327,245,1.455,246,1.455,247,1.211,248,1.455,249,1.106,250,1.455,251,1.211,252,1.455,253,1.211,254,1.455,255,1.455,256,1.327,257,1.455,258,2.262,259,1.106,260,1.455,261,1.211,262,1.455,263,1.211,264,0.558,265,1.842,266,1.455,267,1.455,268,0.025,269,0.025,283,0.762,308,0.728,412,1.673,436,1.867,453,1.909,492,1.599,509,2.342,512,1.62,543,1.942,560,2.866,561,3.629,562,2.583,567,2.583,575,2.583,659,1.909,769,3.042,837,1.764,1189,3.629,1190,4.106,1191,3.629,1192,3.629,1193,3.629,1194,3.629,1498,2.478,1516,2.867,1517,5.06,1518,5.06,1519,5.06,1520,5.06,1521,5.725,1522,3.456,1523,4.534,1524,3.456,1525,5.725,1526,3.456,1527,4.534,1528,3.456,1529,3.456,1530,3.456,1531,4.534,1532,3.456,1533,3.456,1534,3.456]],["title/injectables/ToastService.html",[276,0.751,436,0.991]],["body/injectables/ToastService.html",[3,0.594,4,0.383,9,0.269,11,1.554,14,0.408,15,0.544,16,2.299,23,1.063,35,0.269,36,0.405,37,0.973,44,1.741,51,1.985,53,0.462,54,1.53,55,0.037,56,1.397,57,0.491,58,1.397,59,1.095,63,1.678,68,0.585,69,0.631,70,1.907,73,0.815,74,0.643,75,1.732,76,1.897,77,1.247,103,0.477,104,0.325,110,1.452,115,0.477,116,0.383,117,0.802,118,0.544,265,1.85,268,0.028,269,0.028,270,0.116,276,1.206,281,1.452,283,0.879,307,1.165,308,0.778,332,0.714,412,1.762,436,1.59,453,2.454,496,2.813,497,2.524,498,2.524,499,1.897,503,2.622,509,2.299,512,1.732,522,3.146,543,2.314,641,1.678,659,1.678,718,2.859,769,2.813,819,3.208,837,2.035,858,2.763,987,2.524,1209,3.146,1287,2.813,1352,3.146,1359,2.859,1399,3.563,1496,2.859,1497,3.306,1498,2.859,1499,4.121,1500,4.121,1501,4.489,1502,4.121,1503,4.121,1504,4.121,1505,4.121,1506,3.306,1507,3.306,1508,3.306,1509,3.306,1510,4.121,1511,3.306,1512,4.121,1513,3.306,1514,3.306,1515,4.699,1535,3.306,1536,4.968,1537,3.986,1538,3.986,1539,3.986,1540,3.986]],["title/coverage.html",[1541,3.495]],["body/coverage.html",[0,0.905,1,1.523,9,0.294,10,3.604,30,1.523,50,0.625,55,0.036,57,0.354,80,0.867,84,0.867,96,1.055,99,1.055,132,2.184,244,1.668,247,1.523,249,1.391,251,1.523,253,1.523,256,1.668,259,1.391,261,1.523,263,1.523,265,1.27,268,0.029,269,0.029,270,0.184,271,1.27,273,2.196,276,1.271,286,1.391,289,1.391,293,1.045,332,0.625,411,3.756,436,1.391,467,2.752,494,2.752,583,3.161,614,3.116,615,4.344,811,3.604,1087,3.604,1088,3.604,1089,3.604,1108,3.604,1110,3.116,1183,3.604,1184,3.696,1318,3.604,1376,3.604,1382,3.116,1383,3.116,1385,3.604,1410,3.604,1411,3.604,1496,3.756,1516,3.604,1541,3.604,1542,4.345,1543,4.345,1544,4.345,1545,4.345,1546,5.238,1547,5.238,1548,4.345,1549,4.345,1550,4.345,1551,3.604,1552,4.345,1553,3.604,1554,4.345,1555,5.238,1556,4.345,1557,4.345,1558,4.345,1559,4.345,1560,4.345,1561,4.345,1562,4.345,1563,4.345,1564,5.238,1565,4.345,1566,4.345,1567,5.238,1568,4.345,1569,4.345,1570,4.345,1571,4.345,1572,5.837,1573,5.238,1574,4.345,1575,4.345,1576,4.345,1577,4.345,1578,4.345]],["title/dependencies.html",[1579,2.15,1580,3.086]],["body/dependencies.html",[9,0.322,55,0.036,104,0.388,105,1.525,106,2.205,107,2.205,268,0.031,269,0.031,283,1.05,629,3.952,632,3.952,634,3.952,636,3.952,638,3.952,894,3.017,895,3.017,1580,3.952,1581,4.764,1582,6.289,1583,4.764,1584,5.53,1585,5.53,1586,4.764,1587,4.764,1588,4.764,1589,6.121,1590,4.764,1591,4.764,1592,4.764,1593,4.764,1594,4.764,1595,4.764,1596,4.764,1597,4.764,1598,4.764,1599,4.764]],["title/index.html",[35,0.175,1600,2.592,1601,2.592]],["body/index.html",[14,0.382,53,0.403,55,0.032,61,1.2,118,0.475,268,0.032,269,0.032,287,1.2,292,1.246,293,0.987,406,1.445,477,2.801,512,1.583,621,3.547,1014,3.547,1602,4.946,1603,4.946,1604,4.946,1605,4.946,1606,5.651,1607,4.946,1608,4.946]],["title/modules.html",[1609,3.495]],["body/modules.html",[55,0.032,268,0.032,269,0.032,1609,4.179]],["title/overview.html",[1610,3.495]],["body/overview.html",[2,1.92,55,0.032,181,1.601,268,0.032,269,0.032,272,1.333,534,2.833,963,3.588,1382,3.588,1535,4.15,1610,4.15,1611,5.003]],["title/properties.html",[36,0.303,1579,2.15]],["body/properties.html",[36,0.41,55,0.033,268,0.032,269,0.032,1612,5.025,1613,5.025]],["title/miscellaneous/variables.html",[1614,2.15,1615,3.086]],["body/miscellaneous/variables.html",[14,0.334,15,0.474,16,2.285,35,0.334,55,0.035,57,0.402,75,1.58,76,1.73,268,0.032,269,0.032,671,4.096,812,3.127,1551,4.096,1553,4.683,1614,4.096,1615,4.096,1616,4.938,1617,4.938,1618,4.938,1619,4.938]]],"invertedIndex":[["",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":132,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["0')}:${date.getminutes().tostring().padstart(2",{"_index":1461,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["0')}:00.000z",{"_index":1462,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["0')}t${date.gethours().tostring().padstart(2",{"_index":1460,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["0.0.0",{"_index":1613,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":200,"title":{},"body":{"components/AppComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.14.10",{"_index":1599,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":1074,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.2s",{"_index":171,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.3s",{"_index":1191,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["0.4rem",{"_index":603,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.5",{"_index":1187,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.5rem",{"_index":164,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.75rem",{"_index":182,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.875rem",{"_index":578,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.8rem",{"_index":611,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0/10",{"_index":1573,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":1572,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":1571,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":1574,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":1575,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":1033,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["1",{"_index":181,"title":{"interfaces/Rol-1.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g",{"_index":764,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1).touppercase",{"_index":956,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1.1.26",{"_index":1588,"title":{},"body":{"dependencies.html":{}}}],["1.1rem",{"_index":604,"title":{},"body":{"components/DashboardComponent.html":{}}}],["1.25rem",{"_index":1161,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1.2rem",{"_index":576,"title":{},"body":{"components/DashboardComponent.html":{}}}],["1.4.9",{"_index":1591,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":1181,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1.5rem",{"_index":189,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1/1",{"_index":1554,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":965,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["100",{"_index":583,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"coverage.html":{}}}],["1000",{"_index":563,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["100vh",{"_index":556,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["1024px",{"_index":587,"title":{},"body":{"components/DashboardComponent.html":{}}}],["10px",{"_index":226,"title":{},"body":{"components/AppComponent.html":{}}}],["11",{"_index":963,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{},"overview.html":{}}}],["11/11",{"_index":1550,"title":{},"body":{"coverage.html":{}}}],["12",{"_index":1611,"title":{},"body":{"overview.html":{}}}],["12/14",{"_index":1566,"title":{},"body":{"coverage.html":{}}}],["1200px",{"_index":1150,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["12345678",{"_index":941,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["13/15",{"_index":1549,"title":{},"body":{"coverage.html":{}}}],["13538951k",{"_index":1605,"title":{},"body":{"index.html":{}}}],["14/15",{"_index":1561,"title":{},"body":{"coverage.html":{}}}],["1400px",{"_index":564,"title":{},"body":{"components/DashboardComponent.html":{}}}],["150px",{"_index":609,"title":{},"body":{"components/DashboardComponent.html":{}}}],["153",{"_index":1070,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["16/17",{"_index":1563,"title":{},"body":{"coverage.html":{}}}],["18.2.0",{"_index":1582,"title":{},"body":{"dependencies.html":{}}}],["19.0.0",{"_index":1592,"title":{},"body":{"dependencies.html":{}}}],["1900",{"_index":948,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["196450963",{"_index":1608,"title":{},"body":{"index.html":{}}}],["1fr",{"_index":1064,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1px",{"_index":183,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1rem",{"_index":165,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["2",{"_index":534,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{},"overview.html":{}}}],["2.3.0",{"_index":1597,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":1179,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["2/2",{"_index":1557,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":1569,"title":{},"body":{"coverage.html":{}}}],["20/21",{"_index":1570,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":1517,"title":{},"body":{"components/ToastComponent.html":{}}}],["2024",{"_index":1147,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["20px",{"_index":217,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["225",{"_index":1071,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["24/26",{"_index":1547,"title":{},"body":{"coverage.html":{}}}],["26/27",{"_index":1560,"title":{},"body":{"coverage.html":{}}}],["2c5282",{"_index":566,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["2d3748",{"_index":157,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["2f855a",{"_index":1079,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["2px",{"_index":197,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{}}}],["2rem",{"_index":135,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/ToastComponent.html":{}}}],["3",{"_index":1359,"title":{},"body":{"components/RegisterModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["3.5rem",{"_index":606,"title":{},"body":{"components/DashboardComponent.html":{}}}],["3/3",{"_index":1576,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":1447,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["3000",{"_index":1513,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["31/33",{"_index":1556,"title":{},"body":{"coverage.html":{}}}],["3182ce",{"_index":173,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["35px",{"_index":209,"title":{},"body":{"components/AppComponent.html":{}}}],["38a169",{"_index":191,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["3px",{"_index":224,"title":{},"body":{"components/AppComponent.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["3rem",{"_index":1153,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["4",{"_index":1368,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["400px",{"_index":1381,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["40px",{"_index":581,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4299e1",{"_index":160,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["48",{"_index":1485,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["48bb78",{"_index":188,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ToastComponent.html":{}}}],["4a5568",{"_index":571,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["4px",{"_index":198,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["4rem",{"_index":599,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["5/5",{"_index":1564,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":582,"title":{},"body":{"components/DashboardComponent.html":{}}}],["500",{"_index":575,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["56",{"_index":906,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["576px",{"_index":602,"title":{},"body":{"components/DashboardComponent.html":{}}}],["5px",{"_index":225,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["5rem",{"_index":1155,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["6",{"_index":1374,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["6.1.15",{"_index":1589,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":1567,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":568,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["60000",{"_index":1448,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["600px",{"_index":1162,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["640px",{"_index":594,"title":{},"body":{"components/DashboardComponent.html":{}}}],["66",{"_index":1568,"title":{},"body":{"coverage.html":{}}}],["6px",{"_index":167,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["6rem",{"_index":585,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["7",{"_index":706,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["7.8.0",{"_index":1593,"title":{},"body":{"dependencies.html":{}}}],["718096",{"_index":579,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["768px",{"_index":596,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["7px",{"_index":223,"title":{},"body":{"components/AppComponent.html":{}}}],["800px",{"_index":130,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["85",{"_index":1565,"title":{},"body":{"coverage.html":{}}}],["86",{"_index":1548,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":194,"title":{},"body":{"components/AppComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["9",{"_index":907,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["90",{"_index":1188,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["900px",{"_index":1054,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["90vh",{"_index":1377,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["92",{"_index":1546,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":1555,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":1562,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1376,"title":{},"body":{"components/RegisterModalComponent.html":{},"coverage.html":{}}}],["96",{"_index":1559,"title":{},"body":{"coverage.html":{}}}],["9]{7,8}[0",{"_index":919,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["9ae6b4",{"_index":1080,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["9kk",{"_index":968,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["9kk]$/.test(cleanrut",{"_index":920,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["9kk]$/.test(rut",{"_index":954,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["9kk]/g",{"_index":760,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["a0aec0",{"_index":234,"title":{},"body":{"components/AppComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["a:hover",{"_index":1154,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["abc123",{"_index":1606,"title":{},"body":{"index.html":{}}}],["abierto",{"_index":1112,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["abre",{"_index":458,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{}}}],["absolute",{"_index":212,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["abstractcontrol",{"_index":877,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["acceder",{"_index":508,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["acceso",{"_index":510,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["accessors",{"_index":432,"title":{},"body":{"components/DashboardComponent.html":{}}}],["actions",{"_index":1081,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["activar",{"_index":1398,"title":{},"body":{"guards/RoleGuard.html":{}}}],["activatedroutesnapshot",{"_index":1393,"title":{},"body":{"guards/RoleGuard.html":{}}}],["actual",{"_index":453,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["actual_component",{"_index":267,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["actuales",{"_index":804,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["actualiza",{"_index":691,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["actualizado",{"_index":1007,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["actualizados",{"_index":352,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["actualizar",{"_index":1038,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["actualmente",{"_index":465,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{}}}],["add",{"_index":177,"title":{},"body":{"components/AppComponent.html":{}}}],["administra",{"_index":478,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["administración",{"_index":1128,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["agenda",{"_index":475,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["agenda'},{'name",{"_index":245,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["agendacomponent",{"_index":244,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["agrega",{"_index":751,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/RegisterModalComponent.html":{}}}],["ahora",{"_index":1131,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["al",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["alert",{"_index":1075,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["align",{"_index":151,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["allowed",{"_index":1084,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["alterna",{"_index":460,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["angular/animations",{"_index":1581,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":105,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"dependencies.html":{}}}],["angular/common/http",{"_index":280,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["angular/compiler",{"_index":1583,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":104,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":106,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":1584,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":107,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"dependencies.html":{}}}],["animation",{"_index":1189,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["antes",{"_index":1453,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["apellido",{"_index":454,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["apellidos",{"_index":291,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["api",{"_index":305,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["apiservice",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["aplicación",{"_index":16,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":22,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["app.component.css",{"_index":32,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":34,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":1,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":1553,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apple",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["applicationconfig",{"_index":1617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["around",{"_index":605,"title":{},"body":{"components/DashboardComponent.html":{}}}],["array",{"_index":342,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["asegurar",{"_index":1332,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["asigna",{"_index":784,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["asignación",{"_index":640,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["asignar",{"_index":642,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["assign",{"_index":367,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["assigning",{"_index":802,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["assignpaciente",{"_index":787,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["assignsegmentotopaciente(pacienteid",{"_index":372,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["async",{"_index":46,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{}}}],["atenciones",{"_index":1143,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["atención",{"_index":1477,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["autenticado",{"_index":466,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["authenticate",{"_index":334,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["authorizednavitems",{"_index":433,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["auto",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["automáticamente",{"_index":1507,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["autorizados",{"_index":491,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["availability",{"_index":679,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["avatar",{"_index":580,"title":{},"body":{"components/DashboardComponent.html":{}}}],["await",{"_index":1406,"title":{},"body":{"guards/RoleGuard.html":{}}}],["backdrop",{"_index":1186,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["background",{"_index":159,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["backgroundcolor",{"_index":731,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["bar",{"_index":175,"title":{},"body":{"components/AppComponent.html":{}}}],["basadas",{"_index":1389,"title":{},"body":{"guards/RoleGuard.html":{}}}],["basado",{"_index":511,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["base",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["baseurl",{"_index":310,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["bee3f8",{"_index":1159,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["before",{"_index":916,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["behavior",{"_index":1122,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["behaviorsubject",{"_index":1497,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["behaviorsubject(null",{"_index":1502,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["between",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["block",{"_index":222,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["body",{"_index":1197,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["boolean",{"_index":87,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["booleano",{"_index":391,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["border",{"_index":162,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["bordercolor",{"_index":732,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["bottom",{"_index":154,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["box",{"_index":195,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["browser",{"_index":1585,"title":{},"body":{"dependencies.html":{}}}],["btn",{"_index":158,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{}}}],["btn:disabled",{"_index":1083,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["btn:hover",{"_index":172,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{}}}],["busca",{"_index":767,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["buscar",{"_index":652,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["button",{"_index":187,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["button:disabled",{"_index":1380,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["button:hover",{"_index":190,"title":{},"body":{"components/AppComponent.html":{},"components/RegisterModalComponent.html":{}}}],["buttons",{"_index":1164,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["búsqueda",{"_index":650,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["c/u",{"_index":1482,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["c53030",{"_index":1076,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["calendarcomponent",{"_index":648,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["calendario",{"_index":646,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["calendaroptions",{"_index":627,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["cambios",{"_index":1209,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["campo",{"_index":855,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["campos",{"_index":1015,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["canactivate",{"_index":1390,"title":{},"body":{"guards/RoleGuard.html":{}}}],["canactivate(route",{"_index":1392,"title":{},"body":{"guards/RoleGuard.html":{}}}],["cancel",{"_index":1198,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["cancelando",{"_index":124,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["cancelar",{"_index":1051,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["caracteres",{"_index":935,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["características",{"_index":1101,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["card",{"_index":1176,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["card:hover",{"_index":1177,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["carga",{"_index":714,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["cargando",{"_index":91,"title":{},"body":{"components/AppComponent.html":{}}}],["cargar",{"_index":687,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/ProfileModalComponent.html":{}}}],["case",{"_index":939,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["catch",{"_index":1012,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{}}}],["catcherror",{"_index":284,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["cbd5e0",{"_index":1059,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["center",{"_index":153,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["cerrar",{"_index":554,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["check",{"_index":387,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["checkbox",{"_index":204,"title":{},"body":{"components/AppComponent.html":{}}}],["checking",{"_index":1409,"title":{},"body":{"guards/RoleGuard.html":{}}}],["checkmark",{"_index":214,"title":{},"body":{"components/AppComponent.html":{}}}],["checkmark:after",{"_index":221,"title":{},"body":{"components/AppComponent.html":{}}}],["checkscreensize",{"_index":693,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["child",{"_index":203,"title":{},"body":{"components/AppComponent.html":{}}}],["cierra",{"_index":439,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["circle",{"_index":593,"title":{},"body":{"components/DashboardComponent.html":{}}}],["circle:hover",{"_index":608,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cita",{"_index":271,"title":{"interfaces/Cita.html":{}},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["citas",{"_index":477,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"index.html":{}}}],["citas'},{'name",{"_index":248,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["citas.component.css",{"_index":644,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["citas.component.html",{"_index":643,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["citascomponent",{"_index":247,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["cl",{"_index":532,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["class",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["cleanrut",{"_index":776,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["clic",{"_index":735,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["clickeado",{"_index":738,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["clickinfo",{"_index":737,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["clickinfo.event.extendedprops.segmento",{"_index":741,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["client",{"_index":324,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["close",{"_index":1196,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["closeassignmodal",{"_index":805,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["closemodal",{"_index":1211,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["closeprofilemodal",{"_index":424,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["code",{"_index":328,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["coincidan",{"_index":1235,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["coinciden",{"_index":1208,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["coincidentes",{"_index":1233,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["colapsada",{"_index":808,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["color",{"_index":156,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["column",{"_index":590,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["columns",{"_index":1063,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["comenzar",{"_index":1130,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["commonmodule",{"_index":27,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["como",{"_index":786,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["comparar",{"_index":1333,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["complete",{"_index":1010,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["completed",{"_index":229,"title":{},"body":{"components/AppComponent.html":{}}}],["completo",{"_index":449,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["compodoc/compodoc",{"_index":1587,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["component_template",{"_index":243,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["componente",{"_index":12,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["components/login",{"_index":1107,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["components/profile",{"_index":493,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["components/register",{"_index":1109,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["components/toast/toast.component",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["comprueba",{"_index":1402,"title":{},"body":{"guards/RoleGuard.html":{}}}],["con",{"_index":304,"title":{},"body":{"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["configura",{"_index":1441,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["configuración",{"_index":671,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"miscellaneous/variables.html":{}}}],["confirm('¿est",{"_index":1454,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["confirmación",{"_index":1452,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["confirmar",{"_index":1206,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["confirmpassword",{"_index":1257,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["confirmpassword?.seterrors",{"_index":1272,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["confirmpassword?.seterrors(null",{"_index":1273,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["confirmpassword?.value",{"_index":1271,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["cono",{"_index":502,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["console.error('error",{"_index":685,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{}}}],["console.error('password",{"_index":1304,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["console.error('profile",{"_index":1305,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["console.error('registration",{"_index":1363,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["console.error('rut",{"_index":1367,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["console.error(error",{"_index":1013,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["const",{"_index":373,"title":{},"body":{"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["constructor",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["constructor(apiservice",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"guards/RoleGuard.html":{}}}],["constructor(fb",{"_index":831,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["constructor(private",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["constructor(router",{"_index":434,"title":{},"body":{"components/DashboardComponent.html":{}}}],["constructor(toastservice",{"_index":1522,"title":{},"body":{"components/ToastComponent.html":{}}}],["consulta",{"_index":1480,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["container",{"_index":205,"title":{},"body":{"components/AppComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{}}}],["container:hover",{"_index":219,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["contraseña",{"_index":406,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"index.html":{}}}],["contraseñas",{"_index":1207,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["control",{"_index":876,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["control.errors['datetooearly",{"_index":945,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["control.errors['email",{"_index":936,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["control.errors['futuredate",{"_index":949,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["control.errors['invaliddate",{"_index":943,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["control.errors['invaliddomain",{"_index":1276,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["control.errors['invalidemail",{"_index":1275,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["control.errors['invalidtld",{"_index":1277,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["control.errors['minlength",{"_index":932,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.errors['minlength'].requiredlength",{"_index":934,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.errors['passwordmismatch",{"_index":1286,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["control.errors['pattern",{"_index":937,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.errors['required",{"_index":930,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.get('confirmpassword')?.value",{"_index":1349,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["control.get('password')?.value",{"_index":1348,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["control.markastouched",{"_index":992,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.value",{"_index":913,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["control.value?.includes",{"_index":1278,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["control?.errors",{"_index":929,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control?.invalid",{"_index":991,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["copy",{"_index":1146,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["correo",{"_index":1041,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["correspondiente",{"_index":857,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["coverage",{"_index":1541,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":986,"title":{},"body":{"components/InscripcionComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["creada",{"_index":371,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["creado",{"_index":346,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["crear",{"_index":1436,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["create",{"_index":345,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["createfuncionario(funcionario",{"_index":347,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["createpaciente(paciente",{"_index":363,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["createsegmentohorario(segmento",{"_index":399,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["creating",{"_index":1009,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["credenciales",{"_index":336,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["credentials",{"_index":335,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["cta",{"_index":1163,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["cumpla",{"_index":970,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["cupo",{"_index":1483,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["cupos",{"_index":1438,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["current",{"_index":444,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["currentuser",{"_index":420,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{}}}],["currentuser.id",{"_index":1404,"title":{},"body":{"guards/RoleGuard.html":{}}}],["curso",{"_index":885,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["cursor",{"_index":168,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["cuyos",{"_index":1220,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["dash",{"_index":953,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["dashboard",{"_index":414,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["dashboard'},{'name",{"_index":250,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["dashboard.component.css",{"_index":418,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["dashboard.component.html",{"_index":419,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["dashboardcomponent",{"_index":249,"title":{"components/DashboardComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["database.services.ts",{"_index":1604,"title":{},"body":{"index.html":{}}}],["date",{"_index":529,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/SegmentoModalComponent.html":{}}}],["date('1900",{"_index":1032,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["date(control.value",{"_index":1030,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["date(paciente.fechanacimiento).toisostring().split('t')[0",{"_index":979,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["date(segmento.fechahorainicio",{"_index":709,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["date(startdate",{"_index":1468,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date(startofweek",{"_index":704,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["date(this.segmentotoedit.fechahorafin).gettime",{"_index":1445,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date(this.segmentotoedit.fechahorainicio",{"_index":1465,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date(this.segmentotoedit.fechahorainicio).gettime",{"_index":1446,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date(today",{"_index":700,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["date.getdate().tostring().padstart(2",{"_index":1459,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date.getfullyear",{"_index":1457,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date.getmonth()+1).tostring().padstart(2",{"_index":1458,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date:'dd/mm/yyyy",{"_index":1488,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date:\\'dd/mm/yyyy",{"_index":1494,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["dateofbirthvalidator",{"_index":821,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["datos",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"index.html":{}}}],["day",{"_index":537,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["daygridplugin",{"_index":633,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["dd",{"_index":977,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["de",{"_index":14,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":660,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["decoration",{"_index":231,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["default",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":497,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["defined",{"_index":51,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["del",{"_index":53,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["delete",{"_index":235,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["deletefuncionario(id",{"_index":357,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["deletesegmentohorario(id",{"_index":403,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["demo",{"_index":127,"title":{},"body":{"components/AppComponent.html":{}}}],["dependencies",{"_index":1580,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["derecha",{"_index":1530,"title":{},"body":{"components/ToastComponent.html":{}}}],["derechos",{"_index":1148,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["descripción",{"_index":505,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["desplaza",{"_index":1100,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["desplazamiento",{"_index":1116,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["desplegable",{"_index":523,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["después",{"_index":1508,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["destruir",{"_index":67,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["detallados",{"_index":1142,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["digit",{"_index":535,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["direccion",{"_index":298,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["dirección",{"_index":1049,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["direction",{"_index":588,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["directive",{"_index":241,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":266,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["display",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["disponibilidad",{"_index":618,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{}}}],["disponible",{"_index":739,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["disponibles",{"_index":622,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["document.getelementbyid('features",{"_index":1120,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["documentation",{"_index":1542,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["domain",{"_index":1020,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["domain.includes",{"_index":1022,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["domain.split",{"_index":1025,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["dominio",{"_index":846,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["dots",{"_index":952,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["dropdown",{"_index":600,"title":{},"body":{"components/DashboardComponent.html":{}}}],["duoc",{"_index":1595,"title":{},"body":{"dependencies.html":{}}}],["duración",{"_index":1490,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["duration",{"_index":1444,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["dynamic",{"_index":1586,"title":{},"body":{"dependencies.html":{}}}],["dígitos",{"_index":1373,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["e2e8f0",{"_index":185,"title":{},"body":{"components/AppComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["e53e3e",{"_index":176,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["each",{"_index":680,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["ease",{"_index":1192,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["ebf8ff",{"_index":574,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["edf2f7",{"_index":218,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["edición",{"_index":1241,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["editando",{"_index":1434,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["editar",{"_index":1421,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["eficiente",{"_index":1137,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["ej",{"_index":940,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["el",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["electrónico",{"_index":1042,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["element",{"_index":240,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["elemento",{"_index":500,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["elementos",{"_index":481,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["eliminación",{"_index":1432,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["eliminar",{"_index":1425,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["email",{"_index":295,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["email.includes",{"_index":1017,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["email.split",{"_index":1021,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["emaildomainvalidator",{"_index":822,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["emite",{"_index":1287,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["emitevent",{"_index":1347,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["emitido",{"_index":1225,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["en",{"_index":512,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["encontrado",{"_index":782,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["encuentra",{"_index":972,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["end",{"_index":729,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["enddate",{"_index":1467,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["enddate.setminutes(enddate.getminutes",{"_index":1469,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["endofweek",{"_index":703,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["endofweek.setdate(startofweek.getdate",{"_index":705,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["entrada",{"_index":869,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["envío",{"_index":871,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["error",{"_index":37,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["error(errormessage",{"_index":333,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["error.error",{"_index":321,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["error.error.message",{"_index":326,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["error.message",{"_index":330,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["error.status}\\nmessage",{"_index":329,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["errores",{"_index":315,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["errorevent",{"_index":323,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["errormessage",{"_index":319,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["es",{"_index":668,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["escribe",{"_index":749,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["esp.nombre",{"_index":1202,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["esp_id",{"_index":1249,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["espacios",{"_index":1280,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["especiales",{"_index":1372,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["especialidad",{"_index":80,"title":{"interfaces/Especialidad.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["especialidades",{"_index":38,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["esquina",{"_index":1528,"title":{},"body":{"components/ToastComponent.html":{}}}],["est",{"_index":90,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["esta",{"_index":623,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["estableciéndolo",{"_index":1514,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["estado",{"_index":1399,"title":{},"body":{"guards/RoleGuard.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["este",{"_index":931,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["estructura",{"_index":498,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["están",{"_index":1221,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["estándar",{"_index":971,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["etiqueta",{"_index":504,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["event",{"_index":750,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["event.target",{"_index":755,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["eventemitter",{"_index":1223,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["eventinput",{"_index":628,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["evento",{"_index":736,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["events",{"_index":723,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["evita",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["existe",{"_index":79,"title":{},"body":{"components/AppComponent.html":{}}}],["existente",{"_index":1435,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["existentes",{"_index":898,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["existinguser",{"_index":1356,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["exitosamente",{"_index":793,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["exitoso",{"_index":542,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["expecteddigit",{"_index":962,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["expecteddigit.tostring",{"_index":967,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["expectedverificationdigit",{"_index":964,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["export",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["extendedprops",{"_index":733,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["extends",{"_index":619,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["extiende",{"_index":616,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["f",{"_index":677,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["f.hasavailablesegments",{"_index":684,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["f.id",{"_index":799,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["f0fff4",{"_index":1078,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["f56565",{"_index":237,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["f8fafc",{"_index":557,"title":{},"body":{"components/DashboardComponent.html":{}}}],["false",{"_index":485,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{}}}],["family",{"_index":137,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["favor",{"_index":1364,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["fb",{"_index":834,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["fc8181",{"_index":236,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/ProfileModalComponent.html":{}}}],["feature",{"_index":1170,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["features",{"_index":1169,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["featuressection",{"_index":1119,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["featuressection.scrollintoview",{"_index":1121,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["feb2b2",{"_index":1077,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["fecha",{"_index":841,"title":{},"body":{"components/InscripcionComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["fecha_nacimiento",{"_index":911,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["fechahorafin",{"_index":301,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["fechahorainicio",{"_index":300,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["fechanacimiento",{"_index":296,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["femenino",{"_index":1047,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["fff5f5",{"_index":584,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{}}}],["field",{"_index":924,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["field.dirty",{"_index":927,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["field.invalid",{"_index":926,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["field.touched",{"_index":928,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["fieldname",{"_index":856,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"dependencies.html":{}}}],["filteredfuncionarios",{"_index":654,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["filtrada",{"_index":513,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{}}}],["firstvaluefrom",{"_index":1401,"title":{},"body":{"guards/RoleGuard.html":{}}}],["fixed",{"_index":560,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["flex",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["font",{"_index":136,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["footer",{"_index":1182,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["form",{"_index":1061,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["format",{"_index":974,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formatdate",{"_index":1415,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["formatdate(date",{"_index":1428,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["formatea",{"_index":747,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formateado",{"_index":852,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formatear",{"_index":851,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formato",{"_index":875,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formatrut",{"_index":823,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formatrut(rut",{"_index":849,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formatted",{"_index":985,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formatting",{"_index":915,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formbuilder",{"_index":832,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["formgroup",{"_index":887,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["formgroup.get('confirmpassword",{"_index":1269,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["formgroup.get('password",{"_index":1268,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["formsmodule",{"_index":28,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["formulario",{"_index":835,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["formularios",{"_index":1217,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["formvalue",{"_index":995,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["formvalue.apellidos",{"_index":998,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formvalue.cupos",{"_index":1470,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["formvalue.direccion",{"_index":1004,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formvalue.email",{"_index":1001,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formvalue.fecha_nacimiento",{"_index":1002,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formvalue.genero",{"_index":1003,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formvalue.nombre",{"_index":1472,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["formvalue.nombres",{"_index":997,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formvalue.password",{"_index":1295,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formvalue.rut.replace(/\\./g",{"_index":999,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formvalue.telefono",{"_index":1000,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["free",{"_index":302,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["full",{"_index":597,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fullcalendar/angular",{"_index":632,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"dependencies.html":{}}}],["fullcalendar/core",{"_index":629,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"dependencies.html":{}}}],["fullcalendar/daygrid",{"_index":634,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"dependencies.html":{}}}],["fullcalendar/interaction",{"_index":638,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"dependencies.html":{}}}],["fullcalendar/timegrid",{"_index":636,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"dependencies.html":{}}}],["fullcalendarcomponent",{"_index":631,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["fullcalendarmodule",{"_index":630,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["funcionalidad",{"_index":506,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["funcionario",{"_index":84,"title":{"interfaces/Funcionario.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["funcionario.apellidos",{"_index":1264,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["funcionario.apellidos.tolowercase().includes(searchtermlower",{"_index":712,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["funcionario.email",{"_index":1265,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["funcionario.especialidad.id",{"_index":1267,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["funcionario.hasavailablesegments",{"_index":801,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["funcionario.nombres",{"_index":1263,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["funcionario.nombres.tolowercase().includes(searchtermlower",{"_index":711,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["funcionario.telefono",{"_index":1266,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["funcionarioid",{"_index":384,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionarios",{"_index":39,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["funcionarios.map(f",{"_index":676,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["funcionariowithavailability",{"_index":614,"title":{"interfaces/FuncionarioWithAvailability.html":{}},"body":{"interfaces/FuncionarioWithAvailability.html":{},"coverage.html":{}}}],["futura",{"_index":951,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["futuredate",{"_index":1036,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["g",{"_index":758,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["gap",{"_index":179,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["genera",{"_index":1140,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["general",{"_index":1478,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["genero",{"_index":297,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["gestiona",{"_index":472,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["gestión",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["getauthorizednavitems",{"_index":489,"title":{},"body":{"components/DashboardComponent.html":{}}}],["getcurrentpath",{"_index":425,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["geterrormessage",{"_index":824,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["geterrormessage('apellidos",{"_index":1200,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["geterrormessage('email",{"_index":1201,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["geterrormessage('fecha_nacimiento",{"_index":1043,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["geterrormessage('nombres",{"_index":1199,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["geterrormessage('password",{"_index":1205,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["geterrormessage('telefono",{"_index":1203,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["geterrormessage(\\'apellidos",{"_index":1314,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["geterrormessage(\\'email",{"_index":1315,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["geterrormessage(\\'fecha_nacimiento",{"_index":1086,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["geterrormessage(\\'nombres",{"_index":1313,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["geterrormessage(\\'password",{"_index":1317,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["geterrormessage(\\'telefono",{"_index":1316,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["geterrormessage(fieldname",{"_index":853,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["getespecialidades",{"_index":380,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["getfuncionariobyid(id",{"_index":349,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["getfuncionariobyrut(rut",{"_index":359,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["getfuncionarioroles(funcionarioid",{"_index":385,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["getfuncionarios",{"_index":343,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["getpacientebyrut(rut",{"_index":409,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["getpacientes",{"_index":361,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["getroles",{"_index":382,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["gets",{"_index":443,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["getsegmentohorariobyid(id",{"_index":396,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["getsegmentoshorariobyfuncionarioid(funcionarioid",{"_index":394,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["getting",{"_index":1600,"title":{"index.html":{}},"body":{}}],["getuserfullname",{"_index":426,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["getuserinitials",{"_index":427,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["getuserspecialty",{"_index":428,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["globales",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["gradient(135deg",{"_index":1158,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["grid",{"_index":1062,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["group",{"_index":1065,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["group.full",{"_index":1379,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["guard",{"_index":1382,"title":{"guards/RoleGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guardando",{"_index":1052,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["guardar",{"_index":1053,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["guardia",{"_index":1386,"title":{},"body":{"guards/RoleGuard.html":{}}}],["guards",{"_index":1384,"title":{},"body":{"guards/RoleGuard.html":{}}}],["guión",{"_index":753,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["género",{"_index":1044,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["h1",{"_index":155,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["h2",{"_index":1057,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["h3",{"_index":1180,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["ha",{"_index":864,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["hacia",{"_index":1118,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["handleerror(error",{"_index":318,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["handleeventclick(clickinfo",{"_index":740,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["handlesubmit",{"_index":1322,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["hasavailable",{"_index":683,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["hasavailablesegments",{"_index":620,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["hasrole",{"_index":1405,"title":{},"body":{"guards/RoleGuard.html":{}}}],["hasrole(funcionarioid",{"_index":392,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["hay",{"_index":662,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["header",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["height",{"_index":216,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["hero",{"_index":1156,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["hh:mm",{"_index":1489,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["hide",{"_index":1515,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["hora",{"_index":1486,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["horario",{"_index":368,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["horarios",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["horarios/${id",{"_index":398,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["hospital",{"_index":86,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["hostlistener",{"_index":626,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["hour",{"_index":533,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["hs",{"_index":550,"title":{},"body":{"components/DashboardComponent.html":{}}}],["html",{"_index":239,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["http",{"_index":313,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["http://3.83.231.69:8080/api",{"_index":311,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["http://localhost:8080/api",{"_index":312,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["httpclient",{"_index":277,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["httperrorresponse",{"_index":279,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["httpparams",{"_index":278,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["icon",{"_index":469,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["id",{"_index":274,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["identifier",{"_index":1543,"title":{},"body":{"coverage.html":{}}}],["implements",{"_index":17,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["import",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["important",{"_index":607,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["imports",{"_index":26,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["index",{"_index":35,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":89,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["indicando",{"_index":863,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{}}}],["inferior",{"_index":1529,"title":{},"body":{"components/ToastComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["información",{"_index":617,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{}}}],["informes",{"_index":1141,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["ingresado",{"_index":882,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["ingrese",{"_index":775,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["iniciales",{"_index":452,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["inicializa",{"_index":72,"title":{},"body":{"components/AppComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["inicialización",{"_index":111,"title":{},"body":{"components/AppComponent.html":{}}}],["iniciar",{"_index":1124,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["inicie",{"_index":1362,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["inicio",{"_index":337,"title":{},"body":{"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["initialview",{"_index":673,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["injectable",{"_index":276,"title":{"injectables/ToastService.html":{}},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["injectables",{"_index":1535,"title":{},"body":{"injectables/ToastService.html":{},"overview.html":{}}}],["inline",{"_index":598,"title":{},"body":{"components/DashboardComponent.html":{}}}],["input",{"_index":180,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["input.error",{"_index":1072,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["input.value",{"_index":766,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["input.value.replace(/\\./g",{"_index":756,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["input:checked",{"_index":220,"title":{},"body":{"components/AppComponent.html":{}}}],["input:focus",{"_index":1066,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["inputdate",{"_index":1029,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["inputs",{"_index":1214,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["inscripcion",{"_index":468,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{}}}],["inscripcion'},{'name",{"_index":252,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["inscripcion.component.css",{"_index":816,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["inscripcion.component.html",{"_index":817,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["inscripcioncomponent",{"_index":251,"title":{"components/InscripcionComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["inscripción",{"_index":471,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{}}}],["instanceof",{"_index":322,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["integral",{"_index":1127,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["intente",{"_index":1365,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["interactionplugin",{"_index":637,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["interactuar",{"_index":303,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["interface",{"_index":270,"title":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{}},"body":{"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["interfaces",{"_index":272,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"overview.html":{}}}],["interfaz",{"_index":496,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["invaliddate",{"_index":1035,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["invaliddomain",{"_index":1023,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["invalidemail",{"_index":1018,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["invalidrut",{"_index":921,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["inválida",{"_index":944,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["inválido",{"_index":861,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["iseditmode",{"_index":1413,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["isfieldinvalid",{"_index":825,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["isfieldinvalid(fieldname",{"_index":859,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["isloading",{"_index":818,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["isnan(inputdate.gettime",{"_index":1034,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["issmallscreen",{"_index":670,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["item",{"_index":201,"title":{},"body":{"components/AppComponent.html":{}}}],["item.icon",{"_index":551,"title":{},"body":{"components/DashboardComponent.html":{}}}],["item.label",{"_index":552,"title":{},"body":{"components/DashboardComponent.html":{}}}],["item.requiredrole",{"_index":518,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["item:last",{"_index":202,"title":{},"body":{"components/AppComponent.html":{}}}],["items",{"_index":152,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["json.parse(localstorage.getitem('currentuser",{"_index":463,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{}}}],["json.stringify(currentuser",{"_index":1312,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["justify",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["k",{"_index":966,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["keyframes",{"_index":1194,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["la",{"_index":15,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":470,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["landing",{"_index":254,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["landingpagecomponent",{"_index":253,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["las",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["leaks",{"_index":123,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["left",{"_index":208,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["legend",{"_index":238,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["limpia",{"_index":63,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["line",{"_index":232,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["linear",{"_index":1157,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["link",{"_index":570,"title":{},"body":{"components/DashboardComponent.html":{}}}],["link.active",{"_index":573,"title":{},"body":{"components/DashboardComponent.html":{}}}],["link.current",{"_index":612,"title":{},"body":{"components/DashboardComponent.html":{}}}],["link.current::after",{"_index":613,"title":{},"body":{"components/DashboardComponent.html":{}}}],["link:hover",{"_index":572,"title":{},"body":{"components/DashboardComponent.html":{}}}],["links",{"_index":1152,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["list",{"_index":193,"title":{},"body":{"components/AppComponent.html":{}}}],["lista",{"_index":82,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["loading",{"_index":40,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/ProfileModalComponent.html":{}}}],["loadsegmentos(funcionarioid",{"_index":720,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["localpart",{"_index":1019,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["localstorage",{"_index":525,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["localstorage.removeitem('currentuser",{"_index":527,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["localstorage.setitem('currentuser",{"_index":1311,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["login",{"_index":257,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["login(credentials",{"_index":339,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["loginmodalcomponent",{"_index":256,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["loginrequest",{"_index":286,"title":{"interfaces/LoginRequest.html":{}},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["loginresponse",{"_index":289,"title":{"interfaces/LoginResponse.html":{}},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["logo",{"_index":1151,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["logout",{"_index":429,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["los",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["main",{"_index":558,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["maneja",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["manejador",{"_index":314,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["manera",{"_index":1136,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["mantiene",{"_index":1500,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["map",{"_index":639,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["map(segmentos",{"_index":697,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["marca",{"_index":785,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["margin",{"_index":131,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["masculino",{"_index":1046,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["mask",{"_index":895,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"dependencies.html":{}}}],["matching",{"_index":269,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["max",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["mayúscula",{"_index":1283,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["media",{"_index":586,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["medium",{"_index":1171,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["memory",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["men",{"_index":462,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["menos",{"_index":1282,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["mensaje",{"_index":77,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["mensajes",{"_index":769,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["menu",{"_index":577,"title":{},"body":{"components/DashboardComponent.html":{}}}],["message",{"_index":819,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["metadata",{"_index":20,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["methods",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["mientras",{"_index":748,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["min",{"_index":555,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["mindate",{"_index":1031,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["minute",{"_index":536,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["minutos",{"_index":1493,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["minúscula",{"_index":1284,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["miscellaneous",{"_index":1614,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm",{"_index":976,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["mobile",{"_index":601,"title":{},"body":{"components/DashboardComponent.html":{}}}],["modal",{"_index":440,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal'},{'name",{"_index":258,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["modal.component",{"_index":495,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["modal.component.css",{"_index":1319,"title":{},"body":{"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.html",{"_index":1320,"title":{},"body":{"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts",{"_index":1184,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:105",{"_index":1330,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:123",{"_index":1331,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:136",{"_index":1329,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:145",{"_index":1325,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:153",{"_index":1328,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:19",{"_index":1422,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:21",{"_index":1419,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:23",{"_index":1324,"title":{},"body":{"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:231",{"_index":1326,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:25",{"_index":1423,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:258",{"_index":1327,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:26",{"_index":1338,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:27",{"_index":1426,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:28",{"_index":1339,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:289",{"_index":1219,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:29",{"_index":1424,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:291",{"_index":1224,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:294",{"_index":1240,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:296",{"_index":1239,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:298",{"_index":1216,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:30",{"_index":1337,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:32",{"_index":1336,"title":{},"body":{"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:337",{"_index":1227,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:34",{"_index":1323,"title":{},"body":{"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:363",{"_index":1230,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:385",{"_index":1232,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:408",{"_index":1229,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:418",{"_index":1228,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:443",{"_index":1226,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:451",{"_index":1231,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:47",{"_index":1430,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:519",{"_index":1237,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:64",{"_index":1427,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:68",{"_index":1335,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:72",{"_index":1431,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:79",{"_index":1429,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:86",{"_index":1433,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:92",{"_index":1334,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal/login",{"_index":1108,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["modal/profile",{"_index":494,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"coverage.html":{}}}],["modal/register",{"_index":1110,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{},"coverage.html":{}}}],["modal/segmento",{"_index":1411,"title":{},"body":{"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["modales",{"_index":1111,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["modificación",{"_index":1185,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modificando",{"_index":1222,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modificar",{"_index":553,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileModalComponent.html":{}}}],["modules",{"_index":1609,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["month",{"_index":538,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["mostrando",{"_index":1527,"title":{},"body":{"components/ToastComponent.html":{}}}],["mostrar",{"_index":503,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["muestra",{"_index":509,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["multiplier",{"_index":959,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["más",{"_index":1133,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["máximo",{"_index":1484,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["médicas",{"_index":83,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["médico",{"_index":1138,"title":{},"body":{"components/LandingPageComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["médicos",{"_index":1129,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["mínimo",{"_index":933,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["módulo",{"_index":1607,"title":{},"body":{"index.html":{}}}],["nacimiento",{"_index":842,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["name",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["nav",{"_index":569,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["navegación",{"_index":482,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["navitem",{"_index":467,"title":{"interfaces/NavItem.html":{}},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"coverage.html":{}}}],["navitems",{"_index":421,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["necesarios",{"_index":923,"title":{},"body":{"components/InscripcionComponent.html":{},"guards/RoleGuard.html":{}}}],["new",{"_index":332,"title":{},"body":{"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["newespecialidadtitle",{"_index":41,"title":{},"body":{"components/AppComponent.html":{}}}],["newfuncionario",{"_index":1358,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["newpassword",{"_index":405,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["next",{"_index":722,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["ngondestroy",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["ngoninit",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["ngx",{"_index":894,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"dependencies.html":{}}}],["ngxmaskdirective",{"_index":815,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["ni",{"_index":1371,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["nombre",{"_index":299,"title":{},"body":{"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["nombres",{"_index":290,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["none",{"_index":163,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["notificaciones",{"_index":837,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["now",{"_index":528,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["now.tolocalestring('es",{"_index":531,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["nueva",{"_index":95,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["nuevamente",{"_index":1366,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["nuevo",{"_index":1352,"title":{},"body":{"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["nuevos",{"_index":897,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["null",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["number",{"_index":275,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["numbers",{"_index":957,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["numbers.length",{"_index":960,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["numeric",{"_index":540,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["número",{"_index":1285,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["números",{"_index":1370,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["o",{"_index":987,"title":{},"body":{"components/InscripcionComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["object.keys(this.pacienteform.controls).foreach(key",{"_index":989,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["object.keys(this.profileform.controls).foreach(key",{"_index":1290,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["observable",{"_index":281,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["observables",{"_index":119,"title":{},"body":{"components/AppComponent.html":{}}}],["obtiene",{"_index":448,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["occurred",{"_index":320,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["oculta",{"_index":522,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["ocultar",{"_index":1506,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["ocupado",{"_index":746,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["ondelete",{"_index":1416,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["ondestroy",{"_index":19,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["oninit",{"_index":18,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["onrutinput",{"_index":826,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["onrutinput(event",{"_index":754,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["onsubmit",{"_index":827,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["opacity",{"_index":213,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["opcional",{"_index":1204,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["openprofilemodal",{"_index":430,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["operación",{"_index":354,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["optional",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["otro",{"_index":1048,"title":{},"body":{"components/InscripcionComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["out",{"_index":1193,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["outline",{"_index":1068,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["output",{"_index":1242,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["outputs",{"_index":1215,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["overflow",{"_index":1378,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["overview",{"_index":1610,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":1160,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["paciente",{"_index":96,"title":{"interfaces/Paciente.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["paciente.fechanacimiento",{"_index":978,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["paciente.id",{"_index":981,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["pacienteform",{"_index":820,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["pacienteform.get('id')?.value",{"_index":1037,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["pacienteform.get(\\'id\\')?.value",{"_index":1085,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["pacienteid",{"_index":369,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["pacienteid.tostring",{"_index":376,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["pacientes",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["package",{"_index":1579,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["padding",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["page",{"_index":1091,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page'},{'name",{"_index":255,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["page.component.css",{"_index":1092,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.html",{"_index":1093,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":1089,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:19",{"_index":1105,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:21",{"_index":1106,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:27",{"_index":1102,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:36",{"_index":1103,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:45",{"_index":1099,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page/landing",{"_index":1088,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["panel",{"_index":413,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["pantalla",{"_index":667,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["para",{"_index":94,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["param",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["parameters",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["params",{"_index":374,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["parseint(formvalue.esp_id",{"_index":1296,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["parseint(numbers[i",{"_index":961,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["parts",{"_index":1024,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["parts[parts.length",{"_index":1027,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["password",{"_index":288,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["password?.value",{"_index":1270,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["passwordmatchvalidator",{"_index":1212,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["passwordmismatch",{"_index":1234,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["path",{"_index":446,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["patient",{"_index":1060,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["pequeña",{"_index":669,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["perfil",{"_index":441,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{}}}],["permisos",{"_index":484,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["permite",{"_index":641,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["permiten",{"_index":1279,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["personal",{"_index":1245,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["personalizado",{"_index":840,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["pertenece",{"_index":1420,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["pipe(catcherror(this.handleerror",{"_index":341,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["plugins",{"_index":672,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["pointer",{"_index":169,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["por",{"_index":768,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["position",{"_index":206,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["posterior",{"_index":947,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["primary",{"_index":1165,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["primary:hover",{"_index":1166,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["primera",{"_index":1479,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["principal",{"_index":13,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["principales",{"_index":1134,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["private",{"_index":308,"title":{},"body":{"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["procedimiento",{"_index":1481,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["procesa",{"_index":1351,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["profile",{"_index":260,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["profileform",{"_index":1210,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["profilemodalcomponent",{"_index":259,"title":{"components/ProfileModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["programa",{"_index":1135,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["promise",{"_index":1400,"title":{},"body":{"guards/RoleGuard.html":{}}}],["properties",{"_index":36,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"properties.html":{}}}],["protege",{"_index":1387,"title":{},"body":{"guards/RoleGuard.html":{}}}],["providedin",{"_index":307,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["providehttpclient",{"_index":1619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providengxmask",{"_index":813,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["providerouter(routes",{"_index":1618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":812,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"miscellaneous/variables.html":{}}}],["prueba",{"_index":1602,"title":{},"body":{"index.html":{}}}],["próximas",{"_index":1145,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["puede",{"_index":950,"title":{},"body":{"components/InscripcionComponent.html":{},"guards/RoleGuard.html":{}}}],["puntos",{"_index":752,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["página",{"_index":1090,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["público",{"_index":1503,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["que",{"_index":412,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["radius",{"_index":166,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["reactiveformsmodule",{"_index":814,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["reactivo",{"_index":836,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["reactivos",{"_index":1218,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["readonly",{"_index":309,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["realiza",{"_index":1115,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["recordatorios",{"_index":1144,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["redirige",{"_index":526,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["referencia",{"_index":645,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["refresh",{"_index":796,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["register",{"_index":262,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["registerform",{"_index":1321,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["registermodalcomponent",{"_index":261,"title":{"components/RegisterModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["registrado",{"_index":1357,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["registrados",{"_index":98,"title":{},"body":{"components/AppComponent.html":{}}}],["registrando",{"_index":1375,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["registrar",{"_index":896,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["registrarse",{"_index":1125,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["registro",{"_index":1104,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["reinicia",{"_index":873,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["relative",{"_index":207,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["remove",{"_index":914,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["repeat(2",{"_index":1175,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["replace",{"_index":757,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["reportes",{"_index":1139,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["requerida",{"_index":1050,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["requerido",{"_index":507,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{}}}],["requeridos",{"_index":1040,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["requiredrole",{"_index":473,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["reservados",{"_index":1149,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["reset",{"_index":1058,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["resetform",{"_index":828,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["respuesta",{"_index":317,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["result",{"_index":762,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["resultado",{"_index":353,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["results",{"_index":268,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":331,"title":{},"body":{"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["returns",{"_index":69,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["rgba(0",{"_index":199,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rgba(0,0,0,0.1",{"_index":559,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{}}}],["rgba(66",{"_index":1069,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["right",{"_index":561,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/ToastComponent.html":{}}}],["rol",{"_index":293,"title":{"interfaces/Rol.html":{},"interfaces/Rol-1.html":{}},"body":{"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{},"index.html":{}}}],["role",{"_index":389,"title":{},"body":{"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["role.nombre",{"_index":517,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["roleguard",{"_index":1383,"title":{"guards/RoleGuard.html":{}},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["roles",{"_index":292,"title":{},"body":{"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"index.html":{}}}],["rolnombre",{"_index":390,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["root",{"_index":23,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["root'},{'name",{"_index":246,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["rotate(45deg",{"_index":228,"title":{},"body":{"components/AppComponent.html":{}}}],["route",{"_index":445,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["route.data['requiredrole",{"_index":1403,"title":{},"body":{"guards/RoleGuard.html":{}}}],["router",{"_index":435,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{}}}],["routerlink",{"_index":415,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["routerlinkactive",{"_index":417,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["routermodule",{"_index":29,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet",{"_index":416,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["routerstatesnapshot",{"_index":1395,"title":{},"body":{"guards/RoleGuard.html":{}}}],["row",{"_index":589,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["rut",{"_index":287,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"index.html":{}}}],["rut.length",{"_index":761,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rut.replace(/[^0",{"_index":759,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rut.replace(/\\./g",{"_index":918,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rut.slice",{"_index":765,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rut.slice(0",{"_index":763,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["ruta",{"_index":501,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["rutas",{"_index":1388,"title":{},"body":{"guards/RoleGuard.html":{}}}],["rutvalidator",{"_index":829,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rxjs",{"_index":283,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":285,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["saber",{"_index":1132,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["sans",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["scheduler",{"_index":306,"title":{},"body":{"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["screens",{"_index":1172,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["scrolltofeatures",{"_index":1096,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["se",{"_index":659,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["search",{"_index":1055,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["searching",{"_index":783,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["searchpaciente",{"_index":771,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["searchrut",{"_index":653,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["searchterm",{"_index":651,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["sección",{"_index":806,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{}}}],["secondary",{"_index":1167,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["secondary:hover",{"_index":1168,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["section",{"_index":1056,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["seed",{"_index":1603,"title":{},"body":{"index.html":{}}}],["segmento",{"_index":264,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["segmento.fechahorafin",{"_index":730,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["segmento.fechahorainicio",{"_index":728,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["segmento.free",{"_index":710,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["segmento.id.tostring",{"_index":725,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["segmento.nombre",{"_index":726,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["segmentodate",{"_index":708,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["segmentoform",{"_index":1414,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["segmentoform.get('cupos')?.value",{"_index":1492,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["segmentoform.get(\\'cupos\\')?.value",{"_index":1495,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["segmentohorario",{"_index":99,"title":{"interfaces/SegmentoHorario.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["segmentohorarioid",{"_index":370,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentohorarioid.tostring",{"_index":378,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentomodalcomponent",{"_index":263,"title":{"components/SegmentoModalComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["segmentos",{"_index":101,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["segmentos.map(segmento",{"_index":724,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["segmentos.some(segmento",{"_index":707,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["segmentoshorario",{"_index":43,"title":{},"body":{"components/AppComponent.html":{}}}],["segmentotoedit",{"_index":1417,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["segmentotoedit.fechahorainicio",{"_index":1487,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["segoe",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["segundos",{"_index":1509,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["seguro",{"_index":1455,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["según",{"_index":514,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{}}}],["selecciona",{"_index":713,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["seleccionado",{"_index":655,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["seleccione",{"_index":1045,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["selecciones",{"_index":803,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["selección",{"_index":807,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["select",{"_index":211,"title":{},"body":{"components/AppComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["select.error",{"_index":1073,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["select:focus",{"_index":1067,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["selectedfuncionario",{"_index":656,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["selectedpaciente",{"_index":658,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["selectedsegmento",{"_index":657,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["selectfuncionario(funcionario",{"_index":715,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["selector",{"_index":21,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["semana",{"_index":624,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["ser",{"_index":946,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["serif",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["server",{"_index":327,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["services/api.service",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{}}}],["services/toast.service",{"_index":492,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["servicio",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["sesión",{"_index":338,"title":{},"body":{"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["set('pacienteid",{"_index":375,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["set('segmentohorarioid",{"_index":377,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["settimeout",{"_index":718,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["shadow",{"_index":196,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["short",{"_index":595,"title":{},"body":{"components/DashboardComponent.html":{}}}],["show",{"_index":1536,"title":{},"body":{"injectables/ToastService.html":{}}}],["show(message",{"_index":1510,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["showassignmodal",{"_index":661,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["showerror",{"_index":663,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["showloginmodal",{"_index":1094,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["showprofilemodal",{"_index":422,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["showregistermodal",{"_index":1095,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["showsuccess",{"_index":665,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["showusermenu",{"_index":423,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["si",{"_index":78,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{}}}],["side",{"_index":325,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["sido",{"_index":865,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["sin",{"_index":1369,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["sistema",{"_index":1126,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["size",{"_index":186,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["slidein",{"_index":1190,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["smooth",{"_index":1123,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["solicita",{"_index":1451,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["solicitada",{"_index":1397,"title":{},"body":{"guards/RoleGuard.html":{}}}],["solicitudes",{"_index":316,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["solid",{"_index":184,"title":{},"body":{"components/AppComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["son",{"_index":1039,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["space",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["speciality",{"_index":610,"title":{},"body":{"components/DashboardComponent.html":{}}}],["specific",{"_index":388,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["sqlite",{"_index":126,"title":{},"body":{"components/AppComponent.html":{}}}],["src/.../app.config.ts",{"_index":1616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/agenda/agenda.component.ts",{"_index":1545,"title":{},"body":{"coverage.html":{}}}],["src/app/agenda/segmento",{"_index":1410,"title":{},"body":{"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":10,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:21",{"_index":81,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:23",{"_index":85,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:25",{"_index":97,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:27",{"_index":100,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:29",{"_index":92,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:31",{"_index":88,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:33",{"_index":52,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:47",{"_index":71,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:54",{"_index":62,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":1551,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/citas/citas.component.ts",{"_index":615,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"coverage.html":{}}}],["src/app/components/login",{"_index":1558,"title":{},"body":{"coverage.html":{}}}],["src/app/components/profile",{"_index":1183,"title":{},"body":{"components/ProfileModalComponent.html":{},"coverage.html":{}}}],["src/app/components/register",{"_index":1318,"title":{},"body":{"components/RegisterModalComponent.html":{},"coverage.html":{}}}],["src/app/components/toast/toast.component.ts",{"_index":1516,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/components/toast/toast.component.ts:58",{"_index":1526,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/components/toast/toast.component.ts:60",{"_index":1523,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/components/toast/toast.component.ts:77",{"_index":1524,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":411,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:101",{"_index":459,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:109",{"_index":456,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:129",{"_index":447,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:137",{"_index":455,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:145",{"_index":457,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:153",{"_index":438,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:161",{"_index":442,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:43",{"_index":464,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:45",{"_index":487,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:46",{"_index":486,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:49",{"_index":480,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:71",{"_index":437,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:83",{"_index":490,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:93",{"_index":451,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/guards/role.guard.ts",{"_index":1385,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/app/guards/role.guard.ts:13",{"_index":1391,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/guards/role.guard.ts:26",{"_index":1396,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/inscripcion/inscripcion.component.ts",{"_index":811,"title":{},"body":{"components/InscripcionComponent.html":{},"coverage.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:100",{"_index":854,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:125",{"_index":850,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:139",{"_index":880,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:172",{"_index":868,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:191",{"_index":878,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:21",{"_index":888,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:23",{"_index":889,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:232",{"_index":870,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:25",{"_index":890,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:27",{"_index":891,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:29",{"_index":886,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:304",{"_index":872,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:31",{"_index":883,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:316",{"_index":845,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:33",{"_index":833,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:342",{"_index":838,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:62",{"_index":874,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:82",{"_index":867,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:90",{"_index":860,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/landing",{"_index":1087,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/services/api.service.ts",{"_index":273,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["src/app/services/toast.service.ts",{"_index":1496,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/services/toast.service.ts:23",{"_index":1540,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/services/toast.service.ts:25",{"_index":1539,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/services/toast.service.ts:33",{"_index":1538,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/services/toast.service.ts:42",{"_index":1537,"title":{},"body":{"injectables/ToastService.html":{}}}],["standalone",{"_index":24,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["start",{"_index":727,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["startdate",{"_index":1418,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["started",{"_index":1601,"title":{"index.html":{}},"body":{}}],["startofweek",{"_index":699,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["startofweek.setdate(today.getdate",{"_index":701,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["state",{"_index":1394,"title":{},"body":{"guards/RoleGuard.html":{}}}],["statements",{"_index":1544,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":174,"title":{},"body":{"components/AppComponent.html":{}}}],["stretch",{"_index":591,"title":{},"body":{"components/DashboardComponent.html":{}}}],["string",{"_index":73,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["styleurl",{"_index":1412,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["styleurls",{"_index":31,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{}}}],["su",{"_index":1244,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["suave",{"_index":1117,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["subject",{"_index":1499,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["submit",{"_index":1082,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["subscribe",{"_index":791,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["subscription",{"_index":1521,"title":{},"body":{"components/ToastComponent.html":{}}}],["success",{"_index":543,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["successmessage",{"_index":666,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["sum",{"_index":958,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["sus",{"_index":483,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{}}}],["suscripciones",{"_index":65,"title":{},"body":{"components/AppComponent.html":{}}}],["suscripción",{"_index":1525,"title":{},"body":{"components/ToastComponent.html":{}}}],["switch(fieldname",{"_index":938,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["system",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["table",{"_index":1578,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":1577,"title":{},"body":{"coverage.html":{}}}],["tablets",{"_index":1173,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["tamaño",{"_index":690,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["tarea",{"_index":1594,"title":{},"body":{"dependencies.html":{}}}],["task",{"_index":178,"title":{},"body":{"components/AppComponent.html":{}}}],["tasks",{"_index":192,"title":{},"body":{"components/AppComponent.html":{}}}],["telefono",{"_index":294,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["teléfono",{"_index":942,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["templateurl",{"_index":33,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["temporales",{"_index":1498,"title":{},"body":{"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["tener",{"_index":1281,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["tenga",{"_index":847,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{}}}],["test(rut",{"_index":969,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["text",{"_index":230,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["texto",{"_index":1505,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.apiservice.assignsegmentotopaciente",{"_index":788,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.apiservice.createfuncionario(newfuncionario).subscribe",{"_index":1360,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.apiservice.createpaciente(paciente).subscribe",{"_index":1011,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.apiservice.getespecialidades().subscribe",{"_index":1260,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.apiservice.getfuncionariobyrut(formvalue.rut.replace(/\\./g",{"_index":1355,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.apiservice.getpacientebyrut(cleanrut).subscribe",{"_index":778,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["this.apiservice.getsegmentoshorariobyfuncionarioid(funcionarioid).pipe",{"_index":696,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.apiservice.getsegmentoshorariobyfuncionarioid(funcionarioid).subscribe",{"_index":721,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.apiservice.hasrole(currentuser.id",{"_index":1407,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.apiservice.updatefuncionario(this.currentuser.id",{"_index":1298,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.apiservice.updatefuncionariopassword",{"_index":1300,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.apiservice.updatepaciente(paciente).subscribe",{"_index":1005,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.calendaroptions.events",{"_index":734,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.checkfuncionarioavailability(f.id).subscribe",{"_index":682,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.checkfuncionarioavailability(this.selectedfuncionario.id).subscribe",{"_index":797,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.checkscreensize",{"_index":688,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.close.emit",{"_index":1288,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["this.closeassignmodal",{"_index":795,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.closemodal",{"_index":1303,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["this.currentuser",{"_index":1246,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.currentuser.apellidos",{"_index":546,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.currentuser.apellidos?.[0",{"_index":520,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.currentuser.especialidad",{"_index":547,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.currentuser.id",{"_index":1293,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.currentuser.nombres",{"_index":545,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.currentuser.nombres?.[0",{"_index":519,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.currentuser.roles",{"_index":1297,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.currentuser.roles.some((role",{"_index":516,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.currentuser.rut",{"_index":1294,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.dateofbirthvalidator",{"_index":912,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.delete.emit(this.segmentotoedit.id",{"_index":1456,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.emaildomainvalidator",{"_index":910,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.errormessage",{"_index":774,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/RegisterModalComponent.html":{}}}],["this.especialidades",{"_index":1261,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.fb.group",{"_index":900,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["this.filteredfuncionarios",{"_index":678,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.formatdate(enddate",{"_index":1474,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.formatdate(startdate",{"_index":1473,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.formatrut(paciente.rut",{"_index":983,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.funcionario",{"_index":1475,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.funcionarios",{"_index":675,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.funcionarios.find(f",{"_index":798,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.funcionarios.foreach(f",{"_index":681,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.http.delete(`${this.baseurl}/funcionarios/${id",{"_index":358,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.delete(`${this.baseurl}/segmentos",{"_index":404,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.get(`${this.baseurl}/especialidades",{"_index":381,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.get(`${this.baseurl}/funcionarios",{"_index":344,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.get(`${this.baseurl}/funcionarios/${funcionarioid}/roles",{"_index":386,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.get(`${this.baseurl}/funcionarios/${funcionarioid}/roles/${rolnombre",{"_index":393,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.get(`${this.baseurl}/funcionarios/${funcionarioid}/segmentos",{"_index":395,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.get(`${this.baseurl}/funcionarios/${id",{"_index":350,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.get(`${this.baseurl}/funcionarios/rut/${rut",{"_index":360,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.get(`${this.baseurl}/pacientes",{"_index":362,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.get(`${this.baseurl}/pacientes/rut/${rut",{"_index":410,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.get(`${this.baseurl}/roles",{"_index":383,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.get(`${this.baseurl}/segmentos",{"_index":397,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.post(`${this.baseurl}/citas/assign",{"_index":379,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.post(`${this.baseurl}/funcionarios",{"_index":348,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.post(`${this.baseurl}/funcionarios/login",{"_index":340,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.post(`${this.baseurl}/pacientes",{"_index":364,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.post(`${this.baseurl}/segmentos",{"_index":400,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.put(`${this.baseurl}/funcionarios/${id",{"_index":356,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.put(`${this.baseurl}/funcionarios/${id}/password",{"_index":408,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.put(`${this.baseurl}/pacientes/${paciente.id",{"_index":366,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.http.put(`${this.baseurl}/segmentos",{"_index":402,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.iseditmode",{"_index":1443,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.isloading",{"_index":993,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.issmallscreen",{"_index":695,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.loadsegmentos(funcionario.id",{"_index":717,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.loadsegmentos(this.selectedfuncionario.id",{"_index":794,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.message",{"_index":973,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.navitems.filter(item",{"_index":515,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.pacienteform",{"_index":899,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.get(fieldname",{"_index":925,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.get(key",{"_index":990,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.invalid",{"_index":988,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.patchvalue",{"_index":982,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.reset",{"_index":1016,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.value",{"_index":996,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteid",{"_index":980,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":1259,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.profileform",{"_index":1247,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.profileform.get(fieldname",{"_index":1274,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.profileform.get(key",{"_index":1291,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.profileform.invalid",{"_index":1289,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.profileform.patchvalue",{"_index":1262,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.profileform.value",{"_index":1292,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.registerform",{"_index":1341,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.registerform.get(fieldname",{"_index":1350,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.registerform.invalid",{"_index":1353,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.registerform.patchvalue",{"_index":1346,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.registerform.value",{"_index":1354,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.resetform",{"_index":1008,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.router.navigate",{"_index":544,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["this.router.navigate(['/dashboard",{"_index":1408,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.router.url.split('/')[2",{"_index":549,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.rutvalidator",{"_index":905,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.searchrut",{"_index":772,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["this.searchrut.replace(/\\./g",{"_index":777,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["this.searchterm",{"_index":810,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.segmentoform",{"_index":1437,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentoform.patchvalue",{"_index":1449,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentoform.valid",{"_index":1463,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentoform.value",{"_index":1464,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentotoedit",{"_index":1442,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentotoedit.nombre",{"_index":1450,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentotoedit?.id",{"_index":1471,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.selectedfuncionario",{"_index":716,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.selectedfuncionario?.id",{"_index":800,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.selectedpaciente",{"_index":779,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.selectedpaciente.id",{"_index":789,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.selectedsegmento",{"_index":742,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.selectedsegmento.id",{"_index":790,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.showassignmodal",{"_index":743,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.showerror",{"_index":773,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.showloginmodal",{"_index":1113,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.showprofilemodal",{"_index":548,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.showregistermodal",{"_index":1114,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.showsuccess",{"_index":780,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["this.showusermenu",{"_index":524,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.startdate",{"_index":1466,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.submit.emit(segmento",{"_index":1476,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.subscription",{"_index":1531,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":1534,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.successmessage",{"_index":781,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.toast",{"_index":1533,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastservice.show('cita",{"_index":792,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.toastservice.show('error",{"_index":686,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/ProfileModalComponent.html":{}}}],["this.toastservice.show('este",{"_index":744,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.toastservice.show('paciente",{"_index":1006,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.toastservice.show('perfil",{"_index":1302,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.toastservice.show('usuario",{"_index":1361,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.toastservice.show(`cierre",{"_index":541,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.toastservice.toast$.subscribe",{"_index":1532,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastsubject.asobservable",{"_index":1504,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.toastsubject.next",{"_index":1511,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.toastsubject.next(null",{"_index":1512,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.updatecalendarview",{"_index":719,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.updatelocalstorage(updateduser",{"_index":1301,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.validaterut(cleanrut",{"_index":922,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.validaterut(rut",{"_index":1345,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["through",{"_index":233,"title":{},"body":{"components/AppComponent.html":{}}}],["throwerror",{"_index":282,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["tiene",{"_index":621,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"guards/RoleGuard.html":{},"index.html":{}}}],["timegridplugin",{"_index":635,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["timestr",{"_index":530,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["tipo",{"_index":858,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["title",{"_index":565,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["tld",{"_index":1026,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["tld.length",{"_index":1028,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["toast",{"_index":265,"title":{"interfaces/Toast.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toast.message",{"_index":1520,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcomponent",{"_index":30,"title":{"components/ToastComponent.html":{}},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["toastservice",{"_index":436,"title":{"injectables/ToastService.html":{}},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastsubject",{"_index":1501,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["tocado",{"_index":866,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["todas",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["today",{"_index":698,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["today.getday",{"_index":702,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["todos",{"_index":1014,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"index.html":{}}}],["toggleloginmodal",{"_index":1097,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["toggleregistermodal",{"_index":1098,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["togglesearch",{"_index":809,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["toggleusermenu",{"_index":431,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["top",{"_index":215,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["total",{"_index":1491,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["transform",{"_index":227,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["transition",{"_index":170,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["translatex(0",{"_index":1519,"title":{},"body":{"components/ToastComponent.html":{}}}],["translatex(100",{"_index":1518,"title":{},"body":{"components/ToastComponent.html":{}}}],["translatey",{"_index":1178,"title":{},"body":{"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["translatey(0",{"_index":1195,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["true",{"_index":25,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["try",{"_index":994,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{}}}],["tslib",{"_index":1596,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/sql.js",{"_index":1590,"title":{},"body":{"dependencies.html":{}}}],["término",{"_index":649,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["título",{"_index":93,"title":{},"body":{"components/AppComponent.html":{}}}],["u",{"_index":521,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["ui",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["un",{"_index":499,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["una",{"_index":884,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{}}}],["up",{"_index":1174,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["update",{"_index":351,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["updateduser",{"_index":1238,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["updateduser).subscribe",{"_index":1299,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["updateduser.apellidos",{"_index":1307,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["updateduser.email",{"_index":1308,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["updateduser.especialidad",{"_index":1310,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["updateduser.nombres",{"_index":1306,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["updateduser.telefono",{"_index":1309,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["updatefuncionario(id",{"_index":355,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["updatefuncionariopassword(id",{"_index":407,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["updatelocalstorage",{"_index":1213,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["updatelocalstorage(updateduser",{"_index":1236,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["updatepaciente(paciente",{"_index":365,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["updatesegmentohorario(id",{"_index":401,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/LoginRequest.html":{},"interfaces/LoginResponse.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/Rol-1.html":{},"interfaces/SegmentoHorario.html":{}}}],["usa_agenda",{"_index":476,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["usa_citas",{"_index":479,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["usa_inscripcion",{"_index":474,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["use",{"_index":984,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["user",{"_index":210,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["usuario",{"_index":450,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{}}}],["usuarios",{"_index":1243,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["valida",{"_index":881,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validación",{"_index":1340,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["validador",{"_index":839,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validar",{"_index":844,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validaterut",{"_index":830,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validaterut(rut",{"_index":879,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validation",{"_index":917,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["validationerrors",{"_index":893,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validator",{"_index":1258,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validatorfn",{"_index":843,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators",{"_index":892,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["validators.email",{"_index":909,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.max(48",{"_index":1440,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["validators.maxlength(12",{"_index":1251,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.min(1",{"_index":1439,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["validators.minlength(10",{"_index":908,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["validators.minlength(11",{"_index":1248,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["validators.minlength(12",{"_index":1342,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["validators.minlength(4",{"_index":902,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.minlength(6",{"_index":1250,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.pattern(/^(?=.*[a",{"_index":1253,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.pattern(/^[^\\s",{"_index":1252,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["validators.pattern(/^[a",{"_index":903,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.required",{"_index":901,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["value",{"_index":76,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":242,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["variable",{"_index":1552,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":1615,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["verifica",{"_index":689,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{}}}],["verificar",{"_index":862,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["verificationdigit",{"_index":955,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["version",{"_index":1612,"title":{},"body":{"properties.html":{}}}],["viewchild",{"_index":625,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["viewchild('calendar",{"_index":647,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["visibilidad",{"_index":461,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["visible",{"_index":488,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["vista",{"_index":692,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{}}}],["void",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["válido",{"_index":848,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["wassmallscreen",{"_index":694,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["weight",{"_index":567,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["white",{"_index":161,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["width",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["window.innerwidth",{"_index":674,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["wrap",{"_index":592,"title":{},"body":{"components/DashboardComponent.html":{}}}],["xito",{"_index":664,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["xito/error",{"_index":770,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["y",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["ya",{"_index":745,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/RegisterModalComponent.html":{}}}],["year",{"_index":539,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["yyyy",{"_index":975,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["z",{"_index":562,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["z\\d@$!%*?&]{6",{"_index":1344,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["z\\d]{6",{"_index":1256,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["z])(?=.*[a",{"_index":1254,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["z])(?=.*\\d)(?=.*[@$!%*?&])[a",{"_index":1343,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["z])(?=.*\\d)[a",{"_index":1255,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["za",{"_index":904,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["zone.js",{"_index":1598,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicación\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterModule\n                                ToastComponent\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                error\n                            \n                            \n                                especialidades\n                            \n                            \n                                funcionarios\n                            \n                            \n                                loading\n                            \n                            \n                                newEspecialidadTitle\n                            \n                            \n                                pacientes\n                            \n                            \n                                segmentosHorario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:33\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de base de datos\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:54\n                        \n                    \n\n\n            \n                \n                        Limpia las suscripciones al destruir el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:33\n                        \n                    \n\n            \n                \n                    Mensaje de error si existe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        especialidades\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Especialidad[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:21\n                        \n                    \n\n            \n                \n                    Lista de especialidades médicas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        funcionarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Funcionario[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:23\n                        \n                    \n\n            \n                \n                    Lista de funcionarios del hospital\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:31\n                        \n                    \n\n            \n                \n                    Indica si la aplicación está cargando\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newEspecialidadTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:29\n                        \n                    \n\n            \n                \n                    Título para nueva especialidad\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pacientes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Paciente[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:25\n                        \n                    \n\n            \n                \n                    Lista de pacientes registrados\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segmentosHorario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegmentoHorario[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:27\n                        \n                    \n\n            \n                \n                    Lista de segmentos horarios\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ToastComponent } from './components/toast/toast.component';\nimport { ApiService, Especialidad, Funcionario, Paciente, SegmentoHorario } from './services/api.service';\n\n/**\n * Componente principal de la aplicación\n * @description Maneja la inicialización de la base de datos y la gestión de datos globales\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterModule, ToastComponent],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  /** Lista de especialidades médicas */\n  especialidades: Especialidad[] = [];\n  /** Lista de funcionarios del hospital */\n  funcionarios: Funcionario[] = [];\n  /** Lista de pacientes registrados */\n  pacientes: Paciente[] = [];\n  /** Lista de segmentos horarios */\n  segmentosHorario: SegmentoHorario[] = [];\n  /** Título para nueva especialidad */\n  newEspecialidadTitle: string = '';\n  /** Indica si la aplicación está cargando */\n  loading: boolean = true;\n  /** Mensaje de error si existe */\n  error: string | null = null;\n\n  /**\n   * Constructor del componente\n   * @param apiService Servicio de base de datos\n   * @description Inicializa las suscripciones a los observables de la base de datos\n   */\n  constructor(private apiService: ApiService) {\n  }\n\n  /**\n   * Inicializa el componente\n   * @description Inicializa los datos globales\n   */\n  async ngOnInit() {\n  }\n\n  /**\n   * Limpia las suscripciones al destruir el componente\n   * @description Evita memory leaks cancelando todas las suscripciones\n   */\n  ngOnDestroy() {\n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .sqlite-demo {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;\n}\n\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n\nh1 {\n  color: #2d3748;\n  margin: 0;\n}\n\n.export-btn {\n  background-color: #4299e1;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.export-btn:hover {\n  background-color: #3182ce;\n}\n\n.status-bar {\n  margin-bottom: 1rem;\n}\n\n.loading {\n  color: #4299e1;\n}\n\n.error {\n  color: #e53e3e;\n}\n\n.add-task {\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 2rem;\n}\n\n.add-task input {\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  font-size: 1rem;\n}\n\n.add-task button {\n  background-color: #48bb78;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.add-task button:hover {\n  background-color: #38a169;\n}\n\n.tasks-list {\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.task-item {\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.task-item:last-child {\n  border-bottom: none;\n}\n\n.checkbox-container {\n  position: relative;\n  padding-left: 35px;\n  cursor: pointer;\n  user-select: none;\n}\n\n.checkbox-container input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n}\n\n.checkmark {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 20px;\n  width: 20px;\n  background-color: #edf2f7;\n  border-radius: 4px;\n}\n\n.checkbox-container:hover input ~ .checkmark {\n  background-color: #e2e8f0;\n}\n\n.checkbox-container input:checked ~ .checkmark {\n  background-color: #48bb78;\n}\n\n.checkmark:after {\n  content: \"\";\n  position: absolute;\n  display: none;\n}\n\n.checkbox-container input:checked ~ .checkmark:after {\n  display: block;\n}\n\n.checkbox-container .checkmark:after {\n  left: 7px;\n  top: 3px;\n  width: 5px;\n  height: 10px;\n  border: solid white;\n  border-width: 0 2px 2px 0;\n  transform: rotate(45deg);\n}\n\n.completed {\n  text-decoration: line-through;\n  color: #a0aec0;\n}\n\n.delete-btn {\n  margin-left: auto;\n  background-color: #fc8181;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.delete-btn:hover {\n  background-color: #f56565;\n}\n\n.no-tasks {\n  text-align: center;\n  color: #a0aec0;\n  padding: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cita.html":{"url":"interfaces/Cita.html","title":"interface - Cita","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Cita\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            paciente\n                                        \n                                \n                                \n                                        \n                                            segmentoHorario\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        paciente\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        paciente:         Paciente\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Paciente\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        segmentoHorario\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        segmentoHorario:         SegmentoHorario\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         SegmentoHorario\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nexport interface LoginRequest {\n  rut: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  roles: Rol[];\n}\n\nexport interface Funcionario {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  password: string;\n  especialidad: Especialidad;\n  roles: Rol[];\n}\n\nexport interface Paciente {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  fechaNacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\nexport interface Cita {\n  id: number;\n  paciente: Paciente;\n  segmentoHorario: SegmentoHorario;\n}\n\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fechaHoraInicio: string;\n  fechaHoraFin: string;\n  free: boolean;\n  funcionario: Funcionario;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Servicio para interactuar con el API del Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  // private readonly baseUrl = 'http://3.83.231.69:8080/api';\n  private readonly baseUrl = 'http://localhost:8080/api';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Manejador de errores para las solicitudes API\n   * @param error Respuesta de error HTTP\n   * @returns Observable con el mensaje de error\n   */\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'An error occurred';\n    \n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    \n    return throwError(() => new Error(errorMessage));\n  }\n\n  /**\n   * Authenticate a funcionario\n   * @param credentials Credenciales de inicio de sesión\n   * @returns Observable con la respuesta de inicio de sesión\n   */\n  login(credentials: LoginRequest): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios/login`, credentials)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all funcionarios\n   * @returns Observable con el array de funcionarios\n   */\n  getFuncionarios(): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new funcionario\n   * @param funcionario Datos del funcionario\n   * @returns Observable con el funcionario creado\n   */\n  createFuncionario(funcionario: Funcionario): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by ID\n   * @param id ID del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario\n   * @param id Funcionario ID\n   * @param funcionario Datos actualizados del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionario(id: number, funcionario: Funcionario): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete funcionario\n   * @param id ID del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteFuncionario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by RUT\n   * @param rut RUT del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all pacientes\n   * @returns Observable con el array de pacientes\n   */\n  getPacientes(): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  createPaciente(paciente: Paciente): Observable {\n    return this.http.post(`${this.baseUrl}/pacientes`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update a paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  updatePaciente(paciente: Paciente): Observable {\n    return this.http.put(`${this.baseUrl}/pacientes/${paciente.id}`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Assign segmento horario to paciente\n   * @param pacienteId Paciente ID\n   * @param segmentoHorarioId ID del segmento horario\n   * @returns Observable con la cita creada\n   */\n  assignSegmentoToPaciente(pacienteId: number, segmentoHorarioId: number): Observable {\n    const params = new HttpParams()\n      .set('pacienteId', pacienteId.toString())\n      .set('segmentoHorarioId', segmentoHorarioId.toString());\n\n    return this.http.post(`${this.baseUrl}/citas/assign`, null, { params })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all especialidades\n   * @returns Observable con el array de especialidades\n   */\n  getEspecialidades(): Observable {\n    return this.http.get(`${this.baseUrl}/especialidades`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all roles\n   * @returns Observable con el array de roles\n   */\n  getRoles(): Observable {\n    return this.http.get(`${this.baseUrl}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get roles for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de roles\n   */\n  getFuncionarioRoles(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Check if funcionario has a specific role\n   * @param funcionarioId Funcionario ID\n   * @param rolNombre Nombre del rol\n   * @returns Observable con el resultado booleano\n   */\n  hasRole(funcionarioId: number, rolNombre: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles/${rolNombre}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all segmentos horarios for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de segmentos horarios\n   */\n  getSegmentosHorarioByFuncionarioId(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/segmentos`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get segmento horario by ID\n   * @param id ID del segmento horario\n   * @returns Observable con los datos del segmento horario\n   */\n  getSegmentoHorarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new segmento horario\n   * @param segmento Datos del segmento horario\n   * @returns Observable con el segmento horario creado\n   */\n  createSegmentoHorario(segmento: SegmentoHorario): Observable {\n    return this.http.post(`${this.baseUrl}/segmentos-horarios`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update segmento horario\n   * @param id Segmento horario ID\n   * @param segmento Datos actualizados del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  updateSegmentoHorario(id: number, segmento: SegmentoHorario): Observable {\n    return this.http.put(`${this.baseUrl}/segmentos-horarios/${id}`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete segmento horario\n   * @param id ID del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteSegmentoHorario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario password\n   * @param id Funcionario ID\n   * @param newPassword Nueva contraseña\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionarioPassword(id: number, newPassword: string): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}/password`, { password: newPassword })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get paciente by RUT\n   * @param rut RUT del paciente\n   * @returns Observable con los datos del paciente\n   */\n  getPacienteByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja el panel principal de la aplicación\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                            RouterOutlet\n                            RouterLinkActive\n                                ProfileModalComponent\n                \n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                navItems\n                            \n                            \n                                showProfileModal\n                            \n                            \n                                showUserMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeProfileModal\n                            \n                            \n                                getCurrentPath\n                            \n                            \n                                getUserFullName\n                            \n                            \n                                getUserInitials\n                            \n                            \n                                getUserSpecialty\n                            \n                            \n                                logout\n                            \n                            \n                                openProfileModal\n                            \n                            \n                                toggleUserMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    authorizedNavItems\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, apiService: ApiService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:71\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeProfileModal\n                        \n                    \n                \n            \n            \n                \ncloseProfileModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:153\n                        \n                    \n\n\n            \n                \n                        Cierra el modal de perfil\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCurrentPath\n                        \n                    \n                \n            \n            \n                \ngetCurrentPath()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:161\n                        \n                    \n\n\n            \n                \n                        Gets the current route path\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                The current route path\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserFullName\n                        \n                    \n                \n            \n            \n                \ngetUserFullName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:129\n                        \n                    \n\n\n            \n                \n                        Obtiene el nombre completo del usuario\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                String con el nombre completo del usuario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInitials\n                        \n                    \n                \n            \n            \n                \ngetUserInitials()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:93\n                        \n                    \n\n\n            \n                \n                        Obtiene las iniciales del usuario actual\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                String con las iniciales del nombre y apellido\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserSpecialty\n                        \n                    \n                \n            \n            \n                \ngetUserSpecialty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:137\n                        \n                    \n\n\n            \n                \n                        Obtiene la especialidad del usuario\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                String con la especialidad del usuario\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:109\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openProfileModal\n                        \n                    \n                \n            \n            \n                \nopenProfileModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Abre el modal de perfil\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleUserMenu\n                        \n                    \n                \n            \n            \n                \ntoggleUserMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:101\n                        \n                    \n\n\n            \n                \n                        Alterna la visibilidad del menú de usuario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : JSON.parse(localStorage.getItem('currentUser') || '{}')\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:43\n                        \n                    \n\n            \n                \n                    Usuario actualmente autenticado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      path: 'inscripcion',\n      icon: '👥',\n      label: 'Inscripción',\n      description: 'Gestiona los pacientes',\n      requiredRole: 'USA_INSCRIPCION'\n    },\n    {\n      path: 'agenda',\n      icon: '📅',\n      label: 'Agenda',\n      description: 'Gestiona los horarios',\n      requiredRole: 'USA_AGENDA'\n    },\n    {\n      path: 'citas',\n      icon: '🕒',\n      label: 'Citas',\n      description: 'Administra las citas médicas',\n      requiredRole: 'USA_CITAS'\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:49\n                        \n                    \n\n            \n                \n                    Lista de elementos de navegación con sus permisos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showProfileModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUserMenu\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:45\n                        \n                    \n\n            \n                \n                    Indica si el menú de usuario está visible\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        authorizedNavItems\n                    \n                \n\n                \n                    \n                        getauthorizedNavItems()\n                    \n                \n                            \n                                \n                                    Defined in src/app/dashboard/dashboard.component.ts:83\n                                \n                            \n                    \n                        \n                                Obtiene los elementos de navegación autorizados para el usuario actual\n\n\n                                \n                                \n                                \n                                    Returns :         NavItem[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterLink, RouterOutlet, RouterLinkActive } from '@angular/router';\nimport { ToastService } from '../services/toast.service';\nimport { ProfileModalComponent } from '../components/profile-modal/profile-modal.component';\nimport { ApiService, Rol } from '../services/api.service';\n\n/**\n * Interfaz que define la estructura de un elemento de navegación\n */\ninterface NavItem {\n  /** Ruta del componente */\n  path: string;\n  /** Ícono a mostrar */\n  icon: string;\n  /** Etiqueta del elemento */\n  label: string;\n  /** Descripción de la funcionalidad */\n  description: string;\n  /** Rol requerido para acceder */\n  requiredRole: string;\n}\n\n/**\n * Componente que maneja el panel principal de la aplicación\n * @description Muestra la navegación principal y gestiona el acceso basado en roles\n */\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [\n    CommonModule, \n    RouterLink, \n    RouterOutlet, \n    RouterLinkActive,\n    ProfileModalComponent\n  ],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  /** Usuario actualmente autenticado */\n  currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n  /** Indica si el menú de usuario está visible */\n  showUserMenu = false;\n  showProfileModal = false;\n\n  /** Lista de elementos de navegación con sus permisos */\n  navItems: NavItem[] = [\n    {\n      path: 'inscripcion',\n      icon: '👥',\n      label: 'Inscripción',\n      description: 'Gestiona los pacientes',\n      requiredRole: 'USA_INSCRIPCION'\n    },\n    {\n      path: 'agenda',\n      icon: '📅',\n      label: 'Agenda',\n      description: 'Gestiona los horarios',\n      requiredRole: 'USA_AGENDA'\n    },\n    {\n      path: 'citas',\n      icon: '🕒',\n      label: 'Citas',\n      description: 'Administra las citas médicas',\n      requiredRole: 'USA_CITAS'\n    }\n  ];\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private toastService: ToastService\n  ) {}\n\n  /**\n   * Obtiene los elementos de navegación autorizados para el usuario actual\n   * @returns Lista filtrada de elementos de navegación según los roles del usuario\n   */\n  get authorizedNavItems(): NavItem[] {\n    return this.navItems.filter(item => \n      this.currentUser.roles.some((role: Rol) => role.nombre === item.requiredRole)\n    );\n  }\n\n  /**\n   * Obtiene las iniciales del usuario actual\n   * @returns String con las iniciales del nombre y apellido\n   */\n  getUserInitials(): string {\n    return `${this.currentUser.nombres?.[0] || ''}${this.currentUser.apellidos?.[0] || ''}`;\n  }\n\n  /**\n   * Alterna la visibilidad del menú de usuario\n   * @description Muestra u oculta el menú desplegable\n   */\n  toggleUserMenu() {\n    this.showUserMenu = !this.showUserMenu;\n  }\n\n  /**\n   * Cierra la sesión del usuario\n   * @description Limpia el localStorage y redirige al inicio\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    \n    const now = new Date();\n    const timeStr = now.toLocaleString('es-CL', { \n      hour: '2-digit', \n      minute: '2-digit',\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n    this.toastService.show(`Cierre de sesión exitoso @ ${timeStr}`, 'success');\n    \n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Obtiene el nombre completo del usuario\n   * @returns String con el nombre completo del usuario\n   */\n  getUserFullName(): string {\n    return `${this.currentUser.nombres} ${this.currentUser.apellidos}`;\n  }\n\n  /**\n   * Obtiene la especialidad del usuario\n   * @returns String con la especialidad del usuario\n   */\n  getUserSpecialty(): string {\n    return this.currentUser.especialidad;\n  }\n\n  /**\n   * Abre el modal de perfil\n   * @description Muestra el modal de perfil\n   */\n  openProfileModal() {\n    this.showProfileModal = true;\n  }\n\n  /**\n   * Cierra el modal de perfil\n   * @description Oculta el modal de perfil\n   */\n  closeProfileModal() {\n    this.showProfileModal = false;\n  }\n\n  /**\n   * Gets the current route path\n   * @returns The current route path\n   */\n  getCurrentPath(): string {\n    return this.router.url.split('/')[2] || 'agenda';  // Default to 'agenda' if no path\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Hospital Scheduler\n          HS\n        \n        \n          \n            {{ item.icon }}\n            {{ item.label }}\n          \n        \n      \n      \n        \n          {{ getUserInitials() }}\n        \n        \n          \n            {{ getUserFullName() }}\n            {{ getUserSpecialty() }}\n           -->\n          \n            🔧\n            Modificar Perfil\n          \n          \n            🚪\n            Cerrar Sesión\n          \n        \n      \n    \n  \n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                .dashboard {\n  min-height: 100vh;\n  background-color: #f8fafc;\n}\n\n.main-header {\n  background: white;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n}\n\n.header-content {\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 1rem 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n}\n\n.app-title {\n  font-size: 1.5rem;\n  color: #2c5282;\n  margin: 0;\n  font-weight: 600;\n}\n\n.main-nav {\n  display: flex;\n  gap: 1rem;\n}\n\n.nav-link {\n  text-decoration: none;\n  color: #4a5568;\n  padding: 0.5rem 1rem;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  transition: all 0.2s;\n}\n\n.nav-link:hover {\n  background-color: #edf2f7;\n  color: #2c5282;\n}\n\n.nav-link.active {\n  background-color: #ebf8ff;\n  color: #2c5282;\n  font-weight: 500;\n}\n\n.nav-icon {\n  font-size: 1.2rem;\n}\n\n.header-right {\n  display: flex;\n  align-items: center;\n}\n\n.user-menu {\n  position: relative;\n}\n\n.user-info {\n  text-align: right;\n}\n\n.user-name {\n  display: block;\n  font-weight: 500;\n  color: #2d3748;\n}\n\n.user-role {\n  display: block;\n  font-size: 0.875rem;\n  color: #718096;\n}\n\n.avatar {\n  width: 40px;\n  height: 40px;\n  background-color: #4299e1;\n  color: white;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n}\n\n.logout-btn {\n  width: 100%;\n  padding: 0.75rem 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: none;\n  border: none;\n  border-radius: 4px;\n  color: #e53e3e;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.logout-btn:hover {\n  background-color: #fff5f5;\n}\n\n.main-content {\n  padding: 6rem 2rem 2rem;\n  max-width: 1400px;\n  margin: 0 auto;\n}\n\n/* @media (max-width: 1024px) {\n  .header-content {\n    flex-direction: row;\n    gap: 1rem;\n  }\n\n  .header-left {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 1rem;\n  }\n\n  .main-nav {\n    flex-wrap: wrap;\n  }\n\n  .nav-link {\n    flex: 1;\n    justify-content: center;\n  }\n\n  .user-menu {\n    width: 100%;\n    justify-content: space-between;\n  }\n  .user-circle {\n    margin-left: auto;\n  }\n} */\n\n@media (max-width: 640px) {\n  .header-content {\n    padding: 1rem;\n  }\n\n  .user-info {\n    display: none;\n  }\n}\n\n.app-title .short-title {\n  display: none;\n}\n\n.nav-link {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.nav-icon {\n  font-size: 1.2rem;\n  min-width: 1.5rem;\n  text-align: center;\n}\n\n@media (max-width: 768px) {\n  .header-content {\n    flex-direction: column;\n    padding: 0.5rem;\n  }\n\n  .header-left {\n    flex-direction: row;\n    width: 100%;\n    justify-content: center;\n    gap: 0.5rem;\n  }\n\n  .app-title .full-title {\n    display: none;\n  }\n\n  .app-title .short-title {\n    display: inline;\n  }\n\n  .main-nav {\n    display: flex;\n    justify-content: center;\n    gap: 0.5rem;\n    width: 100%;\n  }\n\n  .nav-label {\n    display: none;\n  }\n\n  .nav-link {\n    padding: 0.5rem;\n    justify-content: center;\n  }\n\n  .user-info {\n    display: none;\n  }\n\n  .logout-btn .label {\n    display: none;\n  }\n\n  .main-content {\n    padding: 4rem 1rem 1rem;\n  }\n\n  .user-menu {\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n  }\n\n  .dropdown-menu {\n    right: 0;\n  }\n}\n\n/* Mobile */\n@media (max-width: 576px) {\n  .nav-link {\n    padding: 0.4rem;\n  }\n\n  .nav-icon {\n    font-size: 1.1rem;\n  }\n\n  .main-nav {\n    justify-content: space-around;\n  }\n\n  .main-content {\n    padding: 3.5rem 0.5rem 0.5rem !important;\n  }\n}\n\n.user-circle {\n  width: 40px;\n  height: 40px;\n  background-color: #4299e1;\n  color: white;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.user-circle:hover {\n  background-color: #3182ce;\n}\n\n.dropdown-menu {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  margin-top: 0.5rem;\n  background: white;\n  border-radius: 6px;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n  padding: 0.5rem;\n  min-width: 150px;\n  z-index: 100;\n}\n\n.user-speciality {\n  font-size: 0.8rem;\n  color: #718096;\n}\n\n.user-info {\n  text-align: center;\n}\n\n.profile-btn {\n  width: 100%;\n  padding: 0.75rem 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: none;\n  border: none;\n  border-radius: 4px;\n  color: #2c5282;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.profile-btn:hover {\n  background-color: #ebf8ff;\n}\n\n.nav-link.current {\n  background-color: #ebf8ff;\n  color: #2c5282;\n  font-weight: 500;\n  position: relative;\n}\n\n.nav-link.current::after {\n  content: '';\n  position: absolute;\n  bottom: -1px;\n  left: 0;\n  width: 100%;\n  height: 2px;\n  background-color: #4299e1;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Hospital Scheduler          HS                                      {{ item.icon }}            {{ item.label }}                                                {{ getUserInitials() }}                                      {{ getUserFullName() }}            {{ getUserSpecialty() }}           -->                      🔧            Modificar Perfil                                🚪            Cerrar Sesión                                          '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Especialidad.html":{"url":"interfaces/Especialidad.html","title":"interface - Especialidad","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Especialidad\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nexport interface LoginRequest {\n  rut: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  roles: Rol[];\n}\n\nexport interface Funcionario {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  password: string;\n  especialidad: Especialidad;\n  roles: Rol[];\n}\n\nexport interface Paciente {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  fechaNacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\nexport interface Cita {\n  id: number;\n  paciente: Paciente;\n  segmentoHorario: SegmentoHorario;\n}\n\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fechaHoraInicio: string;\n  fechaHoraFin: string;\n  free: boolean;\n  funcionario: Funcionario;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Servicio para interactuar con el API del Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  // private readonly baseUrl = 'http://3.83.231.69:8080/api';\n  private readonly baseUrl = 'http://localhost:8080/api';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Manejador de errores para las solicitudes API\n   * @param error Respuesta de error HTTP\n   * @returns Observable con el mensaje de error\n   */\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'An error occurred';\n    \n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    \n    return throwError(() => new Error(errorMessage));\n  }\n\n  /**\n   * Authenticate a funcionario\n   * @param credentials Credenciales de inicio de sesión\n   * @returns Observable con la respuesta de inicio de sesión\n   */\n  login(credentials: LoginRequest): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios/login`, credentials)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all funcionarios\n   * @returns Observable con el array de funcionarios\n   */\n  getFuncionarios(): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new funcionario\n   * @param funcionario Datos del funcionario\n   * @returns Observable con el funcionario creado\n   */\n  createFuncionario(funcionario: Funcionario): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by ID\n   * @param id ID del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario\n   * @param id Funcionario ID\n   * @param funcionario Datos actualizados del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionario(id: number, funcionario: Funcionario): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete funcionario\n   * @param id ID del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteFuncionario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by RUT\n   * @param rut RUT del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all pacientes\n   * @returns Observable con el array de pacientes\n   */\n  getPacientes(): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  createPaciente(paciente: Paciente): Observable {\n    return this.http.post(`${this.baseUrl}/pacientes`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update a paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  updatePaciente(paciente: Paciente): Observable {\n    return this.http.put(`${this.baseUrl}/pacientes/${paciente.id}`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Assign segmento horario to paciente\n   * @param pacienteId Paciente ID\n   * @param segmentoHorarioId ID del segmento horario\n   * @returns Observable con la cita creada\n   */\n  assignSegmentoToPaciente(pacienteId: number, segmentoHorarioId: number): Observable {\n    const params = new HttpParams()\n      .set('pacienteId', pacienteId.toString())\n      .set('segmentoHorarioId', segmentoHorarioId.toString());\n\n    return this.http.post(`${this.baseUrl}/citas/assign`, null, { params })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all especialidades\n   * @returns Observable con el array de especialidades\n   */\n  getEspecialidades(): Observable {\n    return this.http.get(`${this.baseUrl}/especialidades`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all roles\n   * @returns Observable con el array de roles\n   */\n  getRoles(): Observable {\n    return this.http.get(`${this.baseUrl}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get roles for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de roles\n   */\n  getFuncionarioRoles(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Check if funcionario has a specific role\n   * @param funcionarioId Funcionario ID\n   * @param rolNombre Nombre del rol\n   * @returns Observable con el resultado booleano\n   */\n  hasRole(funcionarioId: number, rolNombre: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles/${rolNombre}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all segmentos horarios for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de segmentos horarios\n   */\n  getSegmentosHorarioByFuncionarioId(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/segmentos`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get segmento horario by ID\n   * @param id ID del segmento horario\n   * @returns Observable con los datos del segmento horario\n   */\n  getSegmentoHorarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new segmento horario\n   * @param segmento Datos del segmento horario\n   * @returns Observable con el segmento horario creado\n   */\n  createSegmentoHorario(segmento: SegmentoHorario): Observable {\n    return this.http.post(`${this.baseUrl}/segmentos-horarios`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update segmento horario\n   * @param id Segmento horario ID\n   * @param segmento Datos actualizados del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  updateSegmentoHorario(id: number, segmento: SegmentoHorario): Observable {\n    return this.http.put(`${this.baseUrl}/segmentos-horarios/${id}`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete segmento horario\n   * @param id ID del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteSegmentoHorario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario password\n   * @param id Funcionario ID\n   * @param newPassword Nueva contraseña\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionarioPassword(id: number, newPassword: string): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}/password`, { password: newPassword })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get paciente by RUT\n   * @param rut RUT del paciente\n   * @returns Observable con los datos del paciente\n   */\n  getPacienteByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Funcionario.html":{"url":"interfaces/Funcionario.html","title":"interface - Funcionario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Funcionario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apellidos\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            especialidad\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombres\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            rut\n                                        \n                                \n                                \n                                        \n                                            telefono\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apellidos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apellidos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        especialidad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        especialidad:         Especialidad\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Especialidad\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombres:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     Rol[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rol[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        telefono\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        telefono:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nexport interface LoginRequest {\n  rut: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  roles: Rol[];\n}\n\nexport interface Funcionario {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  password: string;\n  especialidad: Especialidad;\n  roles: Rol[];\n}\n\nexport interface Paciente {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  fechaNacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\nexport interface Cita {\n  id: number;\n  paciente: Paciente;\n  segmentoHorario: SegmentoHorario;\n}\n\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fechaHoraInicio: string;\n  fechaHoraFin: string;\n  free: boolean;\n  funcionario: Funcionario;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Servicio para interactuar con el API del Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  // private readonly baseUrl = 'http://3.83.231.69:8080/api';\n  private readonly baseUrl = 'http://localhost:8080/api';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Manejador de errores para las solicitudes API\n   * @param error Respuesta de error HTTP\n   * @returns Observable con el mensaje de error\n   */\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'An error occurred';\n    \n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    \n    return throwError(() => new Error(errorMessage));\n  }\n\n  /**\n   * Authenticate a funcionario\n   * @param credentials Credenciales de inicio de sesión\n   * @returns Observable con la respuesta de inicio de sesión\n   */\n  login(credentials: LoginRequest): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios/login`, credentials)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all funcionarios\n   * @returns Observable con el array de funcionarios\n   */\n  getFuncionarios(): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new funcionario\n   * @param funcionario Datos del funcionario\n   * @returns Observable con el funcionario creado\n   */\n  createFuncionario(funcionario: Funcionario): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by ID\n   * @param id ID del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario\n   * @param id Funcionario ID\n   * @param funcionario Datos actualizados del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionario(id: number, funcionario: Funcionario): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete funcionario\n   * @param id ID del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteFuncionario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by RUT\n   * @param rut RUT del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all pacientes\n   * @returns Observable con el array de pacientes\n   */\n  getPacientes(): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  createPaciente(paciente: Paciente): Observable {\n    return this.http.post(`${this.baseUrl}/pacientes`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update a paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  updatePaciente(paciente: Paciente): Observable {\n    return this.http.put(`${this.baseUrl}/pacientes/${paciente.id}`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Assign segmento horario to paciente\n   * @param pacienteId Paciente ID\n   * @param segmentoHorarioId ID del segmento horario\n   * @returns Observable con la cita creada\n   */\n  assignSegmentoToPaciente(pacienteId: number, segmentoHorarioId: number): Observable {\n    const params = new HttpParams()\n      .set('pacienteId', pacienteId.toString())\n      .set('segmentoHorarioId', segmentoHorarioId.toString());\n\n    return this.http.post(`${this.baseUrl}/citas/assign`, null, { params })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all especialidades\n   * @returns Observable con el array de especialidades\n   */\n  getEspecialidades(): Observable {\n    return this.http.get(`${this.baseUrl}/especialidades`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all roles\n   * @returns Observable con el array de roles\n   */\n  getRoles(): Observable {\n    return this.http.get(`${this.baseUrl}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get roles for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de roles\n   */\n  getFuncionarioRoles(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Check if funcionario has a specific role\n   * @param funcionarioId Funcionario ID\n   * @param rolNombre Nombre del rol\n   * @returns Observable con el resultado booleano\n   */\n  hasRole(funcionarioId: number, rolNombre: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles/${rolNombre}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all segmentos horarios for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de segmentos horarios\n   */\n  getSegmentosHorarioByFuncionarioId(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/segmentos`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get segmento horario by ID\n   * @param id ID del segmento horario\n   * @returns Observable con los datos del segmento horario\n   */\n  getSegmentoHorarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new segmento horario\n   * @param segmento Datos del segmento horario\n   * @returns Observable con el segmento horario creado\n   */\n  createSegmentoHorario(segmento: SegmentoHorario): Observable {\n    return this.http.post(`${this.baseUrl}/segmentos-horarios`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update segmento horario\n   * @param id Segmento horario ID\n   * @param segmento Datos actualizados del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  updateSegmentoHorario(id: number, segmento: SegmentoHorario): Observable {\n    return this.http.put(`${this.baseUrl}/segmentos-horarios/${id}`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete segmento horario\n   * @param id ID del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteSegmentoHorario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario password\n   * @param id Funcionario ID\n   * @param newPassword Nueva contraseña\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionarioPassword(id: number, newPassword: string): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}/password`, { password: newPassword })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get paciente by RUT\n   * @param rut RUT del paciente\n   * @returns Observable con los datos del paciente\n   */\n  getPacienteByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FuncionarioWithAvailability.html":{"url":"interfaces/FuncionarioWithAvailability.html","title":"interface - FuncionarioWithAvailability","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FuncionarioWithAvailability\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/citas/citas.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que extiende Funcionario con información de disponibilidad\n\n            \n\n            \n                Extends\n            \n            \n                            Funcionario\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hasAvailableSegments\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasAvailableSegments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasAvailableSegments:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indica si el funcionario tiene segmentos disponibles esta semana\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { ApiService, Funcionario, SegmentoHorario, Paciente } from '../services/api.service';\nimport { CalendarOptions, EventInput } from '@fullcalendar/core';\nimport { FullCalendarModule, FullCalendarComponent } from '@fullcalendar/angular';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { ToastService } from '../services/toast.service';\nimport { Observable, map } from 'rxjs';\n\n/**\n * Componente que maneja la asignación de citas médicas\n * @description Permite asignar pacientes a segmentos horarios de funcionarios\n */\n@Component({\n  selector: 'app-citas',\n  standalone: true,\n  imports: [CommonModule, FormsModule, FullCalendarModule],\n  templateUrl: './citas.component.html',\n  styleUrls: ['./citas.component.css']\n})\nexport class CitasComponent implements OnInit {\n  /** Referencia al componente de calendario */\n  @ViewChild('calendar') calendarComponent!: FullCalendarComponent;\n  \n  /** Término de búsqueda para funcionarios */\n  searchTerm: string = '';\n  /** RUT del paciente a buscar */\n  searchRut: string = '';\n  /** Lista de funcionarios con información de disponibilidad */\n  funcionarios: FuncionarioWithAvailability[] = [];\n  /** Lista filtrada de funcionarios */\n  filteredFuncionarios: FuncionarioWithAvailability[] = [];\n  /** Funcionario seleccionado actualmente */\n  selectedFuncionario: Funcionario | null = null;\n  /** Segmento horario seleccionado */\n  selectedSegmento: SegmentoHorario | null = null;\n  /** Paciente seleccionado */\n  selectedPaciente: Paciente | null = null;\n  /** Indica si se debe mostrar el modal de asignación */\n  showAssignModal = false;\n  /** Indica si hay un error que mostrar */\n  showError = false;\n  /** Indica si hay un mensaje de éxito que mostrar */\n  showSuccess = false;\n  /** Mensaje de error */\n  errorMessage = '';\n  /** Mensaje de éxito */\n  successMessage = '';\n  /** Indica si la pantalla es pequeña */\n  isSmallScreen: boolean = false;\n  /** Lista de pacientes */\n  pacientes: Paciente[] = [];\n\n  /** Configuración del calendario */\n  calendarOptions: CalendarOptions = {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    initialView: window.innerWidth  {\n        this.funcionarios = funcionarios.map(f => ({\n          ...f,\n          hasAvailableSegments: false\n        }));\n        this.filteredFuncionarios = this.funcionarios;\n        \n        // Check availability for each funcionario\n        this.funcionarios.forEach(f => {\n          this.checkFuncionarioAvailability(f.id).subscribe(\n            hasAvailable => {\n              f.hasAvailableSegments = hasAvailable;\n            }\n          );\n        });\n      },\n      error: (error) => {\n        console.error('Error loading funcionarios:', error);\n        this.toastService.show('Error al cargar funcionarios', 'error');\n      }\n    });\n\n    this.checkScreenSize();\n  }\n\n  /**\n   * Verifica el tamaño de la pantalla\n   * @description Actualiza isSmallScreen y la vista del calendario\n   * @private\n   */\n  private checkScreenSize() {\n    const wasSmallScreen = this.isSmallScreen;\n    this.isSmallScreen = window.innerWidth  {\n    return this.apiService.getSegmentosHorarioByFuncionarioId(funcionarioId).pipe(\n      map(segmentos => {\n        const today = new Date();\n        const startOfWeek = new Date(today);\n        startOfWeek.setDate(today.getDate() - today.getDay());\n        const endOfWeek = new Date(startOfWeek);\n        endOfWeek.setDate(startOfWeek.getDate() + 7);\n\n        return segmentos.some(segmento => {\n          const segmentoDate = new Date(segmento.fechaHoraInicio);\n          return segmento.free && \n                 segmentoDate >= startOfWeek && \n                 segmentoDate  \n      funcionario.nombres.toLowerCase().includes(searchTermLower) ||\n      funcionario.apellidos.toLowerCase().includes(searchTermLower)\n    );\n  }\n\n  /**\n   * Selecciona un funcionario y carga sus segmentos\n   * @param funcionario Funcionario seleccionado\n   */\n  selectFuncionario(funcionario: Funcionario) {\n    this.selectedFuncionario = funcionario;\n    this.loadSegmentos(funcionario.id);\n    \n    setTimeout(() => {\n      this.updateCalendarView();\n    }, 0);\n  }\n\n  /**\n   * Carga los segmentos de un funcionario en el calendario\n   * @param funcionarioId ID del funcionario\n   */\n  loadSegmentos(funcionarioId: number) {\n    this.apiService.getSegmentosHorarioByFuncionarioId(funcionarioId).subscribe({\n      next: (segmentos) => {\n        const events: EventInput[] = segmentos.map(segmento => ({\n          id: segmento.id.toString(),\n          title: segmento.nombre,\n          start: segmento.fechaHoraInicio,\n          end: segmento.fechaHoraFin,\n          backgroundColor: segmento.free ? '#48bb78' : '#fc8181',\n          borderColor: segmento.free ? '#38a169' : '#f56565',\n          extendedProps: {\n            segmento: segmento\n          }\n        }));\n\n        this.calendarOptions.events = events;\n      },\n      error: (error) => {\n        console.error('Error loading segmentos:', error);\n        this.toastService.show('Error al cargar horarios', 'error');\n      }\n    });\n  }\n\n  /**\n   * Maneja el clic en un evento del calendario\n   * @param clickInfo Información del evento clickeado\n   * @description Abre el modal de asignación si el segmento está disponible\n   */\n  handleEventClick(clickInfo: any) {\n    const segmento = clickInfo.event.extendedProps.segmento as SegmentoHorario;\n    if (segmento.free) {\n      this.selectedSegmento = segmento;\n      this.showAssignModal = true;\n    } else {\n      this.toastService.show('Este horario ya está ocupado', 'error');\n    }\n  }\n\n  /**\n   * Formatea el RUT mientras el usuario escribe\n   * @param event Evento de input\n   * @description Agrega puntos y guión al RUT\n   */\n  onRutInput(event: any) {\n    const input = event.target;\n    let rut = input.value.replace(/\\./g, '').replace(/-/g, '');\n    rut = rut.replace(/[^0-9kK]/g, '');\n    \n    if (rut.length > 0) {\n      let result = rut;\n      if (rut.length > 1) {\n        result = rut.slice(0, -1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') + '-' + rut.slice(-1);\n      }\n      input.value = result;\n    }\n  }\n\n  /**\n   * Busca un paciente por RUT\n   * @description Actualiza selectedPaciente y muestra mensajes de éxito/error\n   */\n  searchPaciente() {\n    if (!this.searchRut) {\n      this.showError = true;\n      this.errorMessage = 'Ingrese un RUT para buscar';\n      return;\n    }\n\n    const cleanRut = this.searchRut.replace(/\\./g, '').replace(/-/g, '');\n    this.apiService.getPacienteByRut(cleanRut).subscribe({\n      next: (paciente) => {\n        if (paciente) {\n          this.selectedPaciente = paciente;\n          this.showSuccess = true;\n          this.successMessage = 'Paciente encontrado';\n        } else {\n          this.showError = true;\n          this.errorMessage = 'Paciente no encontrado';\n          this.selectedPaciente = null;\n        }\n      },\n      error: (error) => {\n        console.error('Error searching paciente:', error);\n        this.showError = true;\n        this.errorMessage = 'Error al buscar paciente';\n        this.selectedPaciente = null;\n      }\n    });\n  }\n\n  /**\n   * Asigna un paciente a un segmento horario\n   * @description Marca el segmento como ocupado y muestra mensaje de éxito\n   */\n  assignPaciente() {\n    if (!this.selectedSegmento || !this.selectedPaciente) return;\n\n    this.apiService.assignSegmentoToPaciente(\n      this.selectedPaciente.id, \n      this.selectedSegmento.id\n    ).subscribe({\n      next: () => {\n        this.toastService.show('Cita creada exitosamente', 'success');\n        if (this.selectedFuncionario) {\n          this.loadSegmentos(this.selectedFuncionario.id);\n        }\n        this.closeAssignModal();\n        \n        // Refresh funcionario availability\n        if (this.selectedFuncionario) {\n          this.checkFuncionarioAvailability(this.selectedFuncionario.id).subscribe(\n            hasAvailable => {\n              const funcionario = this.funcionarios.find(f => f.id === this.selectedFuncionario?.id);\n              if (funcionario) {\n                funcionario.hasAvailableSegments = hasAvailable;\n              }\n            }\n          );\n        }\n      },\n      error: (error) => {\n        console.error('Error assigning cita:', error);\n        this.showError = true;\n        this.errorMessage = 'Error al asignar la cita';\n      }\n    });\n  }\n\n  /**\n   * Cierra el modal de asignación\n   * @description Limpia las selecciones actuales\n   */\n  closeAssignModal() {\n    this.showAssignModal = false;\n    this.selectedSegmento = null;\n    this.selectedPaciente = null;\n    this.searchRut = '';\n  }\n\n  /**\n   * Alterna la visibilidad de la sección de búsqueda\n   * @description Limpia la selección actual si está colapsada\n   */\n  toggleSearch() {\n    if (this.selectedFuncionario) {\n      this.selectedFuncionario = null;\n      this.searchTerm = '';\n      this.filteredFuncionarios = this.funcionarios;\n      this.calendarOptions.events = [];\n    }\n  }\n}\n\n/**\n * Interfaz que extiende Funcionario con información de disponibilidad\n */\ninterface FuncionarioWithAvailability extends Funcionario {\n  /** Indica si el funcionario tiene segmentos disponibles esta semana */\n  hasAvailableSegments?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InscripcionComponent.html":{"url":"components/InscripcionComponent.html","title":"component - InscripcionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InscripcionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inscripcion/inscripcion.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja la inscripción de pacientes\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            provideNgxMask()\n                \n            \n\n\n            \n                selector\n                app-inscripcion\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            FormsModule\n                            NgxMaskDirective\n                \n            \n\n            \n                styleUrls\n                ./inscripcion.component.css\n            \n\n\n\n            \n                templateUrl\n                ./inscripcion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                message\n                            \n                            \n                                pacienteForm\n                            \n                            \n                                pacienteId\n                            \n                            \n                                searchRut\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dateOfBirthValidator\n                            \n                            \n                                emailDomainValidator\n                            \n                            \n                                formatRut\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onRutInput\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                            \n                                rutValidator\n                            \n                            \n                                searchPaciente\n                            \n                            \n                                validateRut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, apiService: ApiService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inscripcion/inscripcion.component.ts:33\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de formulario reactivo\n\n                                                        \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de base de datos\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de notificaciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        dateOfBirthValidator\n                        \n                    \n                \n            \n            \n                \ndateOfBirthValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:342\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para la fecha de nacimiento\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                ValidatorFn para validar la fecha de nacimiento\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailDomainValidator\n                        \n                    \n                \n            \n            \n                \nemailDomainValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:316\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para el dominio del email\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                ValidatorFn para validar que el email tenga un dominio válido\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatRut\n                        \n                    \n                \n            \n            \n                \nformatRut(rut: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:125\n                        \n                    \n\n\n            \n                \n                        Formatea el RUT mientras el usuario escribe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rut\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    RUT a formatear\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                RUT formateado con puntos y guión\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:100\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje de error para un campo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Mensaje de error correspondiente al tipo de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo del formulario es inválido\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo a verificar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el campo es inválido y ha sido tocado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:82\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRutInput\n                        \n                    \n                \n            \n            \n                \nonRutInput(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:172\n                        \n                    \n\n\n            \n                \n                        Formatea el RUT mientras el usuario escribe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de entrada\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:232\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:304\n                        \n                    \n\n\n            \n                \n                        Reinicia el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rutValidator\n                        \n                    \n                \n            \n            \n                \nrutValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:62\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para validar el formato del RUT\n\n\n                        \n                            Returns :     (control: AbstractControl) => any\n\n                        \n                            \n                                ValidatorFn para validar el formato del RUT\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchPaciente\n                        \n                    \n                \n            \n            \n                \nsearchPaciente()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:191\n                        \n                    \n\n\n            \n                \n                        Busca un paciente por RUT\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateRut\n                        \n                    \n                \n            \n            \n                \nvalidateRut(rut: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:139\n                        \n                    \n\n\n            \n                \n                        Valida el RUT ingresado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rut\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    RUT a validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el RUT es válido\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:31\n                        \n                    \n\n            \n                \n                    Indica si hay una operación en curso\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:29\n                        \n                    \n\n            \n                \n                    Mensaje para mostrar al usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pacienteForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pacienteId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:33\n                        \n                    \n\n            \n                \n                    ID del paciente\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchRut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:23\n                        \n                    \n\n            \n                \n                    RUT para búsqueda de pacientes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:25\n                        \n                    \n\n            \n                \n                    Indica si hay un error que mostrar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:27\n                        \n                    \n\n            \n                \n                    Indica si hay un mensaje de éxito que mostrar\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule, FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { ApiService, Paciente } from '../services/api.service';\nimport { NgxMaskDirective, provideNgxMask } from 'ngx-mask';\nimport { ToastService } from '../services/toast.service';\n\n/**\n * Componente que maneja la inscripción de pacientes\n * @description Permite registrar nuevos pacientes y buscar pacientes existentes\n */\n@Component({\n  selector: 'app-inscripcion',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, NgxMaskDirective],\n  providers: [provideNgxMask()],\n  templateUrl: './inscripcion.component.html',\n  styleUrls: ['./inscripcion.component.css']\n})\nexport class InscripcionComponent implements OnInit {\n  pacienteForm: FormGroup;\n  /** RUT para búsqueda de pacientes */\n  searchRut: string = '';\n  /** Indica si hay un error que mostrar */\n  showError = false;\n  /** Indica si hay un mensaje de éxito que mostrar */\n  showSuccess = false;\n  /** Mensaje para mostrar al usuario */\n  message = '';\n  /** Indica si hay una operación en curso */\n  isLoading = false;\n  /** ID del paciente */\n  pacienteId = 0;\n\n  /**\n   * Constructor del componente\n   * @param fb Servicio de formulario reactivo\n   * @param apiService Servicio de base de datos\n   * @param toastService Servicio de notificaciones\n   */\n  constructor(\n    private fb: FormBuilder,\n    private apiService: ApiService,\n    private toastService: ToastService\n  ) {\n    this.pacienteForm = this.fb.group({\n      nombres: ['', [Validators.required, Validators.minLength(4), Validators.pattern(/^[a-zA-Z]+$/)]],\n      apellidos: ['', [Validators.required, Validators.minLength(4), Validators.pattern(/^[a-zA-Z]+$/)]],\n      rut: ['', [Validators.required, this.rutValidator()]],\n      telefono: ['(56) 9 ', [Validators.required, Validators.minLength(10)]],\n      email: ['', [Validators.required, Validators.email, this.emailDomainValidator()]],\n      fecha_nacimiento: ['', [Validators.required, this.dateOfBirthValidator()]],\n      genero: ['', Validators.required],\n      direccion: ['', Validators.required]\n    });\n  }\n\n  /**\n   * Validador personalizado para validar el formato del RUT\n   * @returns ValidatorFn para validar el formato del RUT\n   */\n  rutValidator() {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const rut = control.value;\n      if (!rut) return null;\n      \n      // Remove formatting before validation\n      const cleanRut = rut.replace(/\\./g, '').replace(/-/g, '');\n      \n      if (!/^[0-9]{7,8}[0-9Kk]$/.test(cleanRut)) {\n        return { invalidRut: true };\n      }\n\n      return this.validateRut(cleanRut) ? null : { invalidRut: true };\n    };\n  }\n\n  /**\n   * Inicializa el componente\n   * @description Carga los datos necesarios del servicio\n   */\n  ngOnInit() {\n  }\n\n  /**\n   * Verifica si un campo del formulario es inválido\n   * @param fieldName Nombre del campo a verificar\n   * @returns boolean indicando si el campo es inválido y ha sido tocado\n   */\n  isFieldInvalid(fieldName: string): boolean {\n    const field = this.pacienteForm.get(fieldName);\n    return field ? (field.invalid && (field.dirty || field.touched)) : false;\n  }\n\n  /**\n   * Obtiene el mensaje de error para un campo\n   * @param fieldName Nombre del campo\n   * @returns Mensaje de error correspondiente al tipo de error\n   */\n  getErrorMessage(fieldName: string): string {\n    const control = this.pacienteForm.get(fieldName);\n    if (control?.errors) {\n      if (control.errors['required']) return 'Este campo es requerido';\n      if (control.errors['minlength']) return `Mínimo ${control.errors['minlength'].requiredLength} caracteres`;\n      if (control.errors['email']) return 'Email inválido';\n      if (control.errors['pattern']) {\n        switch(fieldName) {\n          case 'rut': return 'Formato de RUT inválido (ej: 12345678-9)';\n          case 'telefono': return 'Formato de teléfono inválido';\n          default: return 'Formato inválido';\n        }\n      }\n      if (control.errors['invalidDate']) return 'Fecha inválida';\n      if (control.errors['dateTooEarly']) return 'La fecha debe ser posterior a 1900';\n      if (control.errors['futureDate']) return 'La fecha no puede ser futura';\n    }\n    return '';\n  }\n\n  /**\n   * Formatea el RUT mientras el usuario escribe\n   * @param rut RUT a formatear\n   * @returns RUT formateado con puntos y guión\n   */\n  formatRut(rut: string): string {\n    if (!rut) return '';\n    rut = rut.replace(/\\./g, '').replace(/-/g, '');\n    if (rut.length > 1) {\n      return rut.slice(0, -1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') + '-' + rut.slice(-1);\n    }\n    return rut;\n  }\n\n  /**\n   * Valida el RUT ingresado\n   * @param rut RUT a validar\n   * @returns boolean indicando si el RUT es válido\n   */\n  validateRut(rut: string): boolean {\n    // Remove any dots and dash before validation\n    rut = rut.replace(/\\./g, '').replace(/-/g, '');\n    \n    if (!/^[0-9]{7,8}[0-9Kk]$/.test(rut)) return false;\n\n    const verificationDigit = rut.slice(-1).toUpperCase();\n    const numbers = rut.slice(0, -1);\n    \n    let sum = 0;\n    let multiplier = 2;\n    \n    for (let i = numbers.length - 1; i >= 0; i--) {\n      sum += parseInt(numbers[i]) * multiplier;\n      multiplier = multiplier === 7 ? 2 : multiplier + 1;\n    }\n    \n    const expectedDigit = 11 - (sum % 11);\n    let expectedVerificationDigit: string;\n    \n    if (expectedDigit === 11) expectedVerificationDigit = '0';\n    else if (expectedDigit === 10) expectedVerificationDigit = 'K';\n    else expectedVerificationDigit = expectedDigit.toString();\n    if (!/^[0-9Kk.-]+$/.test(rut)) return false;\n    \n    return verificationDigit === expectedVerificationDigit;\n  }\n\n  /**\n   * Formatea el RUT mientras el usuario escribe\n   * @param event Evento de entrada\n   * @description Formatea el RUT ingresado para que cumpla con el formato estándar\n   */\n  onRutInput(event: any) {\n    const input = event.target;\n    let rut = input.value.replace(/\\./g, '').replace(/-/g, '');\n    rut = rut.replace(/[^0-9kK]/g, '');\n    \n    if (rut.length > 0) {\n      let result = rut;\n      if (rut.length > 1) {\n        result = rut.slice(0, -1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') + '-' + rut.slice(-1);\n      }\n      input.value = result;\n      this.searchRut = result;\n    }\n  }\n\n  /**\n   * Busca un paciente por RUT\n   * @description Actualiza el formulario con los datos del paciente si se encuentra\n   */\n  searchPaciente() {\n    const cleanRut = this.searchRut.replace(/\\./g, '').replace(/-/g, '');\n    \n    if (!this.validateRut(cleanRut)) {\n      this.showError = true;\n      this.message = 'RUT inválido';\n      return;\n    }\n\n    this.apiService.getPacienteByRut(cleanRut).subscribe({\n      next: (paciente) => {\n        if (paciente) {\n          // Format the date to YYYY-MM-DD for the input field\n          const fechaNacimiento = paciente.fechaNacimiento ? \n            new Date(paciente.fechaNacimiento).toISOString().split('T')[0] : '';\n          this.pacienteId = paciente.id;\n\n          this.pacienteForm.patchValue({\n            ...paciente,\n            rut: this.formatRut(paciente.rut),\n            fecha_nacimiento: fechaNacimiento  // Use the formatted date\n          });\n          this.showSuccess = true;\n          this.message = 'Paciente encontrado';\n        } else {\n          this.showError = true;\n          this.message = 'Paciente no encontrado';\n        }\n      },\n      error: (error) => {\n        console.error('Error searching paciente:', error);\n        this.showError = true;\n        this.message = 'Error al buscar paciente';\n      }\n    });\n  }\n\n  /**\n   * Maneja el envío del formulario\n   * @description Crea o actualiza un paciente según los datos del formulario\n   */\n  onSubmit() {\n    if (this.pacienteForm.invalid) {\n      Object.keys(this.pacienteForm.controls).forEach(key => {\n        const control = this.pacienteForm.get(key);\n        if (control?.invalid) {\n          control.markAsTouched();\n        }\n      });\n      return;\n    }\n\n    this.isLoading = true;\n    this.showError = false;\n    this.showSuccess = false;\n\n    try {\n      const formValue = this.pacienteForm.value;\n      const paciente: Paciente = {\n        id: this.message === 'Paciente encontrado' ? this.pacienteId : 0,\n        nombres: formValue.nombres,\n        apellidos: formValue.apellidos,\n        rut: formValue.rut.replace(/\\./g, '').replace(/-/g, ''),\n        telefono: formValue.telefono,\n        email: formValue.email,\n        fechaNacimiento: formValue.fecha_nacimiento,\n        genero: formValue.genero,\n        direccion: formValue.direccion\n      };\n\n      if (this.message === 'Paciente encontrado') {\n        this.apiService.updatePaciente(paciente).subscribe({\n          next: () => {\n            this.toastService.show('Paciente actualizado exitosamente', 'success');\n            this.resetForm();\n          },\n          error: (error) => {\n            console.error('Error creating paciente:', error);\n            this.showError = true;\n            this.message = 'Error al registrar paciente';\n          },\n          complete: () => {\n            this.isLoading = false;\n          }\n        });\n      } else {\n        this.apiService.createPaciente(paciente).subscribe({\n          next: () => {\n            this.toastService.show('Paciente creado exitosamente', 'success');\n            this.resetForm();\n          },\n          error: (error) => {\n            console.error('Error creating paciente:', error);\n            this.showError = true;\n            this.message = 'Error al registrar paciente';\n          },\n          complete: () => {\n            this.isLoading = false;\n          }\n        });\n      }\n    } catch (error) {\n      this.showError = true;\n      this.message = 'Error al registrar paciente';\n      console.error(error);\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * Reinicia el formulario\n   * @description Limpia todos los campos y mensajes\n   */\n  resetForm() {\n    this.pacienteForm.reset();\n    this.showError = false;\n    this.showSuccess = false;\n    this.message = '';\n    this.searchRut = '';\n  }\n\n  /**\n   * Validador personalizado para el dominio del email\n   * @returns ValidatorFn para validar que el email tenga un dominio válido\n   */\n  emailDomainValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const email = control.value;\n      if (!email) return null;\n      \n      if (!email.includes('@')) return { invalidEmail: true };\n\n      const [localPart, domain] = email.split('@');\n      \n      if (!domain || !domain.includes('.')) return { invalidDomain: true };\n\n      const parts = domain.split('.');\n      const tld = parts[parts.length - 1];\n      \n      if (tld.length  {\n      if (!control.value) {\n        return null;\n      }\n\n      const inputDate = new Date(control.value);\n      const today = new Date();\n      const minDate = new Date('1900-01-01');\n\n      if (isNaN(inputDate.getTime())) {\n        return { invalidDate: true };\n      }\n\n      if (inputDate  today) {\n        return { futureDate: true };\n      }\n\n      return null;\n    };\n  }\n}\n    \n\n    \n        \n  \n    Buscar Paciente\n    \n      \n      Buscar\n    \n  \n\n  \n    Datos del Paciente\n    \n      {{ pacienteForm.get('id')?.value ? 'Actualizar' : 'Registrar' }} Paciente\n\n      \n        \n          Nombres\n          \n          \n            Nombres son requeridos\n          \n        \n\n        \n          Apellidos\n          \n          \n            Apellidos son requeridos\n          \n        \n      \n\n      \n        \n          RUT\n          \n          \n            RUT inválido\n          \n        \n\n        \n          Teléfono\n          \n          \n            Teléfono inválido\n          \n        \n      \n\n      \n        \n          Correo Electrónico\n          \n          \n            Correo electrónico inválido\n          \n        \n\n        \n          Fecha de Nacimiento\n          \n          \n            {{ getErrorMessage('fecha_nacimiento') }}\n          \n        \n      \n\n      \n        \n          Género\n          \n            Seleccione género\n            Masculino\n            Femenino\n            Otro\n          \n          \n            Género requerido\n          \n        \n\n        \n          Dirección\n          \n          \n            Dirección requerida\n          \n        \n      \n\n      \n        {{ message }}\n        {{ message }}\n      \n\n      \n        \n          Cancelar\n        \n        \n          {{ isLoading ? 'Guardando...' : 'Guardar Paciente' }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./inscripcion.component.css\n                \n                .inscripcion-container {\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n.search-section {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  margin-bottom: 2rem;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.search-section h2 {\n  margin: 0 0 1rem 0;\n  color: #2d3748;\n}\n\n.search-box {\n  display: flex;\n  gap: 1rem;\n}\n\n.search-input {\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  font-size: 1rem;\n}\n\n.search-btn, .reset-btn {\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.search-btn {\n  background-color: #4299e1;\n  color: white;\n}\n\n.search-btn:hover {\n  background-color: #3182ce;\n}\n\n.reset-btn {\n  background-color: #e2e8f0;\n  color: #4a5568;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.reset-btn:hover {\n  background-color: #cbd5e0;\n}\n\n.patient-form {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.patient-form h2 {\n  margin: 0 0 2rem 0;\n  color: #2d3748;\n}\n\n.form-row {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  margin-bottom: 1.5rem;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group label {\n  margin-bottom: 0.5rem;\n  color: #4a5568;\n  font-weight: 500;\n}\n\n.form-group input,\n.form-group select {\n  padding: 0.75rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  font-size: 1rem;\n  transition: all 0.2s;\n}\n\n.form-group input:focus,\n.form-group select:focus {\n  outline: none;\n  border-color: #4299e1;\n  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n}\n\n.form-group input.error,\n.form-group select.error {\n  border-color: #e53e3e;\n}\n\n.error-message {\n  color: #e53e3e;\n  font-size: 0.875rem;\n  margin-top: 0.25rem;\n}\n\n.message-container {\n  margin: 1.5rem 0;\n}\n\n.error-alert,\n.success-alert {\n  padding: 1rem;\n  border-radius: 6px;\n  margin-bottom: 1rem;\n}\n\n.error-alert {\n  background-color: #fff5f5;\n  color: #c53030;\n  border: 1px solid #feb2b2;\n}\n\n.success-alert {\n  background-color: #f0fff4;\n  color: #2f855a;\n  border: 1px solid #9ae6b4;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  margin-top: 2rem;\n}\n\n.reset-btn {\n  padding: 0.75rem 2rem;\n  background-color: #e2e8f0;\n  color: #4a5568;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.reset-btn:hover {\n  background-color: #cbd5e0;\n}\n\n.submit-btn {\n  padding: 0.75rem 2rem;\n  background-color: #48bb78;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.submit-btn:hover {\n  background-color: #38a169;\n}\n\n.submit-btn:disabled {\n  background-color: #a0aec0;\n  cursor: not-allowed;\n}\n\n@media (max-width: 768px) {\n  .form-row {\n    grid-template-columns: 1fr;\n    gap: 1rem;\n  }\n\n  .search-box {\n    flex-direction: column;\n  }\n\n  .search-btn,\n  .reset-btn {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Buscar Paciente                Buscar            Datos del Paciente          {{ pacienteForm.get(\\'id\\')?.value ? \\'Actualizar\\' : \\'Registrar\\' }} Paciente                        Nombres                                Nombres son requeridos                                    Apellidos                                Apellidos son requeridos                                                RUT                                RUT inválido                                    Teléfono                                Teléfono inválido                                                Correo Electrónico                                Correo electrónico inválido                                    Fecha de Nacimiento                                {{ getErrorMessage(\\'fecha_nacimiento\\') }}                                                Género                      Seleccione género            Masculino            Femenino            Otro                                Género requerido                                    Dirección                                Dirección requerida                                      {{ message }}        {{ message }}                              Cancelar                          {{ isLoading ? \\'Guardando...\\' : \\'Guardar Paciente\\' }}                    '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InscripcionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/landing-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja la página de inicio\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                LoginModalComponent\n                                RegisterModalComponent\n                \n            \n\n            \n                styleUrls\n                ./landing-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showLoginModal\n                            \n                            \n                                showRegisterModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scrollToFeatures\n                            \n                            \n                                toggleLoginModal\n                            \n                            \n                                toggleRegisterModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToFeatures\n                        \n                    \n                \n            \n            \n                \nscrollToFeatures()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing-page/landing-page.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Desplaza la vista a la sección de características\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLoginModal\n                        \n                    \n                \n            \n            \n                \ntoggleLoginModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing-page/landing-page.component.ts:27\n                        \n                    \n\n\n            \n                \n                        Alterna la visibilidad del modal de inicio de sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRegisterModal\n                        \n                    \n                \n            \n            \n                \ntoggleRegisterModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing-page/landing-page.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Alterna la visibilidad del modal de registro\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showLoginModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/landing-page/landing-page.component.ts:19\n                        \n                    \n\n            \n                \n                    Indica si el modal de inicio de sesión está visible\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRegisterModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/landing-page/landing-page.component.ts:21\n                        \n                    \n\n            \n                \n                    Indica si el modal de registro está visible\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginModalComponent } from '../components/login-modal/login-modal.component';\nimport { RegisterModalComponent } from '../components/register-modal/register-modal.component';\n\n/**\n * Componente que maneja la página de inicio\n * @description Muestra la página principal y gestiona los modales de inicio de sesión y registro\n */\n@Component({\n  selector: 'app-landing-page',\n  standalone: true,\n  imports: [CommonModule, LoginModalComponent, RegisterModalComponent],\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent {\n  /** Indica si el modal de inicio de sesión está visible */\n  showLoginModal = false;\n  /** Indica si el modal de registro está visible */\n  showRegisterModal = false;\n\n  /**\n   * Alterna la visibilidad del modal de inicio de sesión\n   * @description Cierra el modal de registro si está abierto\n   */\n  toggleLoginModal() {\n    this.showLoginModal = !this.showLoginModal;\n    if (this.showRegisterModal) this.showRegisterModal = false;\n  }\n\n  /**\n   * Alterna la visibilidad del modal de registro\n   * @description Cierra el modal de inicio de sesión si está abierto\n   */\n  toggleRegisterModal() {\n    this.showRegisterModal = !this.showRegisterModal;\n    if (this.showLoginModal) this.showLoginModal = false;\n  }\n\n  /**\n   * Desplaza la vista a la sección de características\n   * @description Realiza un desplazamiento suave hacia la sección de características\n   */\n  scrollToFeatures() {\n    const featuresSection = document.getElementById('features');\n    if (featuresSection) {\n      featuresSection.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Hospital Scheduler\n      \n        Iniciar Sesión\n        Registrarse\n      \n    \n  \n\n  \n    \n      Gestión de Citas Médicas\n      Sistema integral para la administración de citas y horarios médicos\n      \n        Comenzar Ahora\n        Saber Más\n      \n    \n\n    \n      Características Principales\n      \n        \n          📅\n          Gestión de Citas\n          Programa y administra citas médicas de manera eficiente\n        \n        \n          👨‍⚕️\n          Perfil Médico\n          Gestiona la información y disponibilidad de los médicos\n        \n        \n          📊\n          Reportes\n          Genera informes detallados de las citas y atenciones\n        \n        \n          🔔\n          Recordatorios\n          Sistema de notificaciones para citas próximas\n        \n      \n    \n  \n\n  \n    &copy; 2024 Hospital Scheduler. Todos los derechos reservados.\n  \n\n  \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./landing-page.component.css\n                \n                .landing-page {\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;\n}\n\n.header {\n  background-color: white;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  padding: 1rem 2rem;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  z-index: 100;\n}\n\n.nav-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.logo {\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #2c5282;\n}\n\n.nav-links {\n  display: flex;\n  gap: 2rem;\n  align-items: center;\n  margin-right: 3rem;\n}\n\n.nav-links a {\n  text-decoration: none;\n  color: #4a5568;\n  font-weight: 500;\n  transition: color 0.2s;\n}\n\n.nav-links a:hover {\n  color: #2c5282;\n}\n\n.register-btn {\n  background-color: #4299e1;\n  color: white !important;\n  padding: 0.5rem 1.5rem;\n  border-radius: 6px;\n  transition: background-color 0.2s !important;\n}\n\n.register-btn:hover {\n  background-color: #3182ce !important;\n}\n\n.main-content {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n  padding-top: 5rem;\n}\n\n.hero {\n  background: linear-gradient(135deg, #ebf8ff 0%, #bee3f8 100%);\n  padding: 6rem 2rem;\n  text-align: center;\n}\n\n.hero h1 {\n  font-size: 3rem;\n  color: #2d3748;\n  margin-bottom: 1rem;\n}\n\n.hero p {\n  font-size: 1.25rem;\n  color: #4a5568;\n  margin-bottom: 2rem;\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.cta-buttons {\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n}\n\n.cta-primary {\n  background-color: #4299e1;\n  color: white;\n  padding: 0.75rem 2rem;\n  border-radius: 6px;\n  text-decoration: none;\n  font-weight: 500;\n  transition: background-color 0.2s;\n}\n\n.cta-primary:hover {\n  background-color: #3182ce;\n}\n\n.cta-secondary {\n  background-color: white;\n  color: #4299e1;\n  padding: 0.75rem 2rem;\n  border-radius: 6px;\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.2s;\n}\n\n.cta-secondary:hover {\n  background-color: #ebf8ff;\n}\n\n.features {\n  padding: 4rem 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.features h2 {\n  text-align: center;\n  font-size: 2rem;\n  color: #2d3748;\n  margin-bottom: 3rem;\n}\n\n.feature-grid {\n  display: grid;\n  gap: 2rem;\n  grid-template-columns: 1fr;\n}\n\n/* Medium screens (tablets and up) */\n@media (min-width: 768px) {\n  .feature-grid {\n    grid-template-columns: repeat(2, 1fr);\n  }\n}\n\n.feature-card {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n  text-align: center;\n  transition: transform 0.2s;\n}\n\n.feature-card:hover {\n  transform: translateY(-5px);\n}\n\n.feature-icon {\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n}\n\n.feature-card h3 {\n  color: #2d3748;\n  margin-bottom: 0.5rem;\n}\n\n.feature-card p {\n  color: #4a5568;\n  line-height: 1.5;\n}\n\n.footer {\n  background-color: #2d3748;\n  color: white;\n  text-align: center;\n  padding: 2rem;\n  margin-top: auto;\n}\n\n@media (max-width: 768px) {\n  .hero h1 {\n    font-size: 2rem;\n  }\n  \n  .hero p {\n    font-size: 1rem;\n  }\n  \n  .nav-container {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .nav-links {\n    flex-direction: column;\n    width: 100%;\n  }\n  \n  .register-btn {\n    width: 100%;\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Hospital Scheduler              Iniciar Sesión        Registrarse                        Gestión de Citas Médicas      Sistema integral para la administración de citas y horarios médicos              Comenzar Ahora        Saber Más                    Características Principales                        📅          Gestión de Citas          Programa y administra citas médicas de manera eficiente                          👨‍⚕️          Perfil Médico          Gestiona la información y disponibilidad de los médicos                          📊          Reportes          Genera informes detallados de las citas y atenciones                          🔔          Recordatorios          Sistema de notificaciones para citas próximas                          © 2024 Hospital Scheduler. Todos los derechos reservados.          '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginRequest.html":{"url":"interfaces/LoginRequest.html","title":"interface - LoginRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            rut\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nexport interface LoginRequest {\n  rut: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  roles: Rol[];\n}\n\nexport interface Funcionario {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  password: string;\n  especialidad: Especialidad;\n  roles: Rol[];\n}\n\nexport interface Paciente {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  fechaNacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\nexport interface Cita {\n  id: number;\n  paciente: Paciente;\n  segmentoHorario: SegmentoHorario;\n}\n\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fechaHoraInicio: string;\n  fechaHoraFin: string;\n  free: boolean;\n  funcionario: Funcionario;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Servicio para interactuar con el API del Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  // private readonly baseUrl = 'http://3.83.231.69:8080/api';\n  private readonly baseUrl = 'http://localhost:8080/api';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Manejador de errores para las solicitudes API\n   * @param error Respuesta de error HTTP\n   * @returns Observable con el mensaje de error\n   */\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'An error occurred';\n    \n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    \n    return throwError(() => new Error(errorMessage));\n  }\n\n  /**\n   * Authenticate a funcionario\n   * @param credentials Credenciales de inicio de sesión\n   * @returns Observable con la respuesta de inicio de sesión\n   */\n  login(credentials: LoginRequest): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios/login`, credentials)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all funcionarios\n   * @returns Observable con el array de funcionarios\n   */\n  getFuncionarios(): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new funcionario\n   * @param funcionario Datos del funcionario\n   * @returns Observable con el funcionario creado\n   */\n  createFuncionario(funcionario: Funcionario): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by ID\n   * @param id ID del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario\n   * @param id Funcionario ID\n   * @param funcionario Datos actualizados del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionario(id: number, funcionario: Funcionario): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete funcionario\n   * @param id ID del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteFuncionario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by RUT\n   * @param rut RUT del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all pacientes\n   * @returns Observable con el array de pacientes\n   */\n  getPacientes(): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  createPaciente(paciente: Paciente): Observable {\n    return this.http.post(`${this.baseUrl}/pacientes`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update a paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  updatePaciente(paciente: Paciente): Observable {\n    return this.http.put(`${this.baseUrl}/pacientes/${paciente.id}`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Assign segmento horario to paciente\n   * @param pacienteId Paciente ID\n   * @param segmentoHorarioId ID del segmento horario\n   * @returns Observable con la cita creada\n   */\n  assignSegmentoToPaciente(pacienteId: number, segmentoHorarioId: number): Observable {\n    const params = new HttpParams()\n      .set('pacienteId', pacienteId.toString())\n      .set('segmentoHorarioId', segmentoHorarioId.toString());\n\n    return this.http.post(`${this.baseUrl}/citas/assign`, null, { params })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all especialidades\n   * @returns Observable con el array de especialidades\n   */\n  getEspecialidades(): Observable {\n    return this.http.get(`${this.baseUrl}/especialidades`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all roles\n   * @returns Observable con el array de roles\n   */\n  getRoles(): Observable {\n    return this.http.get(`${this.baseUrl}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get roles for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de roles\n   */\n  getFuncionarioRoles(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Check if funcionario has a specific role\n   * @param funcionarioId Funcionario ID\n   * @param rolNombre Nombre del rol\n   * @returns Observable con el resultado booleano\n   */\n  hasRole(funcionarioId: number, rolNombre: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles/${rolNombre}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all segmentos horarios for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de segmentos horarios\n   */\n  getSegmentosHorarioByFuncionarioId(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/segmentos`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get segmento horario by ID\n   * @param id ID del segmento horario\n   * @returns Observable con los datos del segmento horario\n   */\n  getSegmentoHorarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new segmento horario\n   * @param segmento Datos del segmento horario\n   * @returns Observable con el segmento horario creado\n   */\n  createSegmentoHorario(segmento: SegmentoHorario): Observable {\n    return this.http.post(`${this.baseUrl}/segmentos-horarios`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update segmento horario\n   * @param id Segmento horario ID\n   * @param segmento Datos actualizados del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  updateSegmentoHorario(id: number, segmento: SegmentoHorario): Observable {\n    return this.http.put(`${this.baseUrl}/segmentos-horarios/${id}`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete segmento horario\n   * @param id ID del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteSegmentoHorario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario password\n   * @param id Funcionario ID\n   * @param newPassword Nueva contraseña\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionarioPassword(id: number, newPassword: string): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}/password`, { password: newPassword })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get paciente by RUT\n   * @param rut RUT del paciente\n   * @returns Observable con los datos del paciente\n   */\n  getPacienteByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResponse.html":{"url":"interfaces/LoginResponse.html","title":"interface - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apellidos\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombres\n                                        \n                                \n                                \n                                        \n                                            roles\n                                        \n                                \n                                \n                                        \n                                            rut\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apellidos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apellidos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombres:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        roles\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        roles:     Rol[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Rol[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nexport interface LoginRequest {\n  rut: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  roles: Rol[];\n}\n\nexport interface Funcionario {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  password: string;\n  especialidad: Especialidad;\n  roles: Rol[];\n}\n\nexport interface Paciente {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  fechaNacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\nexport interface Cita {\n  id: number;\n  paciente: Paciente;\n  segmentoHorario: SegmentoHorario;\n}\n\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fechaHoraInicio: string;\n  fechaHoraFin: string;\n  free: boolean;\n  funcionario: Funcionario;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Servicio para interactuar con el API del Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  // private readonly baseUrl = 'http://3.83.231.69:8080/api';\n  private readonly baseUrl = 'http://localhost:8080/api';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Manejador de errores para las solicitudes API\n   * @param error Respuesta de error HTTP\n   * @returns Observable con el mensaje de error\n   */\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'An error occurred';\n    \n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    \n    return throwError(() => new Error(errorMessage));\n  }\n\n  /**\n   * Authenticate a funcionario\n   * @param credentials Credenciales de inicio de sesión\n   * @returns Observable con la respuesta de inicio de sesión\n   */\n  login(credentials: LoginRequest): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios/login`, credentials)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all funcionarios\n   * @returns Observable con el array de funcionarios\n   */\n  getFuncionarios(): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new funcionario\n   * @param funcionario Datos del funcionario\n   * @returns Observable con el funcionario creado\n   */\n  createFuncionario(funcionario: Funcionario): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by ID\n   * @param id ID del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario\n   * @param id Funcionario ID\n   * @param funcionario Datos actualizados del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionario(id: number, funcionario: Funcionario): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete funcionario\n   * @param id ID del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteFuncionario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by RUT\n   * @param rut RUT del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all pacientes\n   * @returns Observable con el array de pacientes\n   */\n  getPacientes(): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  createPaciente(paciente: Paciente): Observable {\n    return this.http.post(`${this.baseUrl}/pacientes`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update a paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  updatePaciente(paciente: Paciente): Observable {\n    return this.http.put(`${this.baseUrl}/pacientes/${paciente.id}`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Assign segmento horario to paciente\n   * @param pacienteId Paciente ID\n   * @param segmentoHorarioId ID del segmento horario\n   * @returns Observable con la cita creada\n   */\n  assignSegmentoToPaciente(pacienteId: number, segmentoHorarioId: number): Observable {\n    const params = new HttpParams()\n      .set('pacienteId', pacienteId.toString())\n      .set('segmentoHorarioId', segmentoHorarioId.toString());\n\n    return this.http.post(`${this.baseUrl}/citas/assign`, null, { params })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all especialidades\n   * @returns Observable con el array de especialidades\n   */\n  getEspecialidades(): Observable {\n    return this.http.get(`${this.baseUrl}/especialidades`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all roles\n   * @returns Observable con el array de roles\n   */\n  getRoles(): Observable {\n    return this.http.get(`${this.baseUrl}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get roles for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de roles\n   */\n  getFuncionarioRoles(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Check if funcionario has a specific role\n   * @param funcionarioId Funcionario ID\n   * @param rolNombre Nombre del rol\n   * @returns Observable con el resultado booleano\n   */\n  hasRole(funcionarioId: number, rolNombre: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles/${rolNombre}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all segmentos horarios for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de segmentos horarios\n   */\n  getSegmentosHorarioByFuncionarioId(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/segmentos`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get segmento horario by ID\n   * @param id ID del segmento horario\n   * @returns Observable con los datos del segmento horario\n   */\n  getSegmentoHorarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new segmento horario\n   * @param segmento Datos del segmento horario\n   * @returns Observable con el segmento horario creado\n   */\n  createSegmentoHorario(segmento: SegmentoHorario): Observable {\n    return this.http.post(`${this.baseUrl}/segmentos-horarios`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update segmento horario\n   * @param id Segmento horario ID\n   * @param segmento Datos actualizados del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  updateSegmentoHorario(id: number, segmento: SegmentoHorario): Observable {\n    return this.http.put(`${this.baseUrl}/segmentos-horarios/${id}`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete segmento horario\n   * @param id ID del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteSegmentoHorario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario password\n   * @param id Funcionario ID\n   * @param newPassword Nueva contraseña\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionarioPassword(id: number, newPassword: string): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}/password`, { password: newPassword })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get paciente by RUT\n   * @param rut RUT del paciente\n   * @returns Observable con los datos del paciente\n   */\n  getPacienteByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NavItem.html":{"url":"interfaces/NavItem.html","title":"interface - NavItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NavItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/dashboard.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que define la estructura de un elemento de navegación\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            requiredRole\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Descripción de la funcionalidad\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Ícono a mostrar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Etiqueta del elemento\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Ruta del componente\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requiredRole\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requiredRole:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol requerido para acceder\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterLink, RouterOutlet, RouterLinkActive } from '@angular/router';\nimport { ToastService } from '../services/toast.service';\nimport { ProfileModalComponent } from '../components/profile-modal/profile-modal.component';\nimport { ApiService, Rol } from '../services/api.service';\n\n/**\n * Interfaz que define la estructura de un elemento de navegación\n */\ninterface NavItem {\n  /** Ruta del componente */\n  path: string;\n  /** Ícono a mostrar */\n  icon: string;\n  /** Etiqueta del elemento */\n  label: string;\n  /** Descripción de la funcionalidad */\n  description: string;\n  /** Rol requerido para acceder */\n  requiredRole: string;\n}\n\n/**\n * Componente que maneja el panel principal de la aplicación\n * @description Muestra la navegación principal y gestiona el acceso basado en roles\n */\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [\n    CommonModule, \n    RouterLink, \n    RouterOutlet, \n    RouterLinkActive,\n    ProfileModalComponent\n  ],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  /** Usuario actualmente autenticado */\n  currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n  /** Indica si el menú de usuario está visible */\n  showUserMenu = false;\n  showProfileModal = false;\n\n  /** Lista de elementos de navegación con sus permisos */\n  navItems: NavItem[] = [\n    {\n      path: 'inscripcion',\n      icon: '👥',\n      label: 'Inscripción',\n      description: 'Gestiona los pacientes',\n      requiredRole: 'USA_INSCRIPCION'\n    },\n    {\n      path: 'agenda',\n      icon: '📅',\n      label: 'Agenda',\n      description: 'Gestiona los horarios',\n      requiredRole: 'USA_AGENDA'\n    },\n    {\n      path: 'citas',\n      icon: '🕒',\n      label: 'Citas',\n      description: 'Administra las citas médicas',\n      requiredRole: 'USA_CITAS'\n    }\n  ];\n\n  constructor(\n    private router: Router,\n    private apiService: ApiService,\n    private toastService: ToastService\n  ) {}\n\n  /**\n   * Obtiene los elementos de navegación autorizados para el usuario actual\n   * @returns Lista filtrada de elementos de navegación según los roles del usuario\n   */\n  get authorizedNavItems(): NavItem[] {\n    return this.navItems.filter(item => \n      this.currentUser.roles.some((role: Rol) => role.nombre === item.requiredRole)\n    );\n  }\n\n  /**\n   * Obtiene las iniciales del usuario actual\n   * @returns String con las iniciales del nombre y apellido\n   */\n  getUserInitials(): string {\n    return `${this.currentUser.nombres?.[0] || ''}${this.currentUser.apellidos?.[0] || ''}`;\n  }\n\n  /**\n   * Alterna la visibilidad del menú de usuario\n   * @description Muestra u oculta el menú desplegable\n   */\n  toggleUserMenu() {\n    this.showUserMenu = !this.showUserMenu;\n  }\n\n  /**\n   * Cierra la sesión del usuario\n   * @description Limpia el localStorage y redirige al inicio\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    \n    const now = new Date();\n    const timeStr = now.toLocaleString('es-CL', { \n      hour: '2-digit', \n      minute: '2-digit',\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n    this.toastService.show(`Cierre de sesión exitoso @ ${timeStr}`, 'success');\n    \n    this.router.navigate(['/']);\n  }\n\n  /**\n   * Obtiene el nombre completo del usuario\n   * @returns String con el nombre completo del usuario\n   */\n  getUserFullName(): string {\n    return `${this.currentUser.nombres} ${this.currentUser.apellidos}`;\n  }\n\n  /**\n   * Obtiene la especialidad del usuario\n   * @returns String con la especialidad del usuario\n   */\n  getUserSpecialty(): string {\n    return this.currentUser.especialidad;\n  }\n\n  /**\n   * Abre el modal de perfil\n   * @description Muestra el modal de perfil\n   */\n  openProfileModal() {\n    this.showProfileModal = true;\n  }\n\n  /**\n   * Cierra el modal de perfil\n   * @description Oculta el modal de perfil\n   */\n  closeProfileModal() {\n    this.showProfileModal = false;\n  }\n\n  /**\n   * Gets the current route path\n   * @returns The current route path\n   */\n  getCurrentPath(): string {\n    return this.router.url.split('/')[2] || 'agenda';  // Default to 'agenda' if no path\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paciente.html":{"url":"interfaces/Paciente.html","title":"interface - Paciente","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Paciente\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apellidos\n                                        \n                                \n                                \n                                        \n                                            direccion\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            fechaNacimiento\n                                        \n                                \n                                \n                                        \n                                            genero\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombres\n                                        \n                                \n                                \n                                        \n                                            rut\n                                        \n                                \n                                \n                                        \n                                            telefono\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apellidos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apellidos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direccion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direccion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaNacimiento\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaNacimiento:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genero:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombres:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        telefono\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        telefono:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nexport interface LoginRequest {\n  rut: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  roles: Rol[];\n}\n\nexport interface Funcionario {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  password: string;\n  especialidad: Especialidad;\n  roles: Rol[];\n}\n\nexport interface Paciente {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  fechaNacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\nexport interface Cita {\n  id: number;\n  paciente: Paciente;\n  segmentoHorario: SegmentoHorario;\n}\n\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fechaHoraInicio: string;\n  fechaHoraFin: string;\n  free: boolean;\n  funcionario: Funcionario;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Servicio para interactuar con el API del Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  // private readonly baseUrl = 'http://3.83.231.69:8080/api';\n  private readonly baseUrl = 'http://localhost:8080/api';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Manejador de errores para las solicitudes API\n   * @param error Respuesta de error HTTP\n   * @returns Observable con el mensaje de error\n   */\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'An error occurred';\n    \n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    \n    return throwError(() => new Error(errorMessage));\n  }\n\n  /**\n   * Authenticate a funcionario\n   * @param credentials Credenciales de inicio de sesión\n   * @returns Observable con la respuesta de inicio de sesión\n   */\n  login(credentials: LoginRequest): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios/login`, credentials)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all funcionarios\n   * @returns Observable con el array de funcionarios\n   */\n  getFuncionarios(): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new funcionario\n   * @param funcionario Datos del funcionario\n   * @returns Observable con el funcionario creado\n   */\n  createFuncionario(funcionario: Funcionario): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by ID\n   * @param id ID del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario\n   * @param id Funcionario ID\n   * @param funcionario Datos actualizados del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionario(id: number, funcionario: Funcionario): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete funcionario\n   * @param id ID del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteFuncionario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by RUT\n   * @param rut RUT del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all pacientes\n   * @returns Observable con el array de pacientes\n   */\n  getPacientes(): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  createPaciente(paciente: Paciente): Observable {\n    return this.http.post(`${this.baseUrl}/pacientes`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update a paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  updatePaciente(paciente: Paciente): Observable {\n    return this.http.put(`${this.baseUrl}/pacientes/${paciente.id}`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Assign segmento horario to paciente\n   * @param pacienteId Paciente ID\n   * @param segmentoHorarioId ID del segmento horario\n   * @returns Observable con la cita creada\n   */\n  assignSegmentoToPaciente(pacienteId: number, segmentoHorarioId: number): Observable {\n    const params = new HttpParams()\n      .set('pacienteId', pacienteId.toString())\n      .set('segmentoHorarioId', segmentoHorarioId.toString());\n\n    return this.http.post(`${this.baseUrl}/citas/assign`, null, { params })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all especialidades\n   * @returns Observable con el array de especialidades\n   */\n  getEspecialidades(): Observable {\n    return this.http.get(`${this.baseUrl}/especialidades`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all roles\n   * @returns Observable con el array de roles\n   */\n  getRoles(): Observable {\n    return this.http.get(`${this.baseUrl}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get roles for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de roles\n   */\n  getFuncionarioRoles(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Check if funcionario has a specific role\n   * @param funcionarioId Funcionario ID\n   * @param rolNombre Nombre del rol\n   * @returns Observable con el resultado booleano\n   */\n  hasRole(funcionarioId: number, rolNombre: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles/${rolNombre}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all segmentos horarios for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de segmentos horarios\n   */\n  getSegmentosHorarioByFuncionarioId(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/segmentos`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get segmento horario by ID\n   * @param id ID del segmento horario\n   * @returns Observable con los datos del segmento horario\n   */\n  getSegmentoHorarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new segmento horario\n   * @param segmento Datos del segmento horario\n   * @returns Observable con el segmento horario creado\n   */\n  createSegmentoHorario(segmento: SegmentoHorario): Observable {\n    return this.http.post(`${this.baseUrl}/segmentos-horarios`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update segmento horario\n   * @param id Segmento horario ID\n   * @param segmento Datos actualizados del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  updateSegmentoHorario(id: number, segmento: SegmentoHorario): Observable {\n    return this.http.put(`${this.baseUrl}/segmentos-horarios/${id}`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete segmento horario\n   * @param id ID del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteSegmentoHorario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario password\n   * @param id Funcionario ID\n   * @param newPassword Nueva contraseña\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionarioPassword(id: number, newPassword: string): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}/password`, { password: newPassword })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get paciente by RUT\n   * @param rut RUT del paciente\n   * @returns Observable con los datos del paciente\n   */\n  getPacienteByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileModalComponent.html":{"url":"components/ProfileModalComponent.html","title":"component - ProfileModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profile-modal/profile-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente modal para la modificación del perfil de usuario\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            provideNgxMask()\n                \n            \n\n\n            \n                selector\n                app-profile-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgxMaskDirective\n                \n            \n\n\n            \n                styles\n                \n    .modal-backdrop {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n    }\n\n    .modal-content {\n      background: white;\n      border-radius: 8px;\n      width: 90%;\n      max-width: 800px;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      animation: slideIn 0.3s ease-out;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateY(-20px);\n        opacity: 0;\n      }\n      to {\n        transform: translateY(0);\n        opacity: 1;\n      }\n    }\n\n    .modal-header {\n      padding: 1.5rem;\n      border-bottom: 1px solid #e2e8f0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .modal-header h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.5rem;\n    }\n\n    .close-button {\n      background: none;\n      border: none;\n      font-size: 1.5rem;\n      color: #718096;\n      cursor: pointer;\n      padding: 0.5rem;\n      line-height: 1;\n    }\n\n    .modal-body {\n      padding: 1.5rem;\n    }\n\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      color: #4a5568;\n      font-weight: 500;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .form-group input.error {\n      border-color: #fc8181;\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .form-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      margin-top: 2rem;\n    }\n\n    .submit-btn, .cancel-btn {\n      padding: 0.75rem 1.5rem;\n      border-radius: 6px;\n      font-weight: 500;\n      cursor: pointer;\n      border: none;\n    }\n\n    .submit-btn {\n      background-color: #4299e1;\n      color: white;\n    }\n\n    .cancel-btn {\n      background-color: #e2e8f0;\n      color: #4a5568;\n    }\n\n    .submit-btn:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  \n            \n\n            \n                template\n                \n  \n    \n      Modificar Perfil\n      ×\n    \n    \n      \n        \n          \n            Nombres\n            \n            \n              {{ getErrorMessage('nombres') }}\n            \n          \n\n          \n            Apellidos\n            \n            \n              {{ getErrorMessage('apellidos') }}\n            \n          \n        \n\n        \n          \n            Correo Electrónico\n            \n            \n              {{ getErrorMessage('email') }}\n            \n          \n\n          \n            Especialidad\n            \n              Seleccione una especialidad\n              \n                {{ esp.nombre }}\n              \n            \n            \n              Especialidad es requerida\n            \n          \n        \n\n        \n          \n            Teléfono\n            \n            \n              {{ getErrorMessage('telefono') }}\n            \n          \n\n          \n            Nueva Contraseña (opcional)\n            \n            \n              {{ getErrorMessage('password') }}\n            \n          \n        \n\n        \n          \n            Confirmar Nueva Contraseña\n            \n            \n              Las contraseñas no coinciden\n            \n          \n        \n\n        \n          \n            Cancelar\n          \n          \n            {{ isLoading ? 'Guardando...' : 'Guardar Cambios' }}\n          \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                especialidades\n                            \n                            \n                                isLoading\n                            \n                            \n                                profileForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                emailDomainValidator\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                            \n                                    Private\n                                updateLocalStorage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, apiService: ApiService, toastService: ToastService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/profile-modal/profile-modal.component.ts:298\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de formularios reactivos\n\n                                                        \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de base de datos\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de notificaciones\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/profile-modal/profile-modal.component.ts:289\n                            \n                        \n                \n                    \n                        Usuario actual cuyos datos se están modificando\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/profile-modal/profile-modal.component.ts:291\n                            \n                        \n                \n                    \n                        Evento emitido para cerrar el modal\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:443\n                        \n                    \n\n\n            \n                \n                        Cierra el modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailDomainValidator\n                        \n                    \n                \n            \n            \n                \nemailDomainValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:337\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para el dominio del email\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                ValidatorFn para validar que el email tenga un dominio válido\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:418\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje de error para un campo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Mensaje de error correspondiente al tipo de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:408\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo del formulario es inválido\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo a verificar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el campo es inválido y ha sido tocado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:363\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:451\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:385\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para contraseñas coincidentes\n\n\n                        \n                            Returns :     (formGroup: FormGroup) => { passwordMismatch: boolean; }\n\n                        \n                            \n                                ValidatorFn que verifica que las contraseñas coincidan\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateLocalStorage\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateLocalStorage(updatedUser: Funcionario)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:519\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                updatedUser\n                                            \n                                                            Funcionario\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        especialidades\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile-modal/profile-modal.component.ts:298\n                        \n                    \n\n            \n                \n                    Lista de especialidades disponibles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile-modal/profile-modal.component.ts:296\n                        \n                    \n\n            \n                \n                    Indica si hay una operación en curso\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile-modal/profile-modal.component.ts:294\n                        \n                    \n\n            \n                \n                    Formulario reactivo para la edición del perfil\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { ApiService, Funcionario } from '../../services/api.service';\nimport { ToastService } from '../../services/toast.service';\nimport { NgxMaskDirective, provideNgxMask } from 'ngx-mask';\nimport { Router } from '@angular/router';\n\n/**\n * Componente modal para la modificación del perfil de usuario\n * @description Permite a los usuarios actualizar su información personal y contraseña\n */\n@Component({\n  selector: 'app-profile-modal',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, NgxMaskDirective],\n  providers: [provideNgxMask()],\n  template: `\n    \n      \n        \n          Modificar Perfil\n          ×\n        \n        \n          \n            \n              \n                Nombres\n                \n                \n                  {{ getErrorMessage('nombres') }}\n                \n              \n\n              \n                Apellidos\n                \n                \n                  {{ getErrorMessage('apellidos') }}\n                \n              \n            \n\n            \n              \n                Correo Electrónico\n                \n                \n                  {{ getErrorMessage('email') }}\n                \n              \n\n              \n                Especialidad\n                \n                  Seleccione una especialidad\n                  \n                    {{ esp.nombre }}\n                  \n                \n                \n                  Especialidad es requerida\n                \n              \n            \n\n            \n              \n                Teléfono\n                \n                \n                  {{ getErrorMessage('telefono') }}\n                \n              \n\n              \n                Nueva Contraseña (opcional)\n                \n                \n                  {{ getErrorMessage('password') }}\n                \n              \n            \n\n            \n              \n                Confirmar Nueva Contraseña\n                \n                \n                  Las contraseñas no coinciden\n                \n              \n            \n\n            \n              \n                Cancelar\n              \n              \n                {{ isLoading ? 'Guardando...' : 'Guardar Cambios' }}\n              \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .modal-backdrop {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n    }\n\n    .modal-content {\n      background: white;\n      border-radius: 8px;\n      width: 90%;\n      max-width: 800px;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      animation: slideIn 0.3s ease-out;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateY(-20px);\n        opacity: 0;\n      }\n      to {\n        transform: translateY(0);\n        opacity: 1;\n      }\n    }\n\n    .modal-header {\n      padding: 1.5rem;\n      border-bottom: 1px solid #e2e8f0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .modal-header h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.5rem;\n    }\n\n    .close-button {\n      background: none;\n      border: none;\n      font-size: 1.5rem;\n      color: #718096;\n      cursor: pointer;\n      padding: 0.5rem;\n      line-height: 1;\n    }\n\n    .modal-body {\n      padding: 1.5rem;\n    }\n\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      color: #4a5568;\n      font-weight: 500;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .form-group input.error {\n      border-color: #fc8181;\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .form-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      margin-top: 2rem;\n    }\n\n    .submit-btn, .cancel-btn {\n      padding: 0.75rem 1.5rem;\n      border-radius: 6px;\n      font-weight: 500;\n      cursor: pointer;\n      border: none;\n    }\n\n    .submit-btn {\n      background-color: #4299e1;\n      color: white;\n    }\n\n    .cancel-btn {\n      background-color: #e2e8f0;\n      color: #4a5568;\n    }\n\n    .submit-btn:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  `]\n})\nexport class ProfileModalComponent implements OnInit {\n  /** Usuario actual cuyos datos se están modificando */\n  @Input() currentUser!: any;\n  /** Evento emitido para cerrar el modal */\n  @Output() close = new EventEmitter();\n  \n  /** Formulario reactivo para la edición del perfil */\n  profileForm: FormGroup;\n  /** Indica si hay una operación en curso */\n  isLoading = false;\n  /** Lista de especialidades disponibles */\n  especialidades: any[] = [];\n\n  /**\n   * Constructor del componente\n   * @param fb Servicio de formularios reactivos\n   * @param apiService Servicio de base de datos\n   * @param toastService Servicio de notificaciones\n   */\n  constructor(\n    private fb: FormBuilder,\n    private apiService: ApiService,\n    private toastService: ToastService,\n    private router: Router\n  ) {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n    this.profileForm = this.fb.group({\n      nombres: ['', [Validators.required, Validators.minLength(4), Validators.pattern(/^[a-zA-Z]+$/)]],\n      apellidos: ['', [Validators.required, Validators.minLength(4), Validators.pattern(/^[a-zA-Z]+$/)]],\n      email: ['', [Validators.required, this.emailDomainValidator()]],\n      telefono: ['(56) 9 ', [Validators.required, Validators.minLength(11)]],\n      esp_id: ['', Validators.required],\n      password: ['', [\n        Validators.minLength(6),\n        Validators.maxLength(12),\n        Validators.pattern(/^[^\\s]+$/),\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$/)\n      ]],\n      confirmPassword: ['']\n    }, { validator: this.passwordMatchValidator() });\n\n    this.apiService.getEspecialidades().subscribe(\n      especialidades => this.especialidades = especialidades\n    );\n  }\n\n  /**\n   * Validador personalizado para el dominio del email\n   * @returns ValidatorFn para validar que el email tenga un dominio válido\n   */\n  emailDomainValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const email = control.value;\n      if (!email) return null;\n      \n      if (!email.includes('@')) return { invalidEmail: true };\n\n      const [localPart, domain] = email.split('@');\n      \n      if (!domain || !domain.includes('.')) return { invalidDomain: true };\n\n      const parts = domain.split('.');\n      const tld = parts[parts.length - 1];\n      \n      if (tld.length  {\n        this.profileForm.patchValue({\n          nombres: funcionario.nombres,\n          apellidos: funcionario.apellidos,\n          email: funcionario.email,\n          telefono: funcionario.telefono || '(56) 9 ',\n          esp_id: funcionario.especialidad.id\n        });\n      },\n      error: (error) => {\n        console.error('Error loading funcionario:', error);\n        this.toastService.show('Error al cargar datos del perfil', 'error');\n      }\n    });\n  }\n\n  /**\n   * Validador personalizado para contraseñas coincidentes\n   * @returns ValidatorFn que verifica que las contraseñas coincidan\n   */\n  passwordMatchValidator() {\n    return (formGroup: FormGroup) => {\n      const password = formGroup.get('password');\n      const confirmPassword = formGroup.get('confirmPassword');\n\n      if (password?.value || confirmPassword?.value) {\n        if (password?.value !== confirmPassword?.value) {\n          confirmPassword?.setErrors({ passwordMismatch: true });\n          return { passwordMismatch: true };\n        } else {\n          confirmPassword?.setErrors(null);\n          return null;\n        }\n      }\n      return null;\n    };\n  }\n\n  /**\n   * Verifica si un campo del formulario es inválido\n   * @param fieldName Nombre del campo a verificar\n   * @returns boolean indicando si el campo es inválido y ha sido tocado\n   */\n  isFieldInvalid(fieldName: string): boolean {\n    const field = this.profileForm.get(fieldName);\n    return field ? (field.invalid && (field.dirty || field.touched)) : false;\n  }\n\n  /**\n   * Obtiene el mensaje de error para un campo\n   * @param fieldName Nombre del campo\n   * @returns Mensaje de error correspondiente al tipo de error\n   */\n  getErrorMessage(fieldName: string): string {\n    const control = this.profileForm.get(fieldName);\n    if (control?.errors) {\n      if (control.errors['required']) return 'Este campo es requerido';\n      if (control.errors['minlength']) return `Mínimo ${control.errors['minlength'].requiredLength} caracteres`;\n      if (control.errors['invalidEmail']) return 'Email inválido';\n      if (control.errors['invalidDomain']) return 'Dominio de email inválido';\n      if (control.errors['invalidTld']) return 'TLD de dominio de email inválido';\n      if (control.errors['pattern']) {\n        if (fieldName === 'telefono') return 'Formato de teléfono inválido';\n        if (fieldName === 'password') {\n          if (control.value?.includes(' ')) return 'No se permiten espacios';\n          return 'La contraseña debe tener al menos una mayúscula, una minúscula y un número';\n        }\n        return 'Formato inválido';\n      }\n      if (control.errors['passwordMismatch']) return 'Las contraseñas no coinciden';\n    }\n    return '';\n  }\n\n  /**\n   * Cierra el modal\n   * @description Emite el evento close\n   */\n  closeModal() {\n    this.close.emit();\n  }\n\n  /**\n   * Maneja el envío del formulario\n   * @description Valida y actualiza la información del usuario\n   */\n  onSubmit() {\n    if (this.profileForm.invalid) {\n      Object.keys(this.profileForm.controls).forEach(key => {\n        const control = this.profileForm.get(key);\n        if (control?.invalid) {\n          control.markAsTouched();\n        }\n      });\n      return;\n    }\n\n    this.isLoading = true;\n    const formValue = this.profileForm.value;\n    \n    try {\n      const updatedUser: Funcionario = {\n        id: this.currentUser.id,\n        nombres: formValue.nombres,\n        apellidos: formValue.apellidos,\n        rut: this.currentUser.rut,\n        telefono: formValue.telefono,\n        email: formValue.email,\n        password: formValue.password || '',\n        especialidad: {\n          id: parseInt(formValue.esp_id),\n          nombre: ''\n        },\n        roles: this.currentUser.roles\n      };\n\n      this.apiService.updateFuncionario(this.currentUser.id, updatedUser).subscribe({\n        next: () => {\n          if (formValue.password) {\n            this.apiService.updateFuncionarioPassword(\n              this.currentUser.id, \n              formValue.password\n            ).subscribe({\n              next: () => {\n                this.updateLocalStorage(updatedUser);\n                this.toastService.show('Perfil actualizado exitosamente', 'success');\n                this.closeModal();\n              },\n              error: (error) => {\n                console.error('Password update error:', error);\n                this.toastService.show('Error al actualizar la contraseña', 'error');\n              }\n            });\n          } else {\n            this.updateLocalStorage(updatedUser);\n            this.toastService.show('Perfil actualizado exitosamente', 'success');\n            this.closeModal();\n          }\n        },\n        error: (error) => {\n          console.error('Profile update error:', error);\n          this.toastService.show('Error al actualizar el perfil', 'error');\n        },\n        complete: () => {\n          this.isLoading = false;\n        }\n      });\n    } catch (error) {\n      console.error('Profile update error:', error);\n      this.toastService.show('Error al actualizar el perfil', 'error');\n      this.isLoading = false;\n    }\n  }\n\n  private updateLocalStorage(updatedUser: Funcionario) {\n    const currentUser = {\n      ...this.currentUser,\n      nombres: updatedUser.nombres,\n      apellidos: updatedUser.apellidos,\n      email: updatedUser.email,\n      telefono: updatedUser.telefono,\n      especialidad: updatedUser.especialidad\n    };\n    localStorage.setItem('currentUser', JSON.stringify(currentUser));\n  }\n} \n    \n\n\n    \n            \n    .modal-backdrop {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n    }\n\n    .modal-content {\n      background: white;\n      border-radius: 8px;\n      width: 90%;\n      max-width: 800px;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      animation: slideIn 0.3s ease-out;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateY(-20px);\n        opacity: 0;\n      }\n      to {\n        transform: translateY(0);\n        opacity: 1;\n      }\n    }\n\n    .modal-header {\n      padding: 1.5rem;\n      border-bottom: 1px solid #e2e8f0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .modal-header h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.5rem;\n    }\n\n    .close-button {\n      background: none;\n      border: none;\n      font-size: 1.5rem;\n      color: #718096;\n      cursor: pointer;\n      padding: 0.5rem;\n      line-height: 1;\n    }\n\n    .modal-body {\n      padding: 1.5rem;\n    }\n\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      color: #4a5568;\n      font-weight: 500;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .form-group input.error {\n      border-color: #fc8181;\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .form-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      margin-top: 2rem;\n    }\n\n    .submit-btn, .cancel-btn {\n      padding: 0.75rem 1.5rem;\n      border-radius: 6px;\n      font-weight: 500;\n      cursor: pointer;\n      border: none;\n    }\n\n    .submit-btn {\n      background-color: #4299e1;\n      color: white;\n    }\n\n    .cancel-btn {\n      background-color: #e2e8f0;\n      color: #4a5568;\n    }\n\n    .submit-btn:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Modificar Perfil      ×                                            Nombres                                      {{ getErrorMessage(\\'nombres\\') }}                                            Apellidos                                      {{ getErrorMessage(\\'apellidos\\') }}                                                            Correo Electrónico                                      {{ getErrorMessage(\\'email\\') }}                                            Especialidad                          Seleccione una especialidad                              {{ esp.nombre }}                                                    Especialidad es requerida                                                            Teléfono                                      {{ getErrorMessage(\\'telefono\\') }}                                            Nueva Contraseña (opcional)                                      {{ getErrorMessage(\\'password\\') }}                                                            Confirmar Nueva Contraseña                                      Las contraseñas no coinciden                                                            Cancelar                                {{ isLoading ? \\'Guardando...\\' : \\'Guardar Cambios\\' }}                              '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterModalComponent.html":{"url":"components/RegisterModalComponent.html","title":"component - RegisterModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register-modal/register-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja el modal de registro de funcionarios\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            provideNgxMask()\n                \n            \n\n\n            \n                selector\n                app-register-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgxMaskDirective\n                \n            \n\n            \n                styleUrls\n                ./register-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                especialidades\n                            \n                            \n                                isLoading\n                            \n                            \n                                registerForm\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                emailDomainValidator\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                    Async\n                                handleSubmit\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                onRutInput\n                            \n                            \n                                passwordMatchValidator\n                            \n                            \n                                rutValidator\n                            \n                            \n                                validateRut\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, apiService: ApiService, router: Router, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register-modal/register-modal.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/register-modal/register-modal.component.ts:23\n                            \n                        \n                \n                    \n                        Evento emitido para cerrar el modal\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:145\n                        \n                    \n\n\n            \n                \n                        Cierra el modal de registro\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailDomainValidator\n                        \n                    \n                \n            \n            \n                \nemailDomainValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:231\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para el dominio del email\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                ValidatorFn para validar que el email tenga un dominio válido\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:258\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje de error para un campo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Mensaje de error correspondiente al tipo de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:153\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:136\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo del formulario es inválido\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo a verificar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el campo es inválido y ha sido tocado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRutInput\n                        \n                    \n                \n            \n            \n                \nonRutInput(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:105\n                        \n                    \n\n\n            \n                \n                        Formatea el RUT mientras el usuario escribe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de input\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:123\n                        \n                    \n\n\n            \n                \n                        Validador para asegurar que las contraseñas coincidan\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                ValidatorFn para comparar password y confirmPassword\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rutValidator\n                        \n                    \n                \n            \n            \n                \nrutValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:92\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para el RUT\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                ValidatorFn para validar el formato del RUT\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateRut\n                        \n                    \n                \n            \n            \n                \nvalidateRut(rut: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Valida el RUT ingresado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rut\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    RUT a validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el RUT es válido\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register-modal/register-modal.component.ts:32\n                        \n                    \n\n            \n                \n                    Mensaje de error para mostrar al usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        especialidades\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register-modal/register-modal.component.ts:34\n                        \n                    \n\n            \n                \n                    Lista de especialidades disponibles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register-modal/register-modal.component.ts:30\n                        \n                    \n\n            \n                \n                    Indica si hay una operación en curso\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register-modal/register-modal.component.ts:26\n                        \n                    \n\n            \n                \n                    Formulario reactivo para el registro\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register-modal/register-modal.component.ts:28\n                        \n                    \n\n            \n                \n                    Indica si hay un error que mostrar\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, ValidatorFn, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { ApiService, Funcionario } from '../../services/api.service';\nimport { Router } from '@angular/router';\nimport { ToastService } from '../../services/toast.service';\nimport { NgxMaskDirective, provideNgxMask } from 'ngx-mask';\n\n/**\n * Componente que maneja el modal de registro de funcionarios\n * @description Permite registrar nuevos funcionarios en el sistema con validación de campos\n */\n@Component({\n  selector: 'app-register-modal',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, NgxMaskDirective],\n  providers: [provideNgxMask()],\n  templateUrl: './register-modal.component.html',\n  styleUrls: ['./register-modal.component.css']\n})\nexport class RegisterModalComponent {\n  /** Evento emitido para cerrar el modal */\n  @Output() close = new EventEmitter();\n  \n  /** Formulario reactivo para el registro */\n  registerForm: FormGroup;\n  /** Indica si hay un error que mostrar */\n  showError = false;\n  /** Indica si hay una operación en curso */\n  isLoading = false;\n  /** Mensaje de error para mostrar al usuario */\n  errorMessage = '';\n  /** Lista de especialidades disponibles */\n  especialidades: any[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private apiService: ApiService,\n    private router: Router,\n    private toastService: ToastService\n  ) {\n    this.registerForm = this.fb.group({\n      nombres: ['', [Validators.required, Validators.minLength(4), Validators.pattern(/^[a-zA-Z]+$/)]],\n      apellidos: ['', [Validators.required, Validators.minLength(4), Validators.pattern(/^[a-zA-Z]+$/)]],\n      rut: ['', [Validators.required, this.rutValidator()]],\n      telefono: ['(56) 9 ', [Validators.required, Validators.minLength(12)]],\n      email: ['', [Validators.required, Validators.email, this.emailDomainValidator()]],\n      password: ['', [\n        Validators.required, \n        Validators.minLength(6),\n        Validators.maxLength(12),\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{6,}$/)\n      ]],\n      confirmPassword: ['', [Validators.required]],\n      esp_id: ['', Validators.required]\n    }, { validator: this.passwordMatchValidator() });\n\n    this.apiService.getEspecialidades().subscribe(\n      especialidades => this.especialidades = especialidades\n    );\n  }\n\n  /**\n   * Valida el RUT ingresado\n   * @param rut RUT a validar\n   * @returns boolean indicando si el RUT es válido\n   */\n  validateRut(rut: string): boolean {\n    rut = rut.replace(/\\./g, '').replace(/-/g, '');\n    if (!/^[0-9]{7,8}[0-9Kk]$/.test(rut)) return false;\n    const verificationDigit = rut.slice(-1).toUpperCase();\n    const numbers = rut.slice(0, -1);\n    let sum = 0;\n    let multiplier = 2;\n    for (let i = numbers.length - 1; i >= 0; i--) {\n      sum += parseInt(numbers[i]) * multiplier;\n      multiplier = multiplier === 7 ? 2 : multiplier + 1;\n    }\n    const expectedDigit = 11 - (sum % 11);\n    let expectedVerificationDigit: string;\n    if (expectedDigit === 11) expectedVerificationDigit = '0';\n    else if (expectedDigit === 10) expectedVerificationDigit = 'K';\n    else expectedVerificationDigit = expectedDigit.toString();\n    if (!/^[0-9Kk.-]+$/.test(rut)) return false;\n    return verificationDigit === expectedVerificationDigit;\n  }\n\n  /**\n   * Validador personalizado para el RUT\n   * @returns ValidatorFn para validar el formato del RUT\n   */\n  rutValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const rut = control.value;\n      if (!rut) return null;\n      return this.validateRut(rut) ? null : { invalidRut: true };\n    };\n  }\n\n  /**\n   * Formatea el RUT mientras el usuario escribe\n   * @param event Evento de input\n   * @description Agrega puntos y guión al RUT\n   */\n  onRutInput(event: any) {\n    const input = event.target;\n    let rut = input.value.replace(/\\./g, '').replace(/-/g, '');\n    rut = rut.replace(/[^0-9kK]/g, '');\n    \n    if (rut.length > 0) {\n      let result = rut;\n      if (rut.length > 1) {\n        result = rut.slice(0, -1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') + '-' + rut.slice(-1);\n      }\n      this.registerForm.patchValue({ rut: result }, { emitEvent: false });\n    }\n  }\n\n  /**\n   * Validador para asegurar que las contraseñas coincidan\n   * @returns ValidatorFn para comparar password y confirmPassword\n   */\n  passwordMatchValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const password = control.get('password')?.value;\n      const confirmPassword = control.get('confirmPassword')?.value;\n      return password === confirmPassword ? null : { passwordMismatch: true };\n    };\n  }\n\n  /**\n   * Verifica si un campo del formulario es inválido\n   * @param fieldName Nombre del campo a verificar\n   * @returns boolean indicando si el campo es inválido y ha sido tocado\n   */\n  isFieldInvalid(fieldName: string): boolean {\n    const field = this.registerForm.get(fieldName);\n    return field ? (field.invalid && (field.dirty || field.touched)) : false;\n  }\n\n  /**\n   * Cierra el modal de registro\n   * @description Emite el evento close\n   */\n  closeModal() {\n    this.close.emit();\n  }\n\n  /**\n   * Maneja el envío del formulario\n   * @description Valida y procesa el registro del nuevo funcionario\n   */\n  async handleSubmit() {\n    if (this.registerForm.invalid) return;\n\n    this.showError = false;\n    this.isLoading = true;\n\n    try {\n      const formValue = this.registerForm.value;\n      \n      this.apiService.getFuncionarioByRut(formValue.rut.replace(/\\./g, '').replace('-', '')).subscribe({\n        next: (existingUser) => {\n          if (existingUser) {\n            this.showError = true;\n            this.errorMessage = 'Este RUT ya está registrado';\n            this.isLoading = false;\n            return;\n          }\n\n          const newFuncionario: Funcionario = {\n            id: 0,\n            nombres: formValue.nombres,\n            apellidos: formValue.apellidos,\n            rut: formValue.rut.replace(/\\./g, '').replace('-', ''),\n            telefono: formValue.telefono,\n            email: formValue.email,\n            password: formValue.password,\n            especialidad: {\n              id: parseInt(formValue.esp_id),\n              nombre: ''\n            },\n            roles: [\n              {\n                id: 1,\n                nombre: ''\n              },\n              {\n                id: 2,\n                nombre: ''\n              },\n              {\n                id: 3,\n                nombre: ''\n              }\n            ]\n          };\n\n          this.apiService.createFuncionario(newFuncionario).subscribe({\n            next: () => {\n              this.toastService.show('Usuario registrado. Inicie sesión con su RUT y contraseña.', 'success');\n              this.closeModal();\n            },\n            error: (error) => {\n              console.error('Registration error:', error);\n              this.showError = true;\n              this.errorMessage = 'Error al registrar. Por favor intente nuevamente.';\n              this.isLoading = false;\n            }\n          });\n        },\n        error: (error) => {\n          console.error('RUT check error:', error);\n          this.showError = true;\n          this.errorMessage = 'Error al verificar RUT. Por favor intente nuevamente.';\n          this.isLoading = false;\n        }\n      });\n    } catch (error) {\n      console.error('Registration error:', error);\n      this.showError = true;\n      this.errorMessage = 'Error al registrar. Por favor intente nuevamente.';\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * Validador personalizado para el dominio del email\n   * @returns ValidatorFn para validar que el email tenga un dominio válido\n   */\n  emailDomainValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const email = control.value;\n      if (!email) return null;\n      \n      if (!email.includes('@')) return { invalidEmail: true };\n\n      const [localPart, domain] = email.split('@');\n      \n      if (!domain || !domain.includes('.')) return { invalidDomain: true };\n\n      const parts = domain.split('.');\n      const tld = parts[parts.length - 1];\n      \n      if (tld.length \n    \n\n    \n        \n    \n    \n        Registrarse\n        ×\n    \n    \n        \n        \n            Nombres\n            \n            \n            Nombres son requeridos (mínimo 4 caracteres, sin números ni caracteres especiales)\n            \n        \n\n        \n            Apellidos\n            \n            \n            Apellidos son requeridos (mínimo 4 caracteres, sin números ni caracteres especiales)\n            \n        \n\n        \n            RUT\n            \n            \n            RUT inválido\n            \n        \n\n        \n            Teléfono\n            \n            \n            Teléfono inválido (mínimo 9 dígitos)\n            \n        \n\n        \n            Correo Electrónico\n            \n            \n            Correo electrónico inválido\n            \n        \n\n        \n            Especialidad\n            \n            Seleccione una especialidad\n            \n                {{ esp.nombre }}\n            \n            \n            \n            Especialidad es requerida\n            \n        \n\n        \n            Contraseña\n            \n            \n            Contraseña debe tener al menos 6 caracteres, una mayúscula, una minúscula y un número, sin espacios\n            \n        \n\n        \n            Confirmar Contraseña\n            \n            \n            Las contraseñas no coinciden\n            \n        \n\n        \n            {{ errorMessage }}\n        \n\n        \n            {{ isLoading ? 'Registrando...' : 'Registrarse' }}\n        \n        \n    \n    \n\n    \n\n    \n                \n                    ./register-modal.component.css\n                \n                .modal-backdrop {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n    }\n\n    .modal-content {\n      background: white;\n      border-radius: 8px;\n      width: 95%;\n      max-width: 800px;\n      max-height: 90vh;\n      overflow-y: auto;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      animation: slideIn 0.3s ease-out;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateY(-20px);\n        opacity: 0;\n      }\n      to {\n        transform: translateY(0);\n        opacity: 1;\n      }\n    }\n\n    .modal-header {\n      padding: 1.5rem;\n      border-bottom: 1px solid #e2e8f0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .modal-header h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.5rem;\n    }\n\n    .close-button {\n      background: none;\n      border: none;\n      font-size: 1.5rem;\n      color: #718096;\n      cursor: pointer;\n      padding: 0.5rem;\n      line-height: 1;\n      transition: color 0.2s;\n    }\n\n    .close-button:hover {\n      color: #2d3748;\n    }\n\n    .modal-body {\n      padding: 1.5rem;\n    }\n\n    form {\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      gap: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group.full-width {\n      grid-column: 1 / -1;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      color: #4a5568;\n      font-weight: 500;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n      transition: border-color 0.2s;\n    }\n\n    .form-group input:focus,\n    .form-group select:focus {\n      outline: none;\n      border-color: #4299e1;\n      box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .submit-button {\n      grid-column: 1 / -1;\n      padding: 0.75rem;\n      background-color: #4299e1;\n      color: white;\n      border: none;\n      border-radius: 6px;\n      font-size: 1rem;\n      font-weight: 500;\n      cursor: pointer;\n      transition: background-color 0.2s;\n    }\n\n    .submit-button:hover {\n      background-color: #3182ce;\n    }\n\n    .submit-button:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      form {\n        grid-template-columns: 1fr;\n      }\n\n      .modal-content {\n        width: 95%;\n        max-width: 400px;\n        margin: 1rem;\n      }\n\n      .modal-header h2 {\n        font-size: 1.25rem;\n      }\n\n      .modal-body {\n        padding: 1rem;\n      }\n    }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Registrarse        ×                                    Nombres                                    Nombres son requeridos (mínimo 4 caracteres, sin números ni caracteres especiales)                                        Apellidos                                    Apellidos son requeridos (mínimo 4 caracteres, sin números ni caracteres especiales)                                        RUT                                    RUT inválido                                        Teléfono                                    Teléfono inválido (mínimo 9 dígitos)                                        Correo Electrónico                                    Correo electrónico inválido                                        Especialidad                        Seleccione una especialidad                            {{ esp.nombre }}                                                Especialidad es requerida                                        Contraseña                                    Contraseña debe tener al menos 6 caracteres, una mayúscula, una minúscula y un número, sin espacios                                        Confirmar Contraseña                                    Las contraseñas no coinciden                                        {{ errorMessage }}                            {{ isLoading ? \\'Registrando...\\' : \\'Registrarse\\' }}                        '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rol.html":{"url":"interfaces/Rol.html","title":"interface - Rol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nexport interface LoginRequest {\n  rut: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  roles: Rol[];\n}\n\nexport interface Funcionario {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  password: string;\n  especialidad: Especialidad;\n  roles: Rol[];\n}\n\nexport interface Paciente {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  fechaNacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\nexport interface Cita {\n  id: number;\n  paciente: Paciente;\n  segmentoHorario: SegmentoHorario;\n}\n\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fechaHoraInicio: string;\n  fechaHoraFin: string;\n  free: boolean;\n  funcionario: Funcionario;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Servicio para interactuar con el API del Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  // private readonly baseUrl = 'http://3.83.231.69:8080/api';\n  private readonly baseUrl = 'http://localhost:8080/api';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Manejador de errores para las solicitudes API\n   * @param error Respuesta de error HTTP\n   * @returns Observable con el mensaje de error\n   */\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'An error occurred';\n    \n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    \n    return throwError(() => new Error(errorMessage));\n  }\n\n  /**\n   * Authenticate a funcionario\n   * @param credentials Credenciales de inicio de sesión\n   * @returns Observable con la respuesta de inicio de sesión\n   */\n  login(credentials: LoginRequest): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios/login`, credentials)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all funcionarios\n   * @returns Observable con el array de funcionarios\n   */\n  getFuncionarios(): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new funcionario\n   * @param funcionario Datos del funcionario\n   * @returns Observable con el funcionario creado\n   */\n  createFuncionario(funcionario: Funcionario): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by ID\n   * @param id ID del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario\n   * @param id Funcionario ID\n   * @param funcionario Datos actualizados del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionario(id: number, funcionario: Funcionario): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete funcionario\n   * @param id ID del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteFuncionario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by RUT\n   * @param rut RUT del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all pacientes\n   * @returns Observable con el array de pacientes\n   */\n  getPacientes(): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  createPaciente(paciente: Paciente): Observable {\n    return this.http.post(`${this.baseUrl}/pacientes`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update a paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  updatePaciente(paciente: Paciente): Observable {\n    return this.http.put(`${this.baseUrl}/pacientes/${paciente.id}`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Assign segmento horario to paciente\n   * @param pacienteId Paciente ID\n   * @param segmentoHorarioId ID del segmento horario\n   * @returns Observable con la cita creada\n   */\n  assignSegmentoToPaciente(pacienteId: number, segmentoHorarioId: number): Observable {\n    const params = new HttpParams()\n      .set('pacienteId', pacienteId.toString())\n      .set('segmentoHorarioId', segmentoHorarioId.toString());\n\n    return this.http.post(`${this.baseUrl}/citas/assign`, null, { params })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all especialidades\n   * @returns Observable con el array de especialidades\n   */\n  getEspecialidades(): Observable {\n    return this.http.get(`${this.baseUrl}/especialidades`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all roles\n   * @returns Observable con el array de roles\n   */\n  getRoles(): Observable {\n    return this.http.get(`${this.baseUrl}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get roles for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de roles\n   */\n  getFuncionarioRoles(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Check if funcionario has a specific role\n   * @param funcionarioId Funcionario ID\n   * @param rolNombre Nombre del rol\n   * @returns Observable con el resultado booleano\n   */\n  hasRole(funcionarioId: number, rolNombre: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles/${rolNombre}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all segmentos horarios for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de segmentos horarios\n   */\n  getSegmentosHorarioByFuncionarioId(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/segmentos`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get segmento horario by ID\n   * @param id ID del segmento horario\n   * @returns Observable con los datos del segmento horario\n   */\n  getSegmentoHorarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new segmento horario\n   * @param segmento Datos del segmento horario\n   * @returns Observable con el segmento horario creado\n   */\n  createSegmentoHorario(segmento: SegmentoHorario): Observable {\n    return this.http.post(`${this.baseUrl}/segmentos-horarios`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update segmento horario\n   * @param id Segmento horario ID\n   * @param segmento Datos actualizados del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  updateSegmentoHorario(id: number, segmento: SegmentoHorario): Observable {\n    return this.http.put(`${this.baseUrl}/segmentos-horarios/${id}`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete segmento horario\n   * @param id ID del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteSegmentoHorario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario password\n   * @param id Funcionario ID\n   * @param newPassword Nueva contraseña\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionarioPassword(id: number, newPassword: string): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}/password`, { password: newPassword })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get paciente by RUT\n   * @param rut RUT del paciente\n   * @returns Observable con los datos del paciente\n   */\n  getPacienteByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rol-1.html":{"url":"interfaces/Rol-1.html","title":"interface - Rol-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nexport interface LoginRequest {\n  rut: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  roles: Rol[];\n}\n\nexport interface Funcionario {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  password: string;\n  especialidad: Especialidad;\n  roles: Rol[];\n}\n\nexport interface Paciente {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  fechaNacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\nexport interface Cita {\n  id: number;\n  paciente: Paciente;\n  segmentoHorario: SegmentoHorario;\n}\n\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fechaHoraInicio: string;\n  fechaHoraFin: string;\n  free: boolean;\n  funcionario: Funcionario;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Servicio para interactuar con el API del Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  // private readonly baseUrl = 'http://3.83.231.69:8080/api';\n  private readonly baseUrl = 'http://localhost:8080/api';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Manejador de errores para las solicitudes API\n   * @param error Respuesta de error HTTP\n   * @returns Observable con el mensaje de error\n   */\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'An error occurred';\n    \n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    \n    return throwError(() => new Error(errorMessage));\n  }\n\n  /**\n   * Authenticate a funcionario\n   * @param credentials Credenciales de inicio de sesión\n   * @returns Observable con la respuesta de inicio de sesión\n   */\n  login(credentials: LoginRequest): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios/login`, credentials)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all funcionarios\n   * @returns Observable con el array de funcionarios\n   */\n  getFuncionarios(): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new funcionario\n   * @param funcionario Datos del funcionario\n   * @returns Observable con el funcionario creado\n   */\n  createFuncionario(funcionario: Funcionario): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by ID\n   * @param id ID del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario\n   * @param id Funcionario ID\n   * @param funcionario Datos actualizados del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionario(id: number, funcionario: Funcionario): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete funcionario\n   * @param id ID del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteFuncionario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by RUT\n   * @param rut RUT del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all pacientes\n   * @returns Observable con el array de pacientes\n   */\n  getPacientes(): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  createPaciente(paciente: Paciente): Observable {\n    return this.http.post(`${this.baseUrl}/pacientes`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update a paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  updatePaciente(paciente: Paciente): Observable {\n    return this.http.put(`${this.baseUrl}/pacientes/${paciente.id}`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Assign segmento horario to paciente\n   * @param pacienteId Paciente ID\n   * @param segmentoHorarioId ID del segmento horario\n   * @returns Observable con la cita creada\n   */\n  assignSegmentoToPaciente(pacienteId: number, segmentoHorarioId: number): Observable {\n    const params = new HttpParams()\n      .set('pacienteId', pacienteId.toString())\n      .set('segmentoHorarioId', segmentoHorarioId.toString());\n\n    return this.http.post(`${this.baseUrl}/citas/assign`, null, { params })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all especialidades\n   * @returns Observable con el array de especialidades\n   */\n  getEspecialidades(): Observable {\n    return this.http.get(`${this.baseUrl}/especialidades`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all roles\n   * @returns Observable con el array de roles\n   */\n  getRoles(): Observable {\n    return this.http.get(`${this.baseUrl}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get roles for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de roles\n   */\n  getFuncionarioRoles(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Check if funcionario has a specific role\n   * @param funcionarioId Funcionario ID\n   * @param rolNombre Nombre del rol\n   * @returns Observable con el resultado booleano\n   */\n  hasRole(funcionarioId: number, rolNombre: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles/${rolNombre}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all segmentos horarios for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de segmentos horarios\n   */\n  getSegmentosHorarioByFuncionarioId(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/segmentos`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get segmento horario by ID\n   * @param id ID del segmento horario\n   * @returns Observable con los datos del segmento horario\n   */\n  getSegmentoHorarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new segmento horario\n   * @param segmento Datos del segmento horario\n   * @returns Observable con el segmento horario creado\n   */\n  createSegmentoHorario(segmento: SegmentoHorario): Observable {\n    return this.http.post(`${this.baseUrl}/segmentos-horarios`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update segmento horario\n   * @param id Segmento horario ID\n   * @param segmento Datos actualizados del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  updateSegmentoHorario(id: number, segmento: SegmentoHorario): Observable {\n    return this.http.put(`${this.baseUrl}/segmentos-horarios/${id}`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete segmento horario\n   * @param id ID del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteSegmentoHorario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario password\n   * @param id Funcionario ID\n   * @param newPassword Nueva contraseña\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionarioPassword(id: number, newPassword: string): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}/password`, { password: newPassword })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get paciente by RUT\n   * @param rut RUT del paciente\n   * @returns Observable con los datos del paciente\n   */\n  getPacienteByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/role.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guardia que protege las rutas basadas en roles de usuario\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(apiService: ApiService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/role.guard.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        apiService\n                                                  \n                                                        \n                                                                        ApiService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/role.guard.ts:26\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario puede acceder a la ruta solicitada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Información de la ruta a activar\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Estado actual del router\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise indicando si se permite el acceso\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { ApiService } from '../services/api.service';\nimport { firstValueFrom } from 'rxjs';\n\n/**\n * Guardia que protege las rutas basadas en roles de usuario\n * @description Verifica que el usuario tenga los permisos necesarios para acceder a una ruta\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  constructor(\n    private apiService: ApiService,\n    private router: Router\n  ) {}\n\n  /**\n   * Verifica si el usuario puede acceder a la ruta solicitada\n   * @param route Información de la ruta a activar\n   * @param state Estado actual del router\n   * @returns Promise indicando si se permite el acceso\n   * @description Comprueba si el usuario tiene el rol requerido para la ruta\n   */\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n    const requiredRole = route.data['requiredRole'];\n\n    if (!currentUser.id || !requiredRole) {\n      this.router.navigate(['/']);\n      return false;\n    }\n\n    try {\n      const hasRole = await firstValueFrom(\n        this.apiService.hasRole(currentUser.id, requiredRole)\n      );\n      \n      if (!hasRole) {\n        this.router.navigate(['/dashboard']);\n        return false;\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Error checking roles:', error);\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n} \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentoHorario.html":{"url":"interfaces/SegmentoHorario.html","title":"interface - SegmentoHorario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentoHorario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/api.service.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fechaHoraFin\n                                        \n                                \n                                \n                                        \n                                            fechaHoraInicio\n                                        \n                                \n                                \n                                        \n                                            free\n                                        \n                                \n                                \n                                        \n                                            funcionario\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fechaHoraFin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaHoraFin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fechaHoraInicio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fechaHoraInicio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        free\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        free:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        funcionario\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        funcionario:         Funcionario\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Funcionario\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { HttpClient, HttpParams, HttpErrorResponse } from '@angular/common/http';\nimport { Observable, throwError } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\n\nexport interface LoginRequest {\n  rut: string;\n  password: string;\n}\n\nexport interface LoginResponse {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  roles: Rol[];\n}\n\nexport interface Funcionario {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  password: string;\n  especialidad: Especialidad;\n  roles: Rol[];\n}\n\nexport interface Paciente {\n  id: number;\n  rut: string;\n  nombres: string;\n  apellidos: string;\n  telefono: string;\n  email: string;\n  fechaNacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\nexport interface Cita {\n  id: number;\n  paciente: Paciente;\n  segmentoHorario: SegmentoHorario;\n}\n\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fechaHoraInicio: string;\n  fechaHoraFin: string;\n  free: boolean;\n  funcionario: Funcionario;\n}\n\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Servicio para interactuar con el API del Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  // private readonly baseUrl = 'http://3.83.231.69:8080/api';\n  private readonly baseUrl = 'http://localhost:8080/api';\n\n  constructor(private http: HttpClient) {}\n\n  /**\n   * Manejador de errores para las solicitudes API\n   * @param error Respuesta de error HTTP\n   * @returns Observable con el mensaje de error\n   */\n  private handleError(error: HttpErrorResponse) {\n    let errorMessage = 'An error occurred';\n    \n    if (error.error instanceof ErrorEvent) {\n      // Client-side error\n      errorMessage = error.error.message;\n    } else {\n      // Server-side error\n      errorMessage = `Error Code: ${error.status}\\nMessage: ${error.message}`;\n    }\n    \n    return throwError(() => new Error(errorMessage));\n  }\n\n  /**\n   * Authenticate a funcionario\n   * @param credentials Credenciales de inicio de sesión\n   * @returns Observable con la respuesta de inicio de sesión\n   */\n  login(credentials: LoginRequest): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios/login`, credentials)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all funcionarios\n   * @returns Observable con el array de funcionarios\n   */\n  getFuncionarios(): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new funcionario\n   * @param funcionario Datos del funcionario\n   * @returns Observable con el funcionario creado\n   */\n  createFuncionario(funcionario: Funcionario): Observable {\n    return this.http.post(`${this.baseUrl}/funcionarios`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by ID\n   * @param id ID del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario\n   * @param id Funcionario ID\n   * @param funcionario Datos actualizados del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionario(id: number, funcionario: Funcionario): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}`, funcionario)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete funcionario\n   * @param id ID del funcionario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteFuncionario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/funcionarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get funcionario by RUT\n   * @param rut RUT del funcionario\n   * @returns Observable con los datos del funcionario\n   */\n  getFuncionarioByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all pacientes\n   * @returns Observable con el array de pacientes\n   */\n  getPacientes(): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  createPaciente(paciente: Paciente): Observable {\n    return this.http.post(`${this.baseUrl}/pacientes`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update a paciente\n   * @param paciente Datos del paciente\n   * @returns Observable con el resultado de la operación\n   */\n  updatePaciente(paciente: Paciente): Observable {\n    return this.http.put(`${this.baseUrl}/pacientes/${paciente.id}`, paciente)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Assign segmento horario to paciente\n   * @param pacienteId Paciente ID\n   * @param segmentoHorarioId ID del segmento horario\n   * @returns Observable con la cita creada\n   */\n  assignSegmentoToPaciente(pacienteId: number, segmentoHorarioId: number): Observable {\n    const params = new HttpParams()\n      .set('pacienteId', pacienteId.toString())\n      .set('segmentoHorarioId', segmentoHorarioId.toString());\n\n    return this.http.post(`${this.baseUrl}/citas/assign`, null, { params })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all especialidades\n   * @returns Observable con el array de especialidades\n   */\n  getEspecialidades(): Observable {\n    return this.http.get(`${this.baseUrl}/especialidades`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all roles\n   * @returns Observable con el array de roles\n   */\n  getRoles(): Observable {\n    return this.http.get(`${this.baseUrl}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get roles for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de roles\n   */\n  getFuncionarioRoles(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Check if funcionario has a specific role\n   * @param funcionarioId Funcionario ID\n   * @param rolNombre Nombre del rol\n   * @returns Observable con el resultado booleano\n   */\n  hasRole(funcionarioId: number, rolNombre: string): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/roles/${rolNombre}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get all segmentos horarios for a funcionario\n   * @param funcionarioId ID del funcionario\n   * @returns Observable con el array de segmentos horarios\n   */\n  getSegmentosHorarioByFuncionarioId(funcionarioId: number): Observable {\n    return this.http.get(`${this.baseUrl}/funcionarios/${funcionarioId}/segmentos`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get segmento horario by ID\n   * @param id ID del segmento horario\n   * @returns Observable con los datos del segmento horario\n   */\n  getSegmentoHorarioById(id: number): Observable {\n    return this.http.get(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Create a new segmento horario\n   * @param segmento Datos del segmento horario\n   * @returns Observable con el segmento horario creado\n   */\n  createSegmentoHorario(segmento: SegmentoHorario): Observable {\n    return this.http.post(`${this.baseUrl}/segmentos-horarios`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update segmento horario\n   * @param id Segmento horario ID\n   * @param segmento Datos actualizados del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  updateSegmentoHorario(id: number, segmento: SegmentoHorario): Observable {\n    return this.http.put(`${this.baseUrl}/segmentos-horarios/${id}`, segmento)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Delete segmento horario\n   * @param id ID del segmento horario\n   * @returns Observable con el resultado de la operación\n   */\n  deleteSegmentoHorario(id: number): Observable {\n    return this.http.delete(`${this.baseUrl}/segmentos-horarios/${id}`)\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Update funcionario password\n   * @param id Funcionario ID\n   * @param newPassword Nueva contraseña\n   * @returns Observable con el resultado de la operación\n   */\n  updateFuncionarioPassword(id: number, newPassword: string): Observable {\n    return this.http.put(`${this.baseUrl}/funcionarios/${id}/password`, { password: newPassword })\n      .pipe(catchError(this.handleError));\n  }\n\n  /**\n   * Get paciente by RUT\n   * @param rut RUT del paciente\n   * @returns Observable con los datos del paciente\n   */\n  getPacienteByRut(rut: string): Observable {\n    return this.http.get(`${this.baseUrl}/pacientes/rut/${rut}`)\n      .pipe(catchError(this.handleError));\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SegmentoModalComponent.html":{"url":"components/SegmentoModalComponent.html","title":"component - SegmentoModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SegmentoModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/agenda/segmento-modal/segmento-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente modal para la gestión de segmentos horarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-segmento-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./segmento-modal.component.html\n            \n\n\n\n            \n                styleUrl\n                ./segmento-modal.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isEditMode\n                            \n                            \n                                segmentoForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                formatDate\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                funcionario\n                            \n                            \n                                segmentoToEdit\n                            \n                            \n                                startDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                delete\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        funcionario\n                    \n                \n                \n                    \n                        Type :         Funcionario\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:21\n                            \n                        \n                \n                    \n                        Funcionario al que pertenece el segmento\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        segmentoToEdit\n                    \n                \n                \n                    \n                        Type :         SegmentoHorario | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:23\n                            \n                        \n                \n                    \n                        Segmento a editar (null si es nuevo)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        startDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:19\n                            \n                        \n                \n                    \n                        Fecha de inicio del segmento\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:25\n                            \n                        \n                \n                    \n                        Evento emitido para cerrar el modal\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:29\n                            \n                        \n                \n                    \n                        Evento emitido al eliminar el segmento\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        submit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:27\n                            \n                        \n                \n                    \n                        Evento emitido al guardar el segmento\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Cierra el modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatDate\n                        \n                    \n                \n            \n            \n                \nformatDate(date: Date)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                date\n                                            \n                                                            Date\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Maneja la eliminación de un segmento\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:86\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:34\n                        \n                    \n\n            \n                \n                    Indica si se está editando un segmento existente\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segmentoForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:32\n                        \n                    \n\n            \n                \n                    Formulario reactivo para los datos del segmento\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ApiService, Funcionario, SegmentoHorario } from '../../services/api.service';\n\n/**\n * Componente modal para la gestión de segmentos horarios\n * @description Permite crear y editar segmentos horarios de los funcionarios\n */\n@Component({\n  selector: 'app-segmento-modal',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './segmento-modal.component.html',\n  styleUrl: './segmento-modal.component.css'\n})\nexport class SegmentoModalComponent implements OnInit {\n  /** Fecha de inicio del segmento */\n  @Input() startDate!: Date;\n  /** Funcionario al que pertenece el segmento */\n  @Input() funcionario!: Funcionario;\n  /** Segmento a editar (null si es nuevo) */\n  @Input() segmentoToEdit: SegmentoHorario | null = null;\n  /** Evento emitido para cerrar el modal */\n  @Output() close = new EventEmitter();\n  /** Evento emitido al guardar el segmento */\n  @Output() submit = new EventEmitter();\n  /** Evento emitido al eliminar el segmento */\n  @Output() delete = new EventEmitter();\n\n  /** Formulario reactivo para los datos del segmento */\n  segmentoForm: FormGroup;\n  /** Indica si se está editando un segmento existente */\n  isEditMode: boolean = false;\n\n  constructor(private fb: FormBuilder) {\n    this.segmentoForm = this.fb.group({\n      nombre: ['', Validators.required],\n      cupos: [1, [Validators.required, Validators.min(1), Validators.max(48)]]\n    });\n  }\n\n  /**\n   * Inicializa el componente\n   * @description Configura el formulario si se está editando un segmento existente\n   */\n  ngOnInit() {\n    if (this.segmentoToEdit) {\n      this.isEditMode = true;\n      const duration = (new Date(this.segmentoToEdit.fechaHoraFin).getTime() - \n                       new Date(this.segmentoToEdit.fechaHoraInicio).getTime()) / (30 * 60000);\n      \n      this.segmentoForm.patchValue({\n        nombre: this.segmentoToEdit.nombre,\n        cupos: duration\n      });\n    }\n  }\n\n  /**\n   * Cierra el modal\n   * @description Emite el evento close\n   */\n  closeModal() {\n    this.close.emit();\n  }\n\n  /**\n   * Maneja la eliminación de un segmento\n   * @description Solicita confirmación antes de eliminar\n   */\n  onDelete() {\n    if (this.segmentoToEdit && confirm('¿Está seguro de eliminar este segmento horario?')) {\n      this.delete.emit(this.segmentoToEdit.id);\n      this.closeModal();\n    }\n  }\n\n  formatDate(date: Date) {\n    return `${date.getFullYear()}-${(date.getMonth()+1).toString().padStart(2, '0')}-${date.getDate().toString().padStart(2, '0')}T${date.getHours().toString().padStart(2, '0')}:${date.getMinutes().toString().padStart(2, '0')}:00.000Z`;\n  }\n  /**\n   * Maneja el envío del formulario\n   * @description Crea o actualiza un segmento horario\n   */\n  onSubmit() {\n    if (this.segmentoForm.valid) {\n      const formValue = this.segmentoForm.value;\n      const startDate = this.segmentoToEdit ? new Date(this.segmentoToEdit.fechaHoraInicio) : this.startDate;\n      const endDate = new Date(startDate);\n      endDate.setMinutes(endDate.getMinutes() + (formValue.cupos * 30));\n\n      const segmento: SegmentoHorario = {\n        id: this.segmentoToEdit?.id || 0,\n        nombre: formValue.nombre,\n        fechaHoraInicio: this.formatDate(startDate),\n        fechaHoraFin: this.formatDate(endDate),\n        funcionario: this.funcionario,\n        free: true\n      };\n      \n      this.submit.emit(segmento);\n      this.closeModal();\n    }\n  }\n} \n    \n\n    \n        \n    \n    \n        {{ isEditMode ? 'Editar' : 'Crear' }} Segmento Horario\n        ×\n    \n    \n        \n        \n            Nombre del Segmento\n            \n                \n                    Seleccione un tipo de segmento\n                    Atención general\n                    Control médico\n                    Primera consulta\n                    Procedimiento\n                    Otro\n                \n                ▼\n            \n            \n                El nombre es requerido\n            \n        \n\n        \n            Número de Cupos (30 min c/u)\n            \n            \n                El número de cupos es requerido\n                Mínimo 1 cupo\n                Máximo 48 cupos\n            \n        \n\n        \n            Fecha y Hora de Inicio\n            \n                {{ (segmentoToEdit ? segmentoToEdit.fechaHoraInicio : startDate) | date:'dd/MM/yyyy HH:mm' }}\n            \n        \n\n        \n            Duración Total\n            \n                {{ segmentoForm.get('cupos')?.value * 30 }} minutos\n            \n        \n\n        \n            \n                Eliminar\n            \n            Cancelar\n            \n                {{ isEditMode ? 'Guardar Cambios' : 'Crear Segmento' }}\n            \n        \n        \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ isEditMode ? \\'Editar\\' : \\'Crear\\' }} Segmento Horario        ×                                    Nombre del Segmento                                                Seleccione un tipo de segmento                    Atención general                    Control médico                    Primera consulta                    Procedimiento                    Otro                                ▼                                        El nombre es requerido                                        Número de Cupos (30 min c/u)                                        El número de cupos es requerido                Mínimo 1 cupo                Máximo 48 cupos                                        Fecha y Hora de Inicio                            {{ (segmentoToEdit ? segmentoToEdit.fechaHoraInicio : startDate) | date:\\'dd/MM/yyyy HH:mm\\' }}                                        Duración Total                            {{ segmentoForm.get(\\'cupos\\')?.value * 30 }} minutos                                                        Eliminar                        Cancelar                            {{ isEditMode ? \\'Guardar Cambios\\' : \\'Crear Segmento\\' }}                                    '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SegmentoModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Toast.html":{"url":"interfaces/Toast.html","title":"interface - Toast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Toast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toast.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que define la estructura de un mensaje toast\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Mensaje a mostrar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"success\" | \"error\" | \"info\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"success\" | \"error\" | \"info\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tipo de mensaje: success, error o info\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Interfaz que define la estructura de un mensaje toast\n */\nexport interface Toast {\n  /** Mensaje a mostrar */\n  message: string;\n  /** Tipo de mensaje: success, error o info */\n  type: 'success' | 'error' | 'info';\n}\n\n/**\n * Servicio que maneja los mensajes toast de la aplicación\n * @description Permite mostrar notificaciones temporales en la interfaz\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  /** Subject que mantiene el estado del toast actual */\n  private toastSubject = new BehaviorSubject(null);\n  /** Observable público que emite los cambios en el toast */\n  toast$ = this.toastSubject.asObservable();\n\n  /**\n   * Muestra un nuevo mensaje toast\n   * @param message Texto del mensaje a mostrar\n   * @param type Tipo de mensaje (success, error, info)\n   * @description El mensaje se ocultará automáticamente después de 3 segundos\n   */\n  show(message: string, type: 'success' | 'error' | 'info' = 'info') {\n    this.toastSubject.next({ message, type });\n    setTimeout(() => this.toastSubject.next(null), 3000);\n  }\n\n  /**\n   * Oculta el mensaje toast actual\n   * @description Limpia el toast actual estableciéndolo a null\n   */\n  hide() {\n    this.toastSubject.next(null);\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/toast/toast.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que muestra mensajes toast en la aplicación\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n            \n                styles\n                \n    .toast {\n      position: fixed;\n      bottom: 2rem;\n      right: 2rem;\n      padding: 1rem 2rem;\n      border-radius: 6px;\n      color: white;\n      font-weight: 500;\n      animation: slideIn 0.3s ease-out;\n      z-index: 2000;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateX(100%);\n        opacity: 0;\n      }\n      to {\n        transform: translateX(0);\n        opacity: 1;\n      }\n    }\n\n    .success {\n      background-color: #48bb78;\n    }\n\n    .error {\n      background-color: #e53e3e;\n    }\n\n    .info {\n      background-color: #4299e1;\n    }\n  \n            \n\n            \n                template\n                \n  {{ toast.message }}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/toast/toast.component.ts:60\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que maneja los mensajes toast\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/toast/toast.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Limpia la suscripción al destruir el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toast/toast.component.ts:60\n                        \n                    \n\n            \n                \n                    Suscripción al servicio de toast\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toast/toast.component.ts:58\n                        \n                    \n\n            \n                \n                    Toast actual que se está mostrando\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../services/toast.service';\nimport { Subscription } from 'rxjs';\n\n/**\n * Componente que muestra mensajes toast en la aplicación\n * @description Muestra notificaciones temporales en la esquina inferior derecha\n */\n@Component({\n  selector: 'app-toast',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    \n      {{ toast.message }}\n    \n  `,\n  styles: [`\n    .toast {\n      position: fixed;\n      bottom: 2rem;\n      right: 2rem;\n      padding: 1rem 2rem;\n      border-radius: 6px;\n      color: white;\n      font-weight: 500;\n      animation: slideIn 0.3s ease-out;\n      z-index: 2000;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateX(100%);\n        opacity: 0;\n      }\n      to {\n        transform: translateX(0);\n        opacity: 1;\n      }\n    }\n\n    .success {\n      background-color: #48bb78;\n    }\n\n    .error {\n      background-color: #e53e3e;\n    }\n\n    .info {\n      background-color: #4299e1;\n    }\n  `]\n})\nexport class ToastComponent implements OnDestroy {\n  /** Toast actual que se está mostrando */\n  toast: any = null;\n  /** Suscripción al servicio de toast */\n  private subscription: Subscription;\n\n  /**\n   * Constructor del componente\n   * @param toastService Servicio que maneja los mensajes toast\n   * @description Inicializa la suscripción al servicio de toast\n   */\n  constructor(private toastService: ToastService) {\n    this.subscription = this.toastService.toast$.subscribe(\n      toast => this.toast = toast\n    );\n  }\n\n  /**\n   * Limpia la suscripción al destruir el componente\n   * @description Evita memory leaks cancelando la suscripción\n   */\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n} \n    \n\n\n    \n            \n    .toast {\n      position: fixed;\n      bottom: 2rem;\n      right: 2rem;\n      padding: 1rem 2rem;\n      border-radius: 6px;\n      color: white;\n      font-weight: 500;\n      animation: slideIn 0.3s ease-out;\n      z-index: 2000;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateX(100%);\n        opacity: 0;\n      }\n      to {\n        transform: translateX(0);\n        opacity: 1;\n      }\n    }\n\n    .success {\n      background-color: #48bb78;\n    }\n\n    .error {\n      background-color: #e53e3e;\n    }\n\n    .info {\n      background-color: #4299e1;\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ toast.message }}'\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toast.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio que maneja los mensajes toast de la aplicación\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toast$\n                            \n                            \n                                    Private\n                                toastSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/toast.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Oculta el mensaje toast actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(message: string, type: \"success\" | \"error\" | \"info\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/toast.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Muestra un nuevo mensaje toast\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    Texto del mensaje a mostrar\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'info'\n                                            \n\n                                            \n                                                    Tipo de mensaje (success, error, info)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toast$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.toastSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/toast.service.ts:25\n                        \n                    \n\n            \n                \n                    Observable público que emite los cambios en el toast\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toastSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/toast.service.ts:23\n                        \n                    \n\n            \n                \n                    Subject que mantiene el estado del toast actual\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Interfaz que define la estructura de un mensaje toast\n */\nexport interface Toast {\n  /** Mensaje a mostrar */\n  message: string;\n  /** Tipo de mensaje: success, error o info */\n  type: 'success' | 'error' | 'info';\n}\n\n/**\n * Servicio que maneja los mensajes toast de la aplicación\n * @description Permite mostrar notificaciones temporales en la interfaz\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  /** Subject que mantiene el estado del toast actual */\n  private toastSubject = new BehaviorSubject(null);\n  /** Observable público que emite los cambios en el toast */\n  toast$ = this.toastSubject.asObservable();\n\n  /**\n   * Muestra un nuevo mensaje toast\n   * @param message Texto del mensaje a mostrar\n   * @param type Tipo de mensaje (success, error, info)\n   * @description El mensaje se ocultará automáticamente después de 3 segundos\n   */\n  show(message: string, type: 'success' | 'error' | 'info' = 'info') {\n    this.toastSubject.next({ message, type });\n    setTimeout(() => this.toastSubject.next(null), 3000);\n  }\n\n  /**\n   * Oculta el mensaje toast actual\n   * @description Limpia el toast actual estableciéndolo a null\n   */\n  hide() {\n    this.toastSubject.next(null);\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/agenda/agenda.component.ts\n            \n            component\n            AgendaComponent\n            \n                92 %\n                (24/26)\n            \n        \n        \n            \n                \n                src/app/agenda/segmento-modal/segmento-modal.component.ts\n            \n            component\n            SegmentoModalComponent\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                100 %\n                (11/11)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/citas/citas.component.ts\n            \n            component\n            CitasComponent\n            \n                93 %\n                (31/33)\n            \n        \n        \n            \n                \n                src/app/citas/citas.component.ts\n            \n            interface\n            FuncionarioWithAvailability\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/login-modal/login-modal.component.ts\n            \n            component\n            LoginModalComponent\n            \n                96 %\n                (26/27)\n            \n        \n        \n            \n                \n                src/app/components/profile-modal/profile-modal.component.ts\n            \n            component\n            ProfileModalComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/components/register-modal/register-modal.component.ts\n            \n            component\n            RegisterModalComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/components/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                85 %\n                (12/14)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            interface\n            NavItem\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/guards/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/inscripcion/inscripcion.component.ts\n            \n            component\n            InscripcionComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            injectable\n            ApiService\n            \n                92 %\n                (24/26)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            interface\n            Cita\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            interface\n            Especialidad\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            interface\n            Funcionario\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            interface\n            LoginRequest\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            interface\n            LoginResponse\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            interface\n            Paciente\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            interface\n            Rol\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            interface\n            Rol\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/services/api.service.ts\n            \n            interface\n            SegmentoHorario\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/services/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/toast.service.ts\n            \n            interface\n            Toast\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @fullcalendar/angular : ^6.1.15\n        \n            @fullcalendar/core : ^6.1.15\n        \n            @fullcalendar/daygrid : ^6.1.15\n        \n            @fullcalendar/interaction : ^6.1.15\n        \n            @fullcalendar/timegrid : ^6.1.15\n        \n            @types/sql.js : ^1.4.9\n        \n            ngx-mask : ^19.0.0\n        \n            rxjs : ~7.8.0\n        \n            tarea-duoc : file:\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDatos de prueba (seed en database.services.ts)\n\n\n\nRUT\nContraseña\nRoles\n\n\n\n\n13538951k\nAbc123\nNo tiene rol del módulo de citas\n\n\n196450963\nAbc123\nTodos los roles\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    11 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    12 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [\n    provideRouter(routes),\n    provideHttpClient()\n  ]\n}\n                    \n                \n\n            \n                \n                    Configuración de la aplicación\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
