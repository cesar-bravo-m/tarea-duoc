var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AgendaComponent.html",[0,0.226,1,0.921]],["body/components/AgendaComponent.html",[0,0.299,1,1.348,2,1.113,3,0.519,4,0.2,5,1.563,6,0.817,7,0.817,8,0.17,9,2.001,10,0.579,11,1.438,12,0.342,13,0.631,14,0.684,15,3.91,16,0.456,17,0.62,18,1.642,19,1.313,20,2.022,21,0.817,22,1.738,23,1.738,24,1.025,25,0.577,26,1.025,27,1.22,28,2.217,29,3.521,30,1.348,31,2.445,32,0.033,33,2.275,34,2.097,35,3.062,36,2.595,37,0.914,38,2.022,39,2.317,40,2.097,41,4.585,42,4.1,43,2.34,44,1.929,45,2.376,46,2.414,47,2.185,48,2.285,49,2.275,50,2.441,51,2.376,52,2.968,53,2.275,54,3.274,55,2.659,56,3.274,57,3.274,58,4.218,59,2.097,60,2.317,61,2.478,62,2.097,63,2.097,64,1.699,65,2.376,66,1.851,67,1.851,68,1.851,69,1.851,70,1.851,71,2.478,72,2.478,73,0.65,74,2.737,75,2.426,76,2.478,77,2.359,78,2.519,79,4.346,80,1.699,81,1.699,82,4.218,83,5.206,84,3.018,85,4.218,86,1.851,87,2.275,88,1.851,89,2.445,90,2.285,91,1.031,92,2.097,93,2.496,94,4.218,95,3.521,96,4.218,97,4.218,98,2.217,99,1.699,100,1.699,101,2.496,102,2.496,103,2.496,104,2.092,105,2.285,106,2.719,107,2.719,108,2.244,109,2.445,110,2.719,111,2.719,112,2.719,113,2.217,114,3.062,115,2.737,116,1.696,117,2.217,118,3.521,119,4.218,120,3.521,121,2.217,122,1.851,123,1.221,124,3.062,125,3.521,126,3.062,127,2.217,128,3.521,129,2.719,130,3.521,131,1.699,132,3.521,133,5.206,134,4.218,135,3.521,136,4.218,137,6.058,138,3.062,139,4.218,140,4.218,141,3.383,142,3.521,143,4.398,144,3.018,145,1.563,146,2.707,147,3.521,148,3.062,149,2.883,150,4.1,151,4.218,152,4.218,153,4.218,154,4.218,155,1.438,156,1.438,157,1.438,158,0.141,159,0.296,160,3.521,161,4.346,162,3.062,163,3.521,164,3.062,165,3.545,166,2.959,167,3.545,168,1.025,169,0.645,170,3.89,171,3.545,172,3.545,173,3.545,174,3.545,175,3.545,176,2.217,177,4.218,178,3.521,179,2.959,180,3.89,181,4.218,182,3.545,183,4.218,184,0.753,185,1.545,186,0.585,187,1.827,188,2.397,189,1.692,190,0.7,191,0.509,192,1.433,193,0.888,194,2.397,195,3.545,196,3.545,197,2.055,198,0.722,199,0.512,200,3.89,201,3.545,202,2.397,203,0.795,204,3.521,205,0.731,206,0.908,207,3.545,208,2.397,209,4.151,210,0.867,211,3.062,212,4.864,213,3.545,214,2.701,215,2.959,216,2.397,217,2.959,218,0.722,219,2.234,220,0.588,221,3.89,222,2.959,223,3.545,224,1.776,225,2.397,226,2.959,227,0.981,228,1.433,229,3.062,230,3.545,231,1.323,232,2.397,233,1.699,234,1.699,235,2.445,236,3.545,237,2.397,238,2.449,239,1.216,240,3.521,241,2.397,242,0.586,243,3.545,244,2.397,245,2.397,246,2.001,247,1.389,248,3.062,249,3.472,250,2.573,251,2.397,252,2.573,253,0.65,254,2.719,255,3.61,256,2.397,257,2.055,258,2.055,259,2.573,260,2.397,261,2.449,262,2.573,263,3.521,264,2.959,265,2.397,266,2.959,267,0.718,268,1.633,269,1.503,270,2.959,271,3.521,272,3.521,273,3.521,274,2.959,275,3.521,276,2.397,277,2.573,278,2.397,279,2.045,280,3.545,281,0.943,282,2.397,283,2.055,284,0.492,285,1.22,286,2.397,287,1.113,288,0.585,289,1.149,290,2.001,291,0.546,292,2.397,293,0.722,294,1.389,295,0.978,296,2.397,297,2.397,298,0.943,299,2.397,300,2.285,301,2.397,302,1.74,303,2.397,304,0.408,305,1.545,306,0.888,307,2.022,308,0.554,309,2.001,310,2.001,311,0.2,312,0.638,313,0.888,314,0.753,315,2.959,316,1.74,317,1.74,318,1.74,319,1.74,320,1.74,321,1.74,322,1.545,323,0.817,324,2.397,325,0.888,326,0.231,327,0.231,328,1.545,329,1.74,330,2.001,331,0.718,332,2.001,333,2.959,334,1.74,335,1.74,336,2.397,337,0.802,338,3.383,339,2.397,340,1.545,341,2.001,342,2.397,343,1.149,344,1.113,345,2.001,346,2.959,347,2.001,348,2.001,349,2.001,350,2.001,351,2.001,352,1.26,353,2.001,354,2.397,355,2.001,356,2.959,357,1.74,358,2.397,359,2.001,360,1.26,361,2.397,362,3.545,363,0.449,364,2.397,365,2.397,366,4.218,367,0.753,368,1.149,369,1.438,370,0.727,371,2.397,372,1.699,373,2.397,374,2.397,375,2.397,376,2.397,377,3.545,378,0.727,379,0.718,380,2.959,381,2.001,382,3.545,383,2.959,384,2.397,385,2.397,386,1.74,387,2.397,388,0.888,389,0.888,390,0.888,391,2.001,392,2.001,393,2.001,394,0.817,395,1.209,396,1.209,397,0.817,398,1.589,399,0.817,400,0.817,401,0.693,402,0.817,403,0.693,404,0.817,405,0.638,406,0.817,407,0.693,408,0.817,409,0.693,410,0.817,411,0.693,412,0.817,413,0.817,414,0.693,415,0.817,416,1.589,417,0.638,418,0.817,419,0.693,420,0.817,421,0.693,422,0.586,423,0.817,424,0.817,425,0.018,426,0.018]],["title/components/AppComponent.html",[0,0.226,401,0.921]],["body/components/AppComponent.html",[0,0.357,1,0.958,2,1.399,3,0.319,4,0.276,5,1.228,6,1.13,7,1.13,8,0.235,10,0.557,11,1.738,13,0.364,14,0.682,16,0.466,17,0.591,18,1.573,19,1.651,20,2.413,21,1.13,22,1.829,23,1.829,24,1.288,25,0.667,26,1.288,27,1.456,28,2.646,30,0.958,31,3.257,32,0.033,33,1.335,34,2.169,36,2.331,37,0.853,38,2.136,39,2.226,40,2.169,43,2.331,44,2.081,45,1.335,46,2.343,47,2.143,48,1.454,49,2.263,50,1.335,51,1.335,52,2.646,53,1.795,55,2.209,59,1.795,60,2.143,61,1.454,62,2.263,63,2.169,64,1.335,65,1.795,66,1.454,67,1.454,68,2.209,69,1.955,70,2.209,71,2.465,72,2.465,73,0.51,75,2.393,76,1.454,77,1.651,78,1.335,86,1.955,87,2.331,90,1.454,91,1.316,92,1.795,93,2.136,98,1.742,99,2.028,101,2.136,102,2.413,103,2.413,104,1.995,105,2.209,108,1.651,109,1.921,113,1.742,114,2.405,116,1.13,122,1.454,123,0.943,131,1.795,138,2.405,144,1.921,146,1.588,158,0.195,159,0.372,168,1.288,169,0.796,176,2.83,184,1.581,185,2.136,186,0.746,187,1.858,189,1.041,190,0.624,191,0.532,192,0.882,193,1.865,199,0.449,205,0.552,206,0.51,220,0.519,227,0.51,231,1.339,238,1.742,239,1.089,242,1.316,253,0.686,267,0.686,268,1.761,269,1.62,279,2.744,284,0.914,285,1.288,287,1.399,288,0.746,291,0.829,293,0.618,295,0.916,308,0.57,311,0.276,312,0.882,313,1.228,314,1.041,326,0.485,327,0.319,328,2.136,337,0.51,344,1.399,370,0.68,378,0.68,379,0.891,388,1.651,390,1.651,394,1.13,395,1.52,396,1.52,397,1.13,398,1.836,399,1.13,400,1.13,401,1.557,402,1.13,403,0.958,404,1.13,405,0.882,406,1.13,407,0.958,408,1.13,409,0.958,410,1.13,411,0.958,412,1.13,413,1.13,414,0.958,415,1.13,416,1.836,417,0.882,418,1.13,419,0.958,420,1.13,421,1.557,422,0.81,423,1.13,424,1.13,425,0.022,426,0.022,427,2.766,428,1.399,429,1.316,430,4.202,431,1.399,432,5.034,433,1.955,434,5.034,435,1.795,436,4.456,437,1.709,438,5.034,439,2.19,440,5.034,441,1.857,442,5.034,443,5.034,444,5.384,445,5.034,446,1.709,447,5.034,448,2.263,449,5.034,450,4.494,451,1.581,452,4.456,453,1.185,454,2.016,455,1.761,456,3.313,457,1.207,458,5.786,459,3.719,460,3.313,461,1.581,462,3.313,463,3.121,464,5.251,465,1.456,466,3.313,467,2.583,468,3.313,469,3.313,470,1.795,471,1.795,472,1.373,473,3.313,474,3.313,475,2.028,476,3.313,477,1.52,478,3.313,479,3.313,480,4.456,481,3.313,482,4.456,483,3.234,484,1.456,485,3.313,486,4.456,487,3.313,488,3.313,489,3.313,490,1.454,491,3.313,492,0.958,493,1.335,494,2.136,495,3.313,496,2.405,497,4.456,498,2.136,499,2.136,500,4.456,501,2.766,502,4.456,503,2.766,504,2.766,505,4.456,506,3.313,507,3.313,508,4.456,509,3.313,510,3.313,511,4.456,512,3.313,513,3.313,514,2.405,515,1.13,516,2.766,517,2.405,518,4.456,519,1.335,520,3.313,521,3.313,522,1.335,523,1.335,524,3.313,525,2.766,526,2.766,527,2.766,528,2.766,529,1.335,530,3.313,531,3.313,532,3.313,533,3.313,534,3.313,535,3.313,536,1.335,537,3.313,538,2.405,539,2.766,540,1.651,541,3.719,542,2.766,543,2.766,544,2.766,545,2.766,546,2.583,547,3.313,548,3.313,549,1.454,550,1.995,551,5.786,552,2.872,553,2.405,554,2.405,555,4.456,556,2.136,557,3.313,558,3.313,559,3.313,560,5.786,561,2.581,562,2.766,563,3.313,564,2.766,565,0.958,566,4.202,567,5.034,568,2.872,569,2.766,570,3.313,571,4.456,572,5.034,573,2.405,574,3.313,575,2.766,576,3.313,577,3.313,578,3.313,579,1.399,580,2.136,581,1.921,582,3.313,583,2.342,584,3.234,585,2.136,586,2.766]],["title/interfaces/Cita.html",[461,1,587,0.266]],["body/interfaces/Cita.html",[3,0.202,4,0.175,8,0.227,10,0.512,12,0.544,13,0.23,14,0.61,16,0.423,17,0.566,18,0.558,25,0.7,32,0.033,37,0.893,73,0.911,91,1.147,123,1.187,145,1.967,155,1.093,156,1.093,157,0.715,158,0.124,159,0.267,169,0.726,186,0.29,190,0.397,191,0.324,198,0.539,199,0.391,203,0.47,205,0.54,206,0.918,210,1.065,218,0.733,220,0.496,224,2.141,227,0.671,228,1.725,231,1.249,239,0.512,242,0.951,253,0.599,267,0.323,281,1.249,284,0.963,288,0.714,291,0.977,293,0.604,295,1.1,298,0.852,304,0.545,308,0.375,311,0.175,325,2.148,326,0.524,327,0.202,331,0.99,337,0.793,344,0.658,363,1.097,367,1.368,369,1.326,370,0.657,372,2.383,378,0.657,379,0.599,425,0.016,426,0.016,428,0.658,429,0.512,431,0.658,437,0.606,439,0.776,441,0.658,446,1.125,448,0.844,451,1.006,453,0.852,454,1.811,455,1.606,457,0.872,461,1.474,465,1.125,471,1.567,472,1.433,475,1.291,477,1.093,484,1.695,492,0.606,493,0.844,515,0.715,519,0.844,522,0.844,523,0.844,529,1.291,536,1.567,540,0.776,550,0.776,565,1.489,579,1.938,587,0.443,588,0.658,589,0.776,590,1.574,591,2.237,592,1.707,593,2.33,594,2.33,595,0.926,596,1.406,597,1.291,598,2.057,599,0.776,600,1.406,601,0.92,602,0.606,603,0.715,604,0.776,605,0.715,606,0.92,607,0.92,608,0.92,609,0.92,610,0.92,611,0.92,612,0.92,613,0.658,614,0.92,615,1.015,616,0.92,617,0.92,618,0.92,619,0.92,620,0.92,621,0.92,622,0.92,623,0.92,624,0.92,625,0.92,626,0.92,627,0.92,628,0.92,629,0.92,630,0.92,631,0.92,632,0.92,633,1.756,634,0.92,635,0.92,636,0.92,637,0.92,638,0.92,639,1.567,640,0.92,641,0.92,642,1.406,643,2.33,644,0.92,645,0.92,646,0.92,647,0.92,648,2.514,649,2.33,650,2.139,651,2.388,652,2.514,653,2.596,654,2.596,655,2.259,656,1.525,657,2.755,658,1.848,659,1.848,660,2.036,661,1.845,662,1.857,663,1.938,664,1.899,665,2.259,666,2.259,667,0.92,668,2.596,669,2.402,670,2.402,671,2.402,672,2.388,673,2.237,674,2.237,675,2.45,676,2.139,677,1.406,678,0.92,679,1.441,680,1.187,681,1.707,682,1.431,683,1.406,684,1.707,685,0.92,686,1.707,687,0.92,688,0.92,689,1.911,690,0.92,691,2.388,692,2.478,693,0.92,694,0.92,695,0.92,696,1.911,697,0.92,698,1.707,699,0.92,700,1.406,701,0.92,702,0.92,703,1.406,704,1.406,705,0.92,706,1.707,707,1.441,708,1.441,709,1.441,710,0.92,711,0.92,712,0.844,713,0.92,714,2.763,715,2.829,716,0.92,717,0.92,718,0.92,719,0.92,720,0.92,721,0.92,722,0.92,723,0.92,724,2.683,725,0.92,726,0.92,727,2.437,728,0.92,729,0.92,730,0.92,731,0.92,732,0.92,733,1.37,734,0.92,735,0.92,736,0.92,737,0.92,738,0.92,739,1.967,740,0.92,741,0.92,742,0.92,743,0.92,744,0.92,745,2.059,746,0.92,747,0.92,748,0.92,749,0.92,750,0.92,751,1.406,752,0.92,753,0.92,754,0.92,755,0.92,756,0.92,757,0.92,758,0.92,759,0.92,760,0.92,761,0.92,762,0.92,763,0.92,764,0.92,765,0.92,766,0.92,767,0.92,768,0.92,769,0.92,770,0.92,771,0.92,772,0.92,773,0.92,774,0.92,775,0.92,776,0.92,777,0.92,778,0.92,779,0.92,780,0.92,781,0.92,782,0.92,783,1.406,784,0.844,785,2.059,786,2.059,787,0.92,788,0.92,789,0.92,790,0.92,791,0.92,792,0.92,793,0.92,794,0.92,795,0.92,796,1.891,797,2.059,798,0.92,799,0.92,800,0.92,801,0.92,802,0.92,803,0.92,804,0.92,805,0.92,806,0.844,807,0.92,808,0.92,809,0.92,810,0.92,811,0.92,812,0.92,813,0.92,814,0.92,815,0.92,816,0.92,817,0.92,818,0.92,819,0.92,820,0.92,821,0.92,822,0.92,823,0.92,824,0.92,825,0.92,826,0.92,827,2.128,828,0.92,829,0.92,830,0.92,831,0.92,832,0.92,833,0.92,834,0.92,835,0.92,836,0.92,837,1.291,838,0.92,839,0.92,840,0.92,841,0.92,842,0.92,843,0.92,844,0.92,845,0.92,846,0.92,847,0.92,848,0.92,849,0.92,850,0.92,851,0.92,852,0.92,853,0.92,854,0.92,855,0.92,856,0.92,857,0.92,858,0.92,859,0.92,860,0.92,861,0.92,862,0.92,863,0.92,864,0.92,865,0.92,866,0.92,867,0.92,868,0.92,869,0.92,870,0.92,871,0.92,872,0.92,873,0.92,874,0.92,875,2.172,876,0.92,877,0.92,878,0.92,879,0.92,880,2.172,881,0.92,882,2.496,883,0.92,884,2.074,885,2.275,886,1.406,887,2.059,888,1.707,889,1.406,890,1.707,891,1.911,892,0.92,893,1.707,894,1.707,895,0.92,896,2.259,897,1.707,898,1.006,899,0.92,900,0.92,901,2.059,902,0.92,903,0.92,904,0.92,905,2.33,906,1.911,907,1.535,908,0.92,909,0.92,910,0.844,911,0.92,912,2.545,913,2.514,914,0.92,915,2.729,916,0.92,917,1.91,918,2.259,919,2.059,920,2.172,921,2.059,922,2.059,923,2.669,924,0.92,925,2.259,926,2.172,927,2.172,928,2.172,929,1.911,930,0.92,931,2.259,932,1.911,933,1.707,934,1.707,935,1.406,936,0.92,937,0.92,938,0.92,939,0.92,940,0.92,941,0.92,942,0.92,943,0.92,944,0.92,945,0.92,946,0.92,947,0.92,948,2.059,949,2.514,950,0.92,951,2.059,952,0.92,953,0.92,954,0.92,955,0.776,956,0.92,957,0.92,958,0.92,959,1.291,960,0.92,961,1.567,962,1.187,963,1.187,964,0.844,965,1.614,966,2.172,967,1.911,968,1.291,969,0.844,970,0.92,971,0.92,972,0.844,973,0.844,974,1.291,975,0.92,976,1.406,977,0.92,978,0.92,979,0.776,980,0.92,981,0.92,982,0.92,983,1.222,984,0.92,985,0.92,986,0.92,987,0.92,988,0.92,989,0.92,990,0.92,991,0.92,992,0.92,993,0.92,994,0.92,995,0.92,996,0.92,997,0.852,998,1.006,999,1.291,1000,1.093,1001,1.406,1002,1.093,1003,1.291,1004,0.92,1005,1.187,1006,0.92,1007,0.92,1008,1.006,1009,0.92,1010,2.059,1011,2.059,1012,2.059,1013,1.707,1014,0.92,1015,1.406,1016,1.291,1017,1.406,1018,1.406,1019,1.406,1020,0.92,1021,1.406,1022,0.92,1023,0.92,1024,1.707,1025,1.911,1026,2.059,1027,1.187,1028,0.92,1029,1.707,1030,0.606,1031,0.606,1032,0.92,1033,0.92,1034,0.92,1035,0.92,1036,0.92,1037,0.92,1038,0.92,1039,0.92,1040,1.406,1041,0.92,1042,0.92,1043,0.92,1044,0.92,1045,0.92,1046,0.92,1047,0.92,1048,1.406,1049,1.911,1050,0.844,1051,0.844,1052,0.92,1053,0.92,1054,0.92,1055,1.291,1056,0.92,1057,0.92,1058,0.92,1059,0.92,1060,0.92,1061,1.707,1062,0.92,1063,0.92,1064,0.92,1065,0.92,1066,0.92,1067,0.844,1068,1.406,1069,0.92,1070,0.92,1071,1.406,1072,0.92,1073,0.844,1074,0.92,1075,0.776,1076,1.406,1077,0.92,1078,1.291,1079,0.844,1080,0.47,1081,0.92,1082,0.92,1083,0.776]],["title/interfaces/Cupo.html",[465,0.921,587,0.266]],["body/interfaces/Cupo.html",[3,0.201,4,0.174,8,0.227,10,0.511,12,0.544,13,0.229,14,0.609,16,0.426,17,0.565,18,0.556,25,0.699,32,0.033,37,0.892,73,0.91,91,1.146,123,1.187,145,1.965,155,1.09,156,1.09,157,0.712,158,0.123,159,0.267,169,0.726,186,0.29,190,0.396,191,0.391,198,0.538,199,0.391,203,0.468,205,0.539,206,0.918,210,0.949,218,0.738,220,0.496,224,2.127,227,0.67,228,1.725,231,1.247,239,0.511,242,0.949,253,0.598,267,0.322,281,1.247,284,0.962,288,0.713,291,0.984,293,0.603,295,1.1,298,0.85,304,0.544,308,0.374,311,0.174,325,2.17,326,0.524,327,0.201,331,0.99,337,0.792,344,0.656,363,1.097,367,1.366,369,1.324,370,0.656,372,2.381,378,0.656,379,0.598,425,0.016,426,0.016,428,0.656,429,0.511,431,0.656,437,0.604,439,0.774,441,0.656,446,1.123,448,0.842,451,1.004,453,0.85,454,1.809,455,1.605,457,0.871,461,1.219,465,1.355,471,1.564,472,1.432,475,1.288,477,1.09,484,1.694,492,0.604,493,0.842,515,0.712,519,0.842,522,0.842,523,0.842,529,1.288,536,1.564,540,0.774,550,0.774,565,1.487,579,1.937,587,0.442,588,0.656,589,0.774,590,1.572,591,2.235,592,1.403,593,2.057,594,2.057,595,0.924,596,1.403,597,1.288,598,2.056,599,0.774,600,1.403,601,0.917,602,0.604,603,0.712,604,0.774,605,0.712,606,0.917,607,0.917,608,0.917,609,0.917,610,0.917,611,0.917,612,0.917,613,0.656,614,0.917,615,1.014,616,0.917,617,0.917,618,0.917,619,0.917,620,0.917,621,0.917,622,0.917,623,0.917,624,0.917,625,0.917,626,0.917,627,0.917,628,0.917,629,0.917,630,0.917,631,0.917,632,0.917,633,1.754,634,0.917,635,0.917,636,0.917,637,0.917,638,0.917,639,1.564,640,0.917,641,0.917,642,1.403,643,2.328,644,0.917,645,0.917,646,0.917,647,0.917,648,2.512,649,2.328,650,2.137,651,2.386,652,2.512,653,2.594,654,2.594,655,2.257,656,1.525,657,2.754,658,1.847,659,1.847,660,2.036,661,1.844,662,1.856,663,1.937,664,1.898,665,2.257,666,2.257,667,0.917,668,2.594,669,2.401,670,2.401,671,2.401,672,2.386,673,2.334,674,2.334,675,2.449,676,2.137,677,1.403,678,0.917,679,1.438,680,1.184,681,1.704,682,1.632,683,2.057,684,1.704,685,0.917,686,1.704,687,0.917,688,0.917,689,1.908,690,0.917,691,2.386,692,2.476,693,0.917,694,0.917,695,0.917,696,1.908,697,0.917,698,1.704,699,0.917,700,1.403,701,0.917,702,0.917,703,1.403,704,1.403,705,0.917,706,1.704,707,1.438,708,1.438,709,1.438,710,0.917,711,0.917,712,0.842,713,0.917,714,2.762,715,2.829,716,0.917,717,0.917,718,0.917,719,0.917,720,0.917,721,0.917,722,0.917,723,0.917,724,2.682,725,0.917,726,0.917,727,2.435,728,0.917,729,0.917,730,0.917,731,0.917,732,0.917,733,1.368,734,0.917,735,0.917,736,0.917,737,0.917,738,0.917,739,1.965,740,0.917,741,0.917,742,0.917,743,0.917,744,0.917,745,2.057,746,0.917,747,0.917,748,0.917,749,0.917,750,0.917,751,1.403,752,0.917,753,0.917,754,0.917,755,0.917,756,0.917,757,0.917,758,0.917,759,0.917,760,0.917,761,0.917,762,0.917,763,0.917,764,0.917,765,0.917,766,0.917,767,0.917,768,0.917,769,0.917,770,0.917,771,0.917,772,0.917,773,0.917,774,0.917,775,0.917,776,0.917,777,0.917,778,0.917,779,0.917,780,0.917,781,0.917,782,0.917,783,1.403,784,0.842,785,2.057,786,2.057,787,0.917,788,0.917,789,0.917,790,0.917,791,0.917,792,0.917,793,0.917,794,0.917,795,0.917,796,1.888,797,2.057,798,0.917,799,0.917,800,0.917,801,0.917,802,0.917,803,0.917,804,0.917,805,0.917,806,0.842,807,0.917,808,0.917,809,0.917,810,0.917,811,0.917,812,0.917,813,0.917,814,0.917,815,0.917,816,0.917,817,0.917,818,0.917,819,0.917,820,0.917,821,0.917,822,0.917,823,0.917,824,0.917,825,0.917,826,0.917,827,2.127,828,0.917,829,0.917,830,0.917,831,0.917,832,0.917,833,0.917,834,0.917,835,0.917,836,0.917,837,1.288,838,0.917,839,0.917,840,0.917,841,0.917,842,0.917,843,0.917,844,0.917,845,0.917,846,0.917,847,0.917,848,0.917,849,0.917,850,0.917,851,0.917,852,0.917,853,0.917,854,0.917,855,0.917,856,0.917,857,0.917,858,0.917,859,0.917,860,0.917,861,0.917,862,0.917,863,0.917,864,0.917,865,0.917,866,0.917,867,0.917,868,0.917,869,0.917,870,0.917,871,0.917,872,0.917,873,0.917,874,0.917,875,2.169,876,0.917,877,0.917,878,0.917,879,0.917,880,2.169,881,0.917,882,2.495,883,0.917,884,2.072,885,2.273,886,1.403,887,2.057,888,1.704,889,1.403,890,1.704,891,1.908,892,0.917,893,1.704,894,1.704,895,0.917,896,2.257,897,1.704,898,1.004,899,0.917,900,0.917,901,2.057,902,0.917,903,0.917,904,0.917,905,2.328,906,1.908,907,1.534,908,0.917,909,0.917,910,0.842,911,0.917,912,2.543,913,2.512,914,0.917,915,2.728,916,0.917,917,1.909,918,2.257,919,2.057,920,2.169,921,2.057,922,2.057,923,2.668,924,0.917,925,2.257,926,2.169,927,2.169,928,2.169,929,1.908,930,0.917,931,2.257,932,1.908,933,1.704,934,1.704,935,1.403,936,0.917,937,0.917,938,0.917,939,0.917,940,0.917,941,0.917,942,0.917,943,0.917,944,0.917,945,0.917,946,0.917,947,0.917,948,2.057,949,2.512,950,0.917,951,2.057,952,0.917,953,0.917,954,0.917,955,0.774,956,0.917,957,0.917,958,0.917,959,1.288,960,0.917,961,1.564,962,1.184,963,1.184,964,0.842,965,1.611,966,2.169,967,1.908,968,1.288,969,0.842,970,0.917,971,0.917,972,0.842,973,0.842,974,1.288,975,0.917,976,1.403,977,0.917,978,0.917,979,0.774,980,0.917,981,0.917,982,0.917,983,1.219,984,0.917,985,0.917,986,0.917,987,0.917,988,0.917,989,0.917,990,0.917,991,0.917,992,0.917,993,0.917,994,0.917,995,0.917,996,0.917,997,0.85,998,1.004,999,1.288,1000,1.09,1001,1.403,1002,1.09,1003,1.288,1004,0.917,1005,1.184,1006,0.917,1007,0.917,1008,1.004,1009,0.917,1010,2.057,1011,2.057,1012,2.057,1013,1.704,1014,0.917,1015,1.403,1016,1.288,1017,1.403,1018,1.403,1019,1.403,1020,0.917,1021,1.403,1022,0.917,1023,0.917,1024,1.704,1025,1.908,1026,2.057,1027,1.184,1028,0.917,1029,1.704,1030,0.604,1031,0.604,1032,0.917,1033,0.917,1034,0.917,1035,0.917,1036,0.917,1037,0.917,1038,0.917,1039,0.917,1040,1.403,1041,0.917,1042,0.917,1043,0.917,1044,0.917,1045,0.917,1046,0.917,1047,0.917,1048,1.403,1049,1.908,1050,0.842,1051,0.842,1052,0.917,1053,0.917,1054,0.917,1055,1.288,1056,0.917,1057,0.917,1058,0.917,1059,0.917,1060,0.917,1061,1.704,1062,0.917,1063,0.917,1064,0.917,1065,0.917,1066,0.917,1067,0.842,1068,1.403,1069,0.917,1070,0.917,1071,1.403,1072,0.917,1073,0.842,1074,0.917,1075,0.774,1076,1.403,1077,0.917,1078,1.288,1079,0.842,1080,0.468,1081,0.917,1082,0.917,1083,0.774]],["title/components/DashboardComponent.html",[0,0.226,405,0.847]],["body/components/DashboardComponent.html",[0,0.339,1,0.866,2,1.305,3,0.522,4,0.25,5,1.109,6,1.021,7,1.021,8,0.212,10,0.587,11,1.381,12,0.46,13,0.457,14,0.654,15,3.745,16,0.451,17,0.632,21,1.021,22,1.803,23,1.837,24,1.202,25,0.592,26,1.202,27,1.381,30,0.866,32,0.033,33,2.26,34,2.525,36,2.184,37,0.836,38,2.289,39,2.278,40,2.079,43,2.322,44,1.911,45,1.675,46,2.174,47,2.079,50,1.675,51,1.675,52,1.573,53,2.079,54,2.41,55,2.264,59,1.675,60,2.235,61,2.615,62,2.576,63,2.549,64,2.4,65,2.538,66,2.096,67,1.824,68,2.718,69,2.647,70,2.776,71,2.096,72,2.096,73,0.461,75,2.382,76,1.314,77,2.258,78,2.26,79,2.499,80,2.184,81,1.675,84,2.41,86,2.096,87,2.456,88,1.314,91,1.325,92,2.079,93,2.289,100,2.318,104,1.769,105,2.264,108,1.54,116,1.021,122,2.647,125,2.499,129,2.679,131,2.525,141,4.177,142,3.47,143,2.173,146,1.435,148,3.745,158,0.282,159,0.347,168,1.202,169,0.592,184,1.305,186,0.715,187,1.791,189,0.94,190,0.639,191,0.347,192,0.796,193,1.769,198,0.415,199,0.497,205,0.748,206,0.795,218,0.371,220,0.587,227,0.461,239,1.016,247,1.735,253,0.795,254,2.679,257,2.41,258,2.41,267,0.461,268,1.492,269,1.373,279,2.096,285,1.568,287,1.305,288,0.576,291,0.954,293,0.662,294,1.735,300,2.679,306,1.109,308,0.541,311,0.25,312,0.796,314,0.94,322,1.929,326,0.288,327,0.288,331,0.64,343,2.473,363,0.966,388,1.109,389,1.911,390,1.54,394,1.021,395,1.418,396,1.418,397,1.021,398,1.76,399,1.021,400,1.021,401,0.866,402,1.021,403,0.866,404,1.021,405,1.373,406,1.021,407,0.866,408,1.021,409,0.866,410,1.021,411,0.866,412,1.021,413,1.021,414,0.866,415,1.021,416,1.76,417,1.373,418,1.629,419,0.866,420,1.021,421,0.866,422,0.732,423,1.021,424,1.021,425,0.021,426,0.021,428,1.5,429,1.016,433,1.824,435,1.675,437,1.622,446,1.202,457,1.258,463,2.41,477,1.418,490,1.314,514,3.745,546,2.41,549,1.314,561,2.473,562,2.499,564,5.171,566,3.47,569,2.499,573,3.017,579,1.62,580,1.929,587,0.25,590,0.866,603,1.849,604,1.54,615,0.509,633,1.418,656,1.016,707,1.54,708,1.54,709,1.54,733,1.373,907,0.866,910,1.206,997,1.373,1008,1.305,1080,1.389,1084,2.173,1085,3.47,1086,3.467,1087,3.986,1088,3.986,1089,3.986,1090,3.47,1091,3.078,1092,3.986,1093,3.986,1094,3.986,1095,4.307,1096,4.684,1097,4.684,1098,4.684,1099,4.804,1100,4.307,1101,4.307,1102,4.157,1103,3.986,1104,2.993,1105,2.949,1106,1.807,1107,2.993,1108,2.993,1109,2.993,1110,2.993,1111,3.47,1112,2.993,1113,2.993,1114,1.824,1115,3.142,1116,2.993,1117,2.993,1118,4.525,1119,2.679,1120,2.993,1121,3.47,1122,3.494,1123,4.804,1124,3.017,1125,4.379,1126,2.856,1127,3.017,1128,4.177,1129,3.017,1130,2.993,1131,4.525,1132,4.804,1133,3.017,1134,2.993,1135,2.993,1136,3.017,1137,2.993,1138,2.993,1139,3.47,1140,1.314,1141,2.499,1142,1.929,1143,1.929,1144,1.929,1145,3.47,1146,2.173,1147,2.499,1148,2.499,1149,2.499,1150,2.499,1151,1.435,1152,2.173,1153,1.992,1154,2.173,1155,2.173,1156,1.929,1157,2.499,1158,2.499,1159,2.499,1160,2.499,1161,2.499,1162,2.499,1163,1.929,1164,2.499,1165,3.47,1166,2.499,1167,2.173,1168,1.735,1169,2.499,1170,2.173,1171,3.017,1172,2.173,1173,2.173,1174,2.173,1175,3.745,1176,2.173,1177,2.173,1178,2.173,1179,2.173,1180,2.173,1181,2.499,1182,2.173,1183,1.109,1184,2.173,1185,2.173,1186,2.173,1187,2.499,1188,3.47,1189,4.157,1190,4.157,1191,4.157,1192,3.47,1193,3.017,1194,2.41,1195,3.467,1196,2.499,1197,4.898,1198,1.573,1199,3.617,1200,2.185,1201,1.929,1202,4.157,1203,3.986,1204,5.233,1205,4.525,1206,2.993,1207,2.993,1208,5.421,1209,1.573,1210,2.993,1211,5.16,1212,4.157,1213,2.499,1214,2.499,1215,2.712,1216,2.993,1217,2.712,1218,2.185,1219,2.993,1220,4.157,1221,4.157,1222,2.993,1223,4.157,1224,1.573,1225,2.993,1226,2.993,1227,2.499,1228,4.157,1229,2.993,1230,2.993,1231,2.993,1232,2.993,1233,2.993,1234,2.993,1235,2.993,1236,2.993,1237,2.993]],["title/interfaces/Especialidad.html",[472,0.779,587,0.266]],["body/interfaces/Especialidad.html",[3,0.202,4,0.175,8,0.228,10,0.512,12,0.544,13,0.231,14,0.61,16,0.423,17,0.566,18,0.558,25,0.7,32,0.033,37,0.893,73,0.911,91,1.148,123,1.187,145,1.968,155,1.094,156,1.094,157,0.716,158,0.124,159,0.268,169,0.726,186,0.291,190,0.397,191,0.268,198,0.54,199,0.392,203,0.471,205,0.54,206,0.919,210,1.066,218,0.733,220,0.496,224,2.113,227,0.671,228,1.725,231,1.249,239,0.513,242,0.952,253,0.6,267,0.323,281,1.249,284,0.964,288,0.714,291,0.981,293,0.604,295,1.1,298,0.853,304,0.546,308,0.375,311,0.175,325,2.149,326,0.525,327,0.202,331,0.99,337,0.793,344,0.659,363,1.098,367,1.369,369,1.328,370,0.658,372,2.383,378,0.658,379,0.6,425,0.016,426,0.016,428,0.659,429,0.513,431,0.659,437,0.607,439,0.777,441,0.659,446,1.126,448,0.845,451,1.007,453,0.853,454,1.812,455,1.606,457,0.873,461,1.223,465,1.126,471,1.568,472,1.458,475,1.292,477,1.094,484,1.695,492,0.607,493,0.845,515,0.716,519,0.845,522,0.845,523,0.845,529,1.292,536,1.568,540,0.777,550,0.777,565,1.49,579,1.938,587,0.443,588,0.659,589,0.777,590,1.574,591,2.238,592,1.708,593,2.061,594,2.061,595,0.927,596,1.408,597,1.292,598,2.058,599,0.777,600,1.408,601,0.921,602,0.607,603,0.716,604,0.777,605,0.716,606,0.921,607,0.921,608,0.921,609,0.921,610,0.921,611,0.921,612,0.921,613,0.659,614,0.921,615,1.015,616,0.921,617,0.921,618,0.921,619,0.921,620,0.921,621,0.921,622,0.921,623,0.921,624,0.921,625,0.921,626,0.921,627,0.921,628,0.921,629,0.921,630,0.921,631,0.921,632,0.921,633,1.757,634,0.921,635,0.921,636,0.921,637,0.921,638,0.921,639,1.568,640,0.921,641,0.921,642,1.408,643,2.331,644,0.921,645,0.921,646,0.921,647,0.921,648,2.515,649,2.331,650,2.14,651,2.389,652,2.515,653,2.596,654,2.596,655,2.261,656,1.539,657,2.756,658,1.848,659,1.848,660,2.037,661,1.845,662,1.857,663,1.938,664,1.899,665,2.261,666,2.261,667,0.921,668,2.596,669,2.403,670,2.403,671,2.403,672,2.389,673,2.238,674,2.238,675,2.451,676,2.14,677,1.408,678,0.921,679,1.442,680,1.188,681,1.708,682,1.432,683,1.408,684,1.708,685,0.921,686,1.708,687,0.921,688,0.921,689,1.913,690,0.921,691,2.389,692,2.479,693,0.921,694,0.921,695,0.921,696,1.913,697,0.921,698,1.708,699,0.921,700,1.408,701,0.921,702,0.921,703,1.408,704,1.408,705,0.921,706,1.708,707,1.442,708,1.442,709,1.442,710,0.921,711,0.921,712,0.845,713,0.921,714,2.763,715,2.83,716,0.921,717,0.921,718,0.921,719,0.921,720,0.921,721,0.921,722,0.921,723,0.921,724,2.684,725,0.921,726,0.921,727,2.438,728,0.921,729,0.921,730,0.921,731,0.921,732,0.921,733,1.371,734,0.921,735,0.921,736,0.921,737,0.921,738,0.921,739,1.968,740,0.921,741,0.921,742,0.921,743,0.921,744,0.921,745,2.061,746,0.921,747,0.921,748,0.921,749,0.921,750,0.921,751,1.408,752,0.921,753,0.921,754,0.921,755,0.921,756,0.921,757,0.921,758,0.921,759,0.921,760,0.921,761,0.921,762,0.921,763,0.921,764,0.921,765,0.921,766,0.921,767,0.921,768,0.921,769,0.921,770,0.921,771,0.921,772,0.921,773,0.921,774,0.921,775,0.921,776,0.921,777,0.921,778,0.921,779,0.921,780,0.921,781,0.921,782,0.921,783,1.408,784,0.845,785,2.061,786,2.061,787,0.921,788,0.921,789,0.921,790,0.921,791,0.921,792,0.921,793,0.921,794,0.921,795,0.921,796,1.892,797,2.061,798,0.921,799,0.921,800,0.921,801,0.921,802,0.921,803,0.921,804,0.921,805,0.921,806,0.845,807,0.921,808,0.921,809,0.921,810,0.921,811,0.921,812,0.921,813,0.921,814,0.921,815,0.921,816,0.921,817,0.921,818,0.921,819,0.921,820,0.921,821,0.921,822,0.921,823,0.921,824,0.921,825,0.921,826,0.921,827,2.128,828,0.921,829,0.921,830,0.921,831,0.921,832,0.921,833,0.921,834,0.921,835,0.921,836,0.921,837,1.292,838,0.921,839,0.921,840,0.921,841,0.921,842,0.921,843,0.921,844,0.921,845,0.921,846,0.921,847,0.921,848,0.921,849,0.921,850,0.921,851,0.921,852,0.921,853,0.921,854,0.921,855,0.921,856,0.921,857,0.921,858,0.921,859,0.921,860,0.921,861,0.921,862,0.921,863,0.921,864,0.921,865,0.921,866,0.921,867,0.921,868,0.921,869,0.921,870,0.921,871,0.921,872,0.921,873,0.921,874,0.921,875,2.173,876,0.921,877,0.921,878,0.921,879,0.921,880,2.173,881,0.921,882,2.496,883,0.921,884,2.075,885,2.276,886,1.408,887,2.061,888,1.708,889,1.408,890,1.708,891,1.913,892,0.921,893,1.708,894,1.708,895,0.921,896,2.261,897,1.708,898,1.007,899,0.921,900,0.921,901,2.061,902,0.921,903,0.921,904,0.921,905,2.331,906,1.913,907,1.536,908,0.921,909,0.921,910,0.845,911,0.921,912,2.545,913,2.515,914,0.921,915,2.729,916,0.921,917,1.91,918,2.261,919,2.061,920,2.173,921,2.061,922,2.061,923,2.669,924,0.921,925,2.261,926,2.173,927,2.173,928,2.173,929,1.913,930,0.921,931,2.261,932,1.913,933,1.708,934,1.708,935,1.408,936,0.921,937,0.921,938,0.921,939,0.921,940,0.921,941,0.921,942,0.921,943,0.921,944,0.921,945,0.921,946,0.921,947,0.921,948,2.061,949,2.515,950,0.921,951,2.061,952,0.921,953,0.921,954,0.921,955,0.777,956,0.921,957,0.921,958,0.921,959,1.292,960,0.921,961,1.568,962,1.188,963,1.188,964,0.845,965,1.615,966,2.173,967,1.913,968,1.292,969,0.845,970,0.921,971,0.921,972,0.845,973,0.845,974,1.292,975,0.921,976,1.408,977,0.921,978,0.921,979,0.777,980,0.921,981,0.921,982,0.921,983,1.223,984,0.921,985,0.921,986,0.921,987,0.921,988,0.921,989,0.921,990,0.921,991,0.921,992,0.921,993,0.921,994,0.921,995,0.921,996,0.921,997,0.853,998,1.007,999,1.292,1000,1.094,1001,1.408,1002,1.094,1003,1.292,1004,0.921,1005,1.188,1006,0.921,1007,0.921,1008,1.007,1009,0.921,1010,2.061,1011,2.061,1012,2.061,1013,1.708,1014,0.921,1015,1.408,1016,1.292,1017,1.408,1018,1.408,1019,1.408,1020,0.921,1021,1.408,1022,0.921,1023,0.921,1024,1.708,1025,1.913,1026,2.061,1027,1.188,1028,0.921,1029,1.708,1030,0.607,1031,0.607,1032,0.921,1033,0.921,1034,0.921,1035,0.921,1036,0.921,1037,0.921,1038,0.921,1039,0.921,1040,1.408,1041,0.921,1042,0.921,1043,0.921,1044,0.921,1045,0.921,1046,0.921,1047,0.921,1048,1.408,1049,1.913,1050,0.845,1051,0.845,1052,0.921,1053,0.921,1054,0.921,1055,1.292,1056,0.921,1057,0.921,1058,0.921,1059,0.921,1060,0.921,1061,1.708,1062,0.921,1063,0.921,1064,0.921,1065,0.921,1066,0.921,1067,0.845,1068,1.408,1069,0.921,1070,0.921,1071,1.408,1072,0.921,1073,0.845,1074,0.921,1075,0.777,1076,1.408,1077,0.921,1078,1.292,1079,0.845,1080,0.471,1081,0.921,1082,0.921,1083,0.777]],["title/interfaces/Funcionario.html",[123,0.596,587,0.266]],["body/interfaces/Funcionario.html",[3,0.2,4,0.173,8,0.226,10,0.51,12,0.543,13,0.228,14,0.608,16,0.423,17,0.564,18,0.552,25,0.698,32,0.033,37,0.892,73,0.909,91,1.143,123,1.191,145,1.961,155,1.085,156,1.085,157,0.708,158,0.122,159,0.265,169,0.725,186,0.288,190,0.394,191,0.453,192,0.846,198,0.536,199,0.39,203,0.466,205,0.537,206,0.917,210,0.945,218,0.738,220,0.51,224,2.126,227,0.668,228,1.724,231,1.243,239,0.508,242,0.945,253,0.596,267,0.32,281,1.243,284,0.959,288,0.711,291,0.997,293,0.601,295,1.099,298,0.846,304,0.541,308,0.373,311,0.173,325,2.144,326,0.523,327,0.2,331,0.99,337,0.79,344,0.652,363,1.095,367,1.361,369,1.319,370,0.653,372,2.379,378,0.653,379,0.596,425,0.016,426,0.016,428,0.652,429,0.508,431,0.652,437,0.6,439,0.769,441,0.652,446,1.118,448,0.836,451,0.999,453,0.846,454,1.806,455,1.602,457,0.867,461,1.215,465,1.118,471,1.558,472,1.466,475,1.282,477,1.319,484,1.691,492,0.6,493,0.836,515,0.708,519,0.836,522,0.836,523,0.836,529,1.282,536,1.558,540,0.769,550,0.769,565,1.484,579,1.936,587,0.442,588,0.652,589,0.769,590,1.57,591,2.232,592,1.396,593,2.051,594,2.051,595,0.92,596,1.396,597,1.282,598,2.052,599,0.769,600,1.396,601,0.911,602,0.6,603,0.708,604,0.769,605,0.708,606,0.911,607,0.911,608,0.911,609,0.911,610,0.911,611,0.911,612,0.911,613,0.652,614,0.911,615,1.013,616,0.911,617,0.911,618,0.911,619,0.911,620,0.911,621,0.911,622,0.911,623,0.911,624,0.911,625,0.911,626,0.911,627,0.911,628,0.911,629,0.911,630,0.911,631,0.911,632,0.911,633,1.75,634,0.911,635,0.911,636,0.911,637,0.911,638,0.911,639,1.558,640,0.911,641,0.911,642,1.396,643,2.323,644,0.911,645,0.911,646,0.911,647,0.911,648,2.509,649,2.323,650,2.133,651,2.382,652,2.509,653,2.591,654,2.591,655,2.252,656,1.524,657,2.752,658,1.855,659,1.855,660,2.041,661,1.852,662,1.863,663,1.958,664,1.927,665,2.252,666,2.252,667,0.911,668,2.591,669,2.398,670,2.398,671,2.398,672,2.382,673,2.232,674,2.232,675,2.446,676,2.133,677,1.396,678,0.911,679,1.433,680,1.179,681,1.697,682,1.426,683,1.396,684,1.697,685,0.911,686,1.697,687,0.911,688,0.911,689,1.902,690,0.911,691,2.382,692,2.473,693,0.911,694,0.911,695,0.911,696,1.902,697,0.911,698,1.697,699,0.911,700,1.396,701,0.911,702,0.911,703,1.396,704,1.396,705,0.911,706,1.697,707,1.433,708,1.433,709,1.433,710,0.911,711,0.911,712,0.836,713,0.911,714,2.76,715,2.827,716,0.911,717,0.911,718,0.911,719,0.911,720,0.911,721,0.911,722,0.911,723,0.911,724,2.679,725,0.911,726,0.911,727,2.431,728,0.911,729,0.911,730,0.911,731,0.911,732,0.911,733,1.365,734,0.911,735,0.911,736,0.911,737,0.911,738,0.911,739,1.961,740,0.911,741,0.911,742,0.911,743,0.911,744,0.911,745,2.051,746,0.911,747,0.911,748,0.911,749,0.911,750,0.911,751,1.396,752,0.911,753,0.911,754,0.911,755,0.911,756,0.911,757,0.911,758,0.911,759,0.911,760,0.911,761,0.911,762,0.911,763,0.911,764,0.911,765,0.911,766,0.911,767,0.911,768,0.911,769,0.911,770,0.911,771,0.911,772,0.911,773,0.911,774,0.911,775,0.911,776,0.911,777,0.911,778,0.911,779,0.911,780,0.911,781,0.911,782,0.911,783,1.396,784,0.836,785,2.051,786,2.051,787,0.911,788,0.911,789,0.911,790,0.911,791,0.911,792,0.911,793,0.911,794,0.911,795,0.911,796,1.883,797,2.051,798,0.911,799,0.911,800,0.911,801,0.911,802,0.911,803,0.911,804,0.911,805,0.911,806,0.836,807,0.911,808,0.911,809,0.911,810,0.911,811,0.911,812,0.911,813,0.911,814,0.911,815,0.911,816,0.911,817,0.911,818,0.911,819,0.911,820,0.911,821,0.911,822,0.911,823,0.911,824,0.911,825,0.911,826,0.911,827,2.126,828,0.911,829,0.911,830,0.911,831,0.911,832,0.911,833,0.911,834,0.911,835,0.911,836,0.911,837,1.282,838,0.911,839,0.911,840,0.911,841,0.911,842,0.911,843,0.911,844,0.911,845,0.911,846,0.911,847,0.911,848,0.911,849,0.911,850,0.911,851,0.911,852,0.911,853,0.911,854,0.911,855,0.911,856,0.911,857,0.911,858,0.911,859,0.911,860,0.911,861,0.911,862,0.911,863,0.911,864,0.911,865,0.911,866,0.911,867,0.911,868,0.911,869,0.911,870,0.911,871,0.911,872,0.911,873,0.911,874,0.911,875,2.164,876,0.911,877,0.911,878,0.911,879,0.911,880,2.164,881,0.911,882,2.493,883,0.911,884,2.067,885,2.27,886,1.396,887,2.051,888,1.697,889,1.396,890,1.697,891,1.902,892,0.911,893,1.697,894,1.697,895,0.911,896,2.252,897,1.697,898,0.999,899,0.911,900,0.911,901,2.051,902,0.911,903,0.911,904,0.911,905,2.323,906,1.902,907,1.531,908,0.911,909,0.911,910,0.836,911,0.911,912,2.54,913,2.509,914,0.911,915,2.726,916,0.911,917,1.907,918,2.252,919,2.051,920,2.164,921,2.051,922,2.051,923,2.665,924,0.911,925,2.252,926,2.164,927,2.164,928,2.164,929,1.902,930,0.911,931,2.252,932,1.902,933,1.697,934,1.697,935,1.396,936,0.911,937,0.911,938,0.911,939,0.911,940,0.911,941,0.911,942,0.911,943,0.911,944,0.911,945,0.911,946,0.911,947,0.911,948,2.051,949,2.509,950,0.911,951,2.051,952,0.911,953,0.911,954,0.911,955,0.769,956,0.911,957,0.911,958,0.911,959,1.282,960,0.911,961,1.558,962,1.179,963,1.179,964,0.836,965,1.606,966,2.164,967,1.902,968,1.282,969,0.836,970,0.911,971,0.911,972,0.836,973,0.836,974,1.282,975,0.911,976,1.396,977,0.911,978,0.911,979,0.769,980,0.911,981,0.911,982,0.911,983,1.215,984,0.911,985,0.911,986,0.911,987,0.911,988,0.911,989,0.911,990,0.911,991,0.911,992,0.911,993,0.911,994,0.911,995,0.911,996,0.911,997,0.846,998,0.999,999,1.282,1000,1.085,1001,1.396,1002,1.085,1003,1.282,1004,0.911,1005,1.179,1006,0.911,1007,0.911,1008,0.999,1009,0.911,1010,2.051,1011,2.051,1012,2.051,1013,1.697,1014,0.911,1015,1.396,1016,1.282,1017,1.396,1018,1.396,1019,1.396,1020,0.911,1021,1.396,1022,0.911,1023,0.911,1024,1.697,1025,1.902,1026,2.051,1027,1.179,1028,0.911,1029,1.697,1030,0.6,1031,0.6,1032,0.911,1033,0.911,1034,0.911,1035,0.911,1036,0.911,1037,0.911,1038,0.911,1039,0.911,1040,1.396,1041,0.911,1042,0.911,1043,0.911,1044,0.911,1045,0.911,1046,0.911,1047,0.911,1048,1.396,1049,1.902,1050,0.836,1051,0.836,1052,0.911,1053,0.911,1054,0.911,1055,1.282,1056,0.911,1057,0.911,1058,0.911,1059,0.911,1060,0.911,1061,1.697,1062,0.911,1063,0.911,1064,0.911,1065,0.911,1066,0.911,1067,0.836,1068,1.396,1069,0.911,1070,0.911,1071,1.396,1072,0.911,1073,0.836,1074,0.911,1075,0.769,1076,1.396,1077,0.911,1078,1.282,1079,0.836,1080,0.466,1081,0.911,1082,0.911,1083,0.769]],["title/interfaces/FuncionarioWithAvailability.html",[587,0.266,1238,2.312]],["body/interfaces/FuncionarioWithAvailability.html",[0,0.337,3,0.351,4,0.304,8,0.259,10,0.598,11,1.372,12,0.558,13,0.521,14,0.674,16,0.465,17,0.4,18,1.542,19,1.35,20,2.274,22,1.054,23,1.054,24,1.054,25,0.736,26,1.054,27,1.372,28,2.494,29,3.961,32,0.033,37,0.658,73,0.813,99,1.911,123,1.208,141,2.645,149,2.112,150,2.645,158,0.215,159,0.396,160,3.041,161,4.404,162,2.645,163,3.961,164,2.645,166,3.041,169,0.588,170,3.041,180,3.041,186,0.505,191,0.304,192,1.262,198,0.658,199,0.529,200,3.041,203,0.817,204,3.961,209,3.041,212,4.838,214,3.24,215,3.041,217,3.041,218,0.769,219,2.529,220,0.573,221,3.041,222,3.041,224,1.243,227,0.945,228,1.262,231,1.404,238,2.494,239,0.891,240,3.041,248,2.645,249,3.058,250,2.645,252,2.645,253,0.893,254,2.349,255,4.057,257,2.112,258,2.112,259,2.645,261,2.494,262,2.645,263,3.961,264,3.041,266,3.041,267,0.813,270,3.041,271,3.961,272,3.961,273,3.961,274,3.041,275,3.961,277,2.645,279,2.315,281,0.969,284,1.147,285,1.676,287,1.866,288,0.85,289,1.746,290,3.041,291,0.731,293,0.658,295,1.079,300,2.349,304,0.62,305,2.349,306,1.955,307,2.529,308,0.603,309,3.041,310,3.041,311,0.304,312,0.969,313,1.35,314,1.144,315,3.961,316,2.645,317,2.645,318,2.645,319,2.645,320,2.645,323,1.243,326,0.351,327,0.351,328,3.603,329,3.444,330,3.041,331,0.932,332,3.041,333,3.961,334,2.645,335,2.645,337,0.861,338,4.057,340,2.349,341,3.041,343,2.529,344,1.866,345,3.041,346,3.961,347,3.041,348,3.041,349,3.041,350,3.041,351,3.041,352,1.915,353,3.041,355,3.961,356,3.041,363,0.988,369,1.799,370,0.748,378,0.748,379,0.861,383,4.666,388,1.758,389,1.35,390,1.955,391,3.041,392,3.041,403,1.054,425,0.023,426,0.023,433,1.599,435,1.468,437,1.372,446,1.718,457,0.817,461,1.144,463,2.112,467,2.75,470,2.252,484,1.834,503,3.041,504,3.041,552,2.349,554,2.645,585,2.349,586,3.041,587,0.304,588,1.144,590,1.372,615,0.62,660,1.927,679,1.35,680,1.758,796,1.911,917,1.657,955,1.35,959,1.468,979,1.35,983,1.144,1000,1.243,1002,1.243,1027,1.758,1050,1.468,1051,1.468,1080,0.817,1106,1.144,1114,1.599,1140,1.599,1153,2.274,1156,2.349,1183,1.35,1238,4.057,1239,3.041,1240,4.745,1241,4.404,1242,4.745,1243,5.942,1244,4.745,1245,4.745,1246,5.59,1247,4.745,1248,3.643,1249,3.643,1250,3.444,1251,3.041,1252,4.745,1253,3.643,1254,2.494,1255,2.112,1256,3.83,1257,2.645,1258,2.349,1259,3.041,1260,3.643,1261,4.745,1262,3.643,1263,5.276,1264,3.643,1265,5.59,1266,3.643,1267,3.643,1268,3.643,1269,3.643,1270,3.643,1271,3.643,1272,3.643,1273,4.745,1274,3.643,1275,2.349,1276,2.349,1277,2.349,1278,2.349,1279,2.645,1280,2.645,1281,2.645,1282,2.645,1283,2.645,1284,3.058,1285,2.349,1286,2.349,1287,2.349,1288,2.645,1289,3.041,1290,1.915,1291,3.643,1292,3.041,1293,4.404,1294,3.059,1295,3.401,1296,3.643,1297,3.643,1298,5.796,1299,2.645,1300,3.041,1301,3.444,1302,3.643,1303,3.643,1304,3.643,1305,3.643,1306,3.643,1307,2.349,1308,3.643,1309,3.643,1310,2.645,1311,3.643,1312,3.643,1313,3.643,1314,3.643]],["title/components/FuncionariosComponent.html",[0,0.226,407,0.921]],["body/components/FuncionariosComponent.html",[0,0.297,1,0.685,2,1.104,3,0.228,4,0.198,5,1.552,6,0.808,7,0.808,8,0.168,10,0.567,11,1.34,12,0.5,13,0.509,14,0.605,16,0.458,17,0.46,18,1.692,19,1.302,20,2.008,21,0.808,22,1.735,23,1.735,24,1.016,25,0.665,26,1.016,27,1.212,28,2.202,30,0.685,31,2.429,32,0.033,33,2.089,34,2.268,35,3.041,36,2.516,37,0.824,38,2.008,39,2.282,40,2.268,41,4.087,42,3.764,43,2.282,44,2.086,45,2.482,46,2.384,47,2.24,48,1.839,49,2.37,50,2.268,51,2.089,52,2.725,53,2.089,54,3.006,55,1.839,59,2.268,60,2.24,61,1.839,62,2.482,63,2.516,64,2.089,65,2.089,66,1.839,67,1.839,68,1.839,69,1.839,70,1.839,71,2.471,72,2.275,75,2.395,77,2.24,78,2.268,80,2.089,81,2.089,86,2.703,87,1.688,88,2.275,89,2.429,90,1.839,92,2.089,99,2.089,100,1.688,101,2.699,102,2.699,103,2.82,104,2.24,105,1.839,108,1.921,114,3.041,115,3.093,116,1.88,117,2.725,121,2.96,122,2.582,123,1.224,124,3.041,126,3.041,127,2.202,128,3.497,129,2.701,131,1.688,150,4.087,155,1.581,156,1.581,157,1.429,158,0.14,159,0.293,162,3.364,164,3.364,168,1.016,169,0.436,176,2.436,178,3.869,179,2.934,184,1.104,186,0.642,187,1.806,189,1.555,190,0.665,191,0.496,192,1.317,193,1.552,198,0.642,199,0.5,203,0.788,205,0.729,206,0.799,210,1.312,218,0.737,220,0.552,224,1.429,227,0.365,228,1.317,229,3.896,233,1.685,234,2.699,235,2.686,238,1.848,242,0.859,246,2.934,247,2.869,248,3.364,249,3.342,250,2.552,252,2.552,253,0.762,255,2.552,261,1.848,267,0.714,268,1.657,269,1.524,279,2.275,281,0.935,283,1.374,284,0.951,285,1.701,287,1.628,288,0.794,289,2.373,291,0.924,293,0.764,295,0.842,298,1.115,302,3.364,304,0.713,306,1.717,308,0.447,311,0.198,312,0.631,313,0.878,314,0.744,323,0.808,326,0.228,327,0.228,328,1.528,329,2.552,331,0.827,334,1.72,335,1.72,337,0.714,338,3.364,352,2.202,357,1.72,360,2.202,363,1.073,367,0.744,368,1.136,370,0.721,378,0.721,379,0.944,386,3.764,388,0.878,389,0.878,393,1.978,394,0.808,395,1.199,396,1.199,397,0.808,398,1.581,399,0.808,400,0.808,401,0.685,402,0.808,403,0.685,404,0.808,405,0.631,406,0.808,407,1.34,408,0.808,409,0.685,410,0.808,411,0.685,412,0.808,413,0.808,414,0.685,415,0.808,416,1.581,417,0.631,418,0.808,419,0.685,420,0.808,421,0.685,422,0.579,423,0.808,424,0.808,425,0.017,426,0.017,441,1.731,455,0.685,467,2.038,470,2.308,472,1.478,494,2.987,498,1.528,499,1.528,501,1.978,517,1.72,549,1.839,565,1.212,583,2.202,584,3.764,585,3.342,602,1.016,656,1.348,658,1.431,659,1.431,661,1.212,662,1.212,663,1.104,664,1.628,898,1.104,962,1.717,963,1.717,965,0.878,997,1.233,998,1.104,1008,1.628,1030,1.016,1031,1.016,1126,2.008,1151,1.136,1155,1.72,1156,2.266,1209,2.202,1215,2.202,1217,2.725,1218,2.725,1224,2.202,1250,3.364,1254,2.725,1255,2.429,1256,3.364,1257,3.041,1258,3.342,1259,4.328,1290,1.246,1294,2.686,1295,2.701,1299,3.364,1300,3.497,1307,2.266,1310,2.552,1315,1.978,1316,2.429,1317,3.731,1318,3.571,1319,2.701,1320,3.497,1321,2.008,1322,3.041,1323,3.264,1324,3.764,1325,3.041,1326,2.429,1327,4.19,1328,2.934,1329,2.934,1330,2.701,1331,2.701,1332,2.934,1333,2.987,1334,2.934,1335,3.041,1336,3.515,1337,2.701,1338,2.934,1339,2.701,1340,3.006,1341,3.041,1342,3.041,1343,4.19,1344,4.634,1345,2.266,1346,3.515,1347,2.266,1348,2.987,1349,3.869,1350,1.374,1351,2.686,1352,3.515,1353,2.038,1354,2.37,1355,3.515,1356,2.266,1357,2.37,1358,3.747,1359,3.191,1360,2.266,1361,1.685,1362,3.515,1363,2.37,1364,2.266,1365,2.37,1366,3.111,1367,2.038,1368,2.038,1369,2.266,1370,2.37,1371,2.37,1372,2.37,1373,2.552,1374,2.37,1375,2.37,1376,2.37,1377,2.37,1378,2.37,1379,2.429,1380,2.37,1381,2.038,1382,2.37,1383,3.515,1384,2.038,1385,2.038,1386,2.37,1387,2.37,1388,2.37,1389,2.37,1390,2.37,1391,1.374,1392,1.528,1393,2.37,1394,1.374,1395,3.006,1396,2.266,1397,1.528,1398,2.37,1399,1.978,1400,2.37,1401,2.37,1402,2.37,1403,2.37,1404,2.37,1405,2.37,1406,2.37,1407,2.37,1408,2.37,1409,2.37,1410,2.37,1411,2.37,1412,2.37,1413,2.266,1414,3.515,1415,1.528,1416,1.528,1417,1.528,1418,2.266,1419,1.72,1420,1.72,1421,1.72,1422,1.374,1423,1.72,1424,1.528,1425,1.72,1426,1.72,1427,2.266,1428,2.37,1429,2.37,1430,2.37,1431,2.37,1432,1.72,1433,1.72,1434,2.038,1435,2.038,1436,2.37,1437,2.37,1438,1.978,1439,2.37,1440,1.978,1441,2.37,1442,2.934,1443,1.374,1444,1.978,1445,1.978,1446,1.978,1447,1.978,1448,1.978,1449,2.37,1450,2.37,1451,1.528,1452,2.37,1453,1.978,1454,1.978,1455,1.978,1456,1.978,1457,2.37,1458,1.978]],["title/components/InscripcionComponent.html",[0,0.226,409,0.921]],["body/components/InscripcionComponent.html",[0,0.312,1,0.743,2,1.172,3,0.248,4,0.214,5,0.952,6,0.877,7,0.877,8,0.182,10,0.582,11,1.543,12,0.554,13,0.529,14,0.41,16,0.456,17,0.529,19,1.382,20,2.105,21,0.877,22,1.76,23,1.76,24,1.079,25,0.733,26,1.079,27,1.27,28,2.308,30,0.743,31,2.162,32,0.033,33,1.503,34,1.769,36,2.352,37,0.867,38,1.232,39,2.13,40,2.272,41,4.173,42,2.708,43,2.284,44,1.785,45,1.941,46,2.318,47,2.13,48,1.637,49,1.941,50,2.061,51,1.769,52,1.961,53,1.503,54,2.162,55,2.245,59,2.061,60,2.089,62,1.941,63,2.218,64,1.035,65,1.035,71,2.245,72,2.114,73,0.911,74,1.961,75,2.369,76,1.637,77,2.089,78,1.769,80,2.061,81,2.061,86,2.475,87,2.061,88,1.927,89,1.49,92,1.503,99,1.769,100,1.035,101,2.309,102,2.309,103,2.309,104,2.04,105,2.245,106,1.657,107,1.657,108,1.382,109,1.49,110,1.657,111,1.657,112,1.657,113,1.351,115,2.308,116,1.498,117,1.961,121,2.308,122,2.114,131,1.035,146,1.232,149,2.162,158,0.152,159,0.311,168,1.079,169,0.544,176,2.532,184,1.513,186,0.668,187,1.802,189,1.676,190,0.699,191,0.48,192,1.42,193,1.785,198,0.517,199,0.537,203,0.837,205,0.764,206,0.788,210,0.912,211,3.497,218,0.748,219,1.788,220,0.597,227,0.396,233,1.788,234,2.799,235,2.162,238,1.351,242,0.912,247,1.49,249,2.405,253,0.822,261,1.961,267,0.788,268,1.543,269,1.361,281,0.993,283,1.49,284,1.157,285,1.745,287,1.676,288,0.837,289,2.639,291,0.968,293,0.82,295,0.871,304,0.437,306,1.977,308,0.514,311,0.214,312,0.684,313,0.952,314,0.807,323,0.877,326,0.248,327,0.248,331,0.955,337,0.869,343,2.309,352,1.351,360,1.961,363,1.188,367,0.807,368,1.232,370,0.527,378,0.527,379,0.93,381,2.146,388,0.952,394,0.877,395,1.272,396,1.272,397,0.877,398,1.643,399,0.877,400,0.877,401,0.743,402,0.877,403,0.743,404,0.877,405,0.684,406,0.877,407,0.743,408,0.877,409,1.393,410,0.877,411,0.743,412,0.877,413,0.877,414,0.743,415,0.877,416,1.643,417,0.684,418,0.877,419,0.743,420,0.877,421,0.743,422,0.628,423,0.877,424,0.877,425,0.018,426,0.018,433,1.637,435,1.503,446,1.543,453,1.465,454,1.272,455,1.592,470,2.272,484,1.817,546,2.793,549,1.637,552,1.657,554,1.866,565,0.743,583,1.351,602,0.743,656,1.178,658,1.479,659,1.479,660,2.055,661,1.079,662,1.631,669,1.035,670,1.035,671,1.035,733,0.993,827,1.498,898,1.172,917,1.513,974,1.503,983,1.676,997,0.993,1000,1.272,1002,1.272,1003,1.035,1005,1.627,1008,1.172,1030,1.079,1031,1.393,1075,0.952,1080,1.197,1106,1.771,1124,3.188,1126,1.232,1127,2.708,1140,1.128,1151,2.105,1183,1.627,1209,1.351,1213,2.146,1215,1.351,1217,1.961,1218,1.961,1224,1.351,1250,3.714,1251,3.666,1254,2.805,1255,2.546,1256,2.708,1257,3.188,1275,3.298,1276,3.106,1277,3.106,1278,2.405,1279,1.866,1280,1.866,1281,3.874,1282,1.866,1283,1.866,1284,2.831,1285,2.831,1286,2.405,1287,2.831,1288,1.866,1289,3.114,1290,1.351,1292,4.022,1293,3.114,1294,2.966,1299,3.188,1301,2.708,1307,1.657,1310,1.866,1316,2.546,1317,3.499,1318,3.269,1319,1.657,1320,2.146,1321,2.756,1322,1.866,1323,2.546,1325,1.866,1326,1.49,1330,3.106,1331,3.106,1333,3.298,1339,2.405,1340,2.966,1341,2.708,1342,2.708,1345,2.405,1347,2.405,1348,3.106,1349,4.022,1350,1.49,1351,2.793,1353,2.546,1356,2.405,1358,3.813,1359,3.106,1360,2.405,1361,1.788,1364,2.405,1366,3.552,1367,2.162,1368,2.162,1369,2.405,1373,2.708,1379,2.546,1381,2.162,1384,2.162,1385,2.162,1391,1.49,1394,1.49,1395,3.269,1396,2.405,1397,1.657,1413,2.405,1415,1.657,1416,1.657,1417,1.657,1418,3.298,1419,1.866,1420,1.866,1421,1.866,1422,1.49,1423,1.866,1424,1.657,1425,1.866,1426,1.866,1427,3.106,1432,1.866,1433,1.866,1434,2.162,1435,2.162,1442,2.146,1443,1.49,1451,1.657,1459,2.146,1460,2.405,1461,3.188,1462,3.188,1463,4.391,1464,3.731,1465,4.391,1466,4.022,1467,3.731,1468,2.708,1469,4.022,1470,3.114,1471,3.731,1472,1.961,1473,2.57,1474,2.708,1475,2.708,1476,4.022,1477,3.714,1478,4.022,1479,2.708,1480,4.022,1481,3.731,1482,2.57,1483,3.731,1484,3.731,1485,2.57,1486,2.57,1487,2.57,1488,2.57,1489,3.731,1490,2.57,1491,2.57,1492,2.57,1493,4.022,1494,2.57,1495,3.114,1496,2.57,1497,2.708,1498,3.188,1499,2.57,1500,2.57,1501,2.57,1502,2.57,1503,2.57,1504,3.666,1505,1.657,1506,1.657,1507,4.022,1508,2.146,1509,2.57,1510,2.57,1511,2.146,1512,1.866,1513,1.866,1514,2.146,1515,3.114,1516,4.391,1517,3.731,1518,4.391,1519,3.731,1520,3.114,1521,3.114,1522,2.57,1523,3.114,1524,3.731,1525,2.146,1526,2.57,1527,3.731,1528,2.57,1529,3.731,1530,2.57,1531,2.57,1532,2.57,1533,2.57,1534,2.146,1535,3.114,1536,2.146,1537,2.146,1538,3.666,1539,4.271,1540,2.146,1541,2.146,1542,3.666,1543,4.271,1544,1.657,1545,2.146,1546,2.146,1547,2.57,1548,2.57,1549,2.57,1550,5.116,1551,2.57,1552,2.57,1553,2.57,1554,2.57,1555,2.57,1556,2.57,1557,2.57,1558,2.146,1559,2.57,1560,2.57,1561,2.57,1562,2.57,1563,2.146,1564,2.146,1565,2.146,1566,3.114,1567,2.146,1568,2.146,1569,2.146,1570,2.146,1571,2.146,1572,2.146,1573,2.146,1574,2.146,1575,2.57,1576,3.497,1577,4.022,1578,4.818,1579,3.497,1580,5.337,1581,3.731,1582,3.731,1583,3.114,1584,4.818,1585,2.57,1586,5.337,1587,3.114,1588,2.146,1589,4.818,1590,2.57,1591,2.57,1592,2.57,1593,2.57,1594,2.57,1595,2.57]],["title/components/LandingPageComponent.html",[0,0.226,411,0.921]],["body/components/LandingPageComponent.html",[0,0.364,1,0.996,2,1.436,3,0.332,4,0.287,5,1.276,6,1.174,7,1.174,8,0.244,10,0.548,11,1.322,12,0.441,13,0.502,14,0.704,16,0.47,17,0.625,21,1.174,22,1.838,23,1.838,24,1.322,25,0.566,26,1.322,27,1.484,30,0.996,31,2.65,32,0.033,33,2.203,34,2.405,35,3.319,36,2.496,37,0.811,38,2.621,39,2.273,40,2.534,43,2.33,44,2.167,45,1.842,46,2.026,47,2.026,48,1.511,49,2.293,50,1.842,51,1.842,52,1.81,53,1.842,54,2.65,55,2.497,59,1.842,60,2.167,61,1.511,62,2.203,63,2.293,64,1.842,65,2.068,66,1.511,67,1.511,68,2.619,69,2.006,70,2.66,74,1.81,75,2.417,76,2.399,77,2.33,78,2.405,80,2.203,81,2.068,86,2.006,87,2.068,88,2.252,90,2.006,91,0.842,92,2.068,93,2.191,100,2.293,104,2.026,105,2.497,108,1.901,115,2.991,116,1.75,117,2.403,118,2.874,120,2.874,121,2.403,122,2.399,124,3.726,126,2.5,127,1.81,129,2.947,130,2.874,131,1.842,132,4.284,138,2.5,143,3.726,145,1.276,146,2.191,147,2.874,148,3.319,158,0.27,159,0.381,168,1.322,187,1.646,190,0.566,199,0.488,205,0.636,206,0.791,214,2.65,218,0.427,220,0.527,227,0.53,239,1.118,253,0.954,257,3.169,258,3.169,259,3.726,262,3.319,268,1.322,269,1.216,283,2.65,285,1.692,287,1.717,288,0.811,293,0.758,307,2.97,308,0.527,311,0.287,312,0.916,322,2.947,326,0.332,327,0.332,331,0.53,390,2.167,394,1.174,395,1.559,396,1.559,397,1.174,398,1.865,399,1.174,400,1.174,401,0.996,402,1.174,403,0.996,404,1.174,405,0.916,406,1.174,407,0.996,408,1.174,409,0.996,410,1.174,411,1.581,412,2.092,413,1.174,414,1.581,415,1.174,416,1.865,417,0.916,418,1.174,419,1.581,420,1.865,421,0.996,422,0.842,423,1.174,424,1.174,425,0.023,426,0.023,428,1.081,433,2.006,435,1.842,437,1.819,457,1.025,463,3.169,477,1.865,494,3.524,539,2.874,540,1.694,541,3.816,542,2.874,543,2.874,544,2.874,545,3.816,546,1.996,561,1.651,575,2.874,579,1.904,580,3.308,581,1.996,603,1.75,604,2.026,882,1.842,1114,2.006,1115,3.514,1125,2.5,1129,3.319,1136,3.969,1153,1.651,1168,3.514,1193,3.319,1195,2.5,1196,2.874,1197,2.874,1198,1.81,1199,2.22,1200,1.81,1203,2.874,1204,4.883,1214,2.874,1215,1.81,1217,2.403,1218,2.403,1224,1.81,1227,3.816,1241,3.816,1392,3.524,1472,2.403,1596,4.883,1597,4.883,1598,2.874,1599,5.132,1600,4.284,1601,5.132,1602,4.572,1603,5.132,1604,5.132,1605,5.468,1606,5.468,1607,5.468,1608,3.443,1609,4.572,1610,5.691,1611,3.443,1612,3.443,1613,4.883,1614,3.443,1615,3.443,1616,3.443,1617,2.5,1618,3.443,1619,2.5,1620,3.443,1621,4.572,1622,5.468,1623,5.468,1624,3.443,1625,3.443,1626,3.443,1627,3.443,1628,4.572,1629,3.443,1630,3.443,1631,3.443,1632,3.443,1633,3.816,1634,3.816,1635,4.572,1636,4.572,1637,5.468,1638,4.572,1639,4.572,1640,4.572,1641,4.572,1642,4.572,1643,4.572,1644,4.572,1645,4.572,1646,4.572,1647,4.572,1648,4.572,1649,4.572,1650,4.572,1651,4.572,1652,4.572,1653,4.572,1654,3.443,1655,4.572,1656,4.572,1657,3.443,1658,5.468,1659,2.874,1660,3.443,1661,5.691,1662,3.443,1663,3.443,1664,3.443,1665,4.572,1666,2.874,1667,3.443,1668,5.691,1669,3.443,1670,3.443,1671,3.443,1672,4.572,1673,5.969,1674,3.443,1675,3.443,1676,3.443,1677,2.874]],["title/components/LoginModalComponent.html",[0,0.226,414,0.921]],["body/components/LoginModalComponent.html",[0,0.329,1,0.819,2,1.256,3,0.273,4,0.236,5,1.049,6,0.966,7,0.966,8,0.201,10,0.575,11,1.156,12,0.485,13,0.606,16,0.47,17,0.439,21,0.966,22,1.787,23,1.787,24,1.156,25,0.747,26,1.156,27,1.34,28,2.436,30,0.819,32,0.033,33,1.141,34,2.221,36,2.283,37,0.851,39,2.042,40,1.141,43,2.21,44,1.481,45,2.221,46,2.256,47,1.866,48,1.243,49,2.14,50,1.611,51,1.611,53,1.141,55,2.21,56,1.642,57,1.642,59,1.867,60,1.866,61,1.755,62,1.867,63,1.611,64,1.611,65,1.867,66,1.243,67,1.243,68,2.034,69,1.755,70,2.034,71,2.331,72,2.21,73,0.818,74,1.489,75,2.354,76,1.755,77,2.18,78,2.221,80,1.867,81,1.867,84,1.642,86,1.243,87,2.221,88,1.755,90,1.755,91,0.692,92,1.867,93,1.917,98,2.102,99,1.611,100,2.029,101,1.917,102,1.917,103,2.222,104,1.866,105,2.21,106,1.825,107,1.825,108,1.717,109,1.642,110,1.825,111,1.825,112,1.825,113,2.102,116,0.966,123,0.943,127,1.489,131,1.867,144,2.318,146,1.357,149,3.496,155,0.966,156,0.966,157,0.966,158,0.236,159,0.334,168,1.156,169,0.574,184,1.256,185,1.825,186,0.698,187,1.838,189,1.582,190,0.683,191,0.524,192,1.34,193,1.481,198,0.698,199,0.538,203,0.635,205,0.683,206,0.818,210,0.978,218,0.495,219,2.774,220,0.567,227,0.436,228,0.753,233,1.357,234,2.414,253,0.714,267,0.714,268,1.761,269,1.62,281,1.34,283,1.642,284,1.224,285,1.824,287,1.873,288,0.836,291,0.952,293,0.802,294,1.642,304,0.681,306,1.866,307,2.963,308,0.531,311,0.236,312,0.753,313,1.049,314,0.889,323,0.966,326,0.273,327,0.273,331,0.849,337,0.616,363,0.749,368,2.414,370,0.821,378,0.581,379,0.891,390,1.481,394,0.966,395,1.364,396,1.364,397,0.966,398,1.718,399,0.966,400,0.966,401,0.819,402,0.966,403,0.819,404,0.966,405,0.753,406,0.966,407,0.819,408,0.966,409,0.819,410,0.966,411,0.819,412,0.966,413,0.966,414,1.456,415,2.057,416,1.718,417,0.753,418,0.966,419,0.819,420,0.966,421,0.819,422,0.692,423,0.966,424,0.966,425,0.02,426,0.02,433,1.755,435,1.611,451,1.456,470,1.611,472,0.692,483,3.656,490,1.243,515,0.966,546,1.642,549,1.755,553,2.903,556,2.578,561,1.357,568,1.825,573,2.056,579,1.456,580,2.578,581,1.642,583,1.489,613,1.256,615,0.681,658,0.819,659,0.819,660,1.996,661,0.819,662,0.819,663,1.668,664,0.889,682,0.819,733,1.34,917,1.456,961,1.141,962,1.049,963,1.049,964,1.611,965,1.049,983,0.889,998,0.889,1030,1.156,1055,1.867,1080,1.319,1086,2.056,1105,2.978,1106,1.78,1114,1.755,1115,3.624,1126,1.357,1140,1.243,1167,2.056,1168,3.354,1170,2.056,1171,2.903,1172,2.056,1173,2.056,1174,2.056,1175,3.656,1176,2.056,1177,2.056,1178,2.056,1179,2.056,1180,2.056,1182,2.056,1183,1.049,1194,2.318,1198,1.489,1199,1.825,1200,1.489,1201,1.825,1205,3.869,1209,2.102,1254,2.647,1255,2.687,1258,3.424,1275,1.825,1276,1.825,1277,1.825,1278,1.825,1284,1.825,1285,1.825,1286,1.825,1287,1.825,1288,2.056,1294,3.354,1295,3.553,1301,2.056,1317,3.196,1318,3.079,1319,1.825,1321,1.357,1324,2.903,1326,1.642,1337,4.188,1340,3.284,1366,1.642,1367,2.919,1368,2.919,1373,2.056,1384,2.318,1385,2.318,1392,2.578,1434,2.687,1443,1.642,1451,1.825,1468,2.903,1498,2.903,1520,2.364,1576,2.056,1587,2.364,1617,4.627,1633,4.434,1659,2.364,1677,2.364,1678,5.321,1679,1.642,1680,3.365,1681,2.903,1682,4.635,1683,5.312,1684,5.036,1685,5.312,1686,5.312,1687,5.036,1688,5.036,1689,3.246,1690,3.999,1691,3.338,1692,5.036,1693,2.578,1694,3.553,1695,3.999,1696,2.988,1697,2.364,1698,2.832,1699,3.999,1700,5.884,1701,6.439,1702,2.832,1703,3.999,1704,2.832,1705,3.999,1706,2.832,1707,3.999,1708,2.364,1709,2.832,1710,3.999,1711,5.036,1712,2.832,1713,6.253,1714,3.999,1715,2.832,1716,2.364,1717,2.832,1718,3.999,1719,2.364,1720,2.832,1721,2.832,1722,3.999,1723,2.832,1724,3.999,1725,2.832,1726,2.832,1727,2.832,1728,2.578,1729,2.364,1730,4.635,1731,1.489,1732,1.825,1733,2.832,1734,3.999,1735,2.832,1736,3.999,1737,4.635,1738,4.635,1739,2.832,1740,2.832,1741,2.832,1742,2.832,1743,2.832,1744,3.999,1745,2.832,1746,4.635,1747,2.832,1748,2.832,1749,2.832,1750,2.832,1751,2.832,1752,2.832,1753,2.832,1754,2.832,1755,2.832,1756,2.832,1757,2.832,1758,2.364,1759,2.832,1760,2.832,1761,1.825,1762,2.364,1763,2.832,1764,3.999,1765,3.999,1766,3.999,1767,3.999,1768,3.999,1769,3.999,1770,2.056,1771,2.056,1772,2.364,1773,2.364,1774,1.825,1775,2.578,1776,1.642,1777,1.825,1778,2.056,1779,2.056,1780,2.364,1781,4.635,1782,2.832,1783,2.056]],["title/interfaces/NavItem.html",[587,0.266,1122,2.053]],["body/interfaces/NavItem.html",[0,0.368,3,0.404,4,0.35,8,0.298,10,0.62,11,1.63,12,0.543,13,0.461,14,0.693,15,3.768,16,0.463,17,0.647,22,1.214,23,1.214,24,1.214,25,0.643,26,1.214,27,1.501,32,0.033,158,0.248,159,0.433,169,0.698,184,1.318,186,0.72,191,0.505,193,1.555,198,0.582,199,0.514,205,0.643,218,0.643,220,0.613,239,1.026,247,2.433,253,0.868,254,2.706,257,2.433,258,2.433,267,0.647,279,2.278,285,1.63,287,1.318,288,0.582,291,1.014,293,0.781,294,2.433,300,2.706,306,1.923,308,0.594,311,0.35,312,1.117,314,1.318,322,2.706,326,0.404,327,0.404,331,0.8,343,2.488,363,1.102,388,1.555,389,1.923,390,1.555,405,1.117,417,1.381,425,0.026,426,0.026,428,1.63,429,1.026,433,1.842,435,1.691,437,1.63,446,1.214,457,1.264,463,2.433,490,1.842,514,3.768,587,0.35,588,1.318,590,1.501,603,1.922,615,0.714,633,1.77,656,1.026,707,1.555,708,1.555,709,1.555,733,1.566,907,1.501,997,1.381,1080,1.401,1084,3.047,1085,3.504,1086,3.047,1087,4.333,1088,4.333,1089,3.504,1090,3.504,1091,2.706,1092,3.504,1093,3.504,1094,3.504,1095,3.504,1096,3.504,1097,3.504,1098,3.504,1099,3.504,1100,3.504,1101,3.504,1103,3.504,1105,2.962,1106,1.77,1111,3.504,1114,1.842,1115,3.009,1118,4.704,1119,2.706,1121,3.504,1122,3.795,1123,5.215,1124,3.047,1125,4.535,1126,2.994,1127,3.047,1128,4.535,1129,3.047,1131,4.704,1132,5.145,1133,3.047,1136,3.047,1139,3.504,1140,1.842,1141,3.504,1142,2.706,1143,3.346,1144,3.346,1145,4.915,1146,3.768,1147,4.333,1148,4.333,1149,4.333,1150,4.333,1151,2.488,1152,3.768,1153,2.488,1154,3.047,1155,3.047,1156,2.706,1157,3.504,1158,3.504,1159,3.504,1160,3.504,1161,3.504,1162,3.504,1163,2.706,1164,3.504,1165,4.333,1166,3.504,1167,3.047,1168,2.433,1169,3.504,1170,3.047,1171,3.768,1172,3.047,1173,3.047,1174,3.047,1175,4.274,1176,3.047,1177,3.047,1178,3.047,1179,3.047,1180,3.047,1181,3.504,1182,3.047,1183,1.555,1184,3.047,1185,3.047,1186,3.047,1187,3.504,1188,4.333]],["title/interfaces/Paciente.html",[484,0.921,587,0.266]],["body/interfaces/Paciente.html",[3,0.2,4,0.173,8,0.226,10,0.51,12,0.543,13,0.228,14,0.609,16,0.423,17,0.564,18,0.553,25,0.698,32,0.033,37,0.892,73,0.91,91,1.143,123,1.186,145,1.962,155,1.086,156,1.086,157,0.709,158,0.123,159,0.266,169,0.725,186,0.288,190,0.394,191,0.453,198,0.536,199,0.39,203,0.466,205,0.537,206,0.917,210,0.946,218,0.738,220,0.495,224,2.111,227,0.668,228,1.724,231,1.244,239,0.508,242,0.946,253,0.596,267,0.32,281,1.244,284,0.959,288,0.712,291,0.999,293,0.601,295,1.099,298,0.847,304,0.542,308,0.373,311,0.173,325,2.144,326,0.523,327,0.2,331,0.99,337,0.791,344,0.653,363,1.095,367,1.362,369,1.32,370,0.653,372,2.379,378,0.653,379,0.596,425,0.016,426,0.016,428,0.653,429,0.508,431,0.653,437,0.601,439,0.77,441,0.653,446,1.119,448,0.837,451,1,453,0.847,454,1.806,455,1.602,457,0.868,461,1.215,465,1.119,471,1.559,472,1.43,475,1.282,477,1.086,484,1.722,492,0.601,493,0.837,515,0.709,519,0.837,522,0.837,523,0.837,529,1.282,536,1.559,540,0.77,550,0.77,565,1.484,579,1.936,587,0.442,588,0.653,589,0.77,590,1.57,591,2.232,592,1.397,593,2.052,594,2.052,595,0.92,596,1.397,597,1.282,598,2.053,599,0.77,600,1.397,601,0.912,602,0.601,603,0.709,604,0.77,605,0.709,606,0.912,607,0.912,608,0.912,609,0.912,610,0.912,611,0.912,612,0.912,613,0.653,614,0.912,615,1.013,616,0.912,617,0.912,618,0.912,619,0.912,620,0.912,621,0.912,622,0.912,623,0.912,624,0.912,625,0.912,626,0.912,627,0.912,628,0.912,629,0.912,630,0.912,631,0.912,632,0.912,633,1.751,634,0.912,635,0.912,636,0.912,637,0.912,638,0.912,639,1.559,640,0.912,641,0.912,642,1.397,643,2.324,644,0.912,645,0.912,646,0.912,647,0.912,648,2.509,649,2.324,650,2.133,651,2.383,652,2.509,653,2.592,654,2.592,655,2.253,656,1.524,657,2.752,658,1.855,659,1.855,660,2.041,661,1.853,662,1.863,663,1.936,664,1.896,665,2.253,666,2.253,667,0.912,668,2.592,669,2.447,670,2.447,671,2.447,672,2.383,673,2.232,674,2.232,675,2.447,676,2.133,677,1.397,678,0.912,679,1.433,680,1.179,681,1.698,682,1.426,683,1.397,684,1.698,685,0.912,686,1.698,687,0.912,688,0.912,689,1.903,690,0.912,691,2.383,692,2.473,693,0.912,694,0.912,695,0.912,696,1.903,697,0.912,698,1.698,699,0.912,700,1.397,701,0.912,702,0.912,703,1.397,704,1.397,705,0.912,706,1.698,707,1.433,708,1.433,709,1.433,710,0.912,711,0.912,712,0.837,713,0.912,714,2.76,715,2.827,716,0.912,717,0.912,718,0.912,719,0.912,720,0.912,721,0.912,722,0.912,723,0.912,724,2.68,725,0.912,726,0.912,727,2.432,728,0.912,729,0.912,730,0.912,731,0.912,732,0.912,733,1.366,734,0.912,735,0.912,736,0.912,737,0.912,738,0.912,739,1.962,740,0.912,741,0.912,742,0.912,743,0.912,744,0.912,745,2.052,746,0.912,747,0.912,748,0.912,749,0.912,750,0.912,751,1.397,752,0.912,753,0.912,754,0.912,755,0.912,756,0.912,757,0.912,758,0.912,759,0.912,760,0.912,761,0.912,762,0.912,763,0.912,764,0.912,765,0.912,766,0.912,767,0.912,768,0.912,769,0.912,770,0.912,771,0.912,772,0.912,773,0.912,774,0.912,775,0.912,776,0.912,777,0.912,778,0.912,779,0.912,780,0.912,781,0.912,782,0.912,783,1.397,784,0.837,785,2.052,786,2.052,787,0.912,788,0.912,789,0.912,790,0.912,791,0.912,792,0.912,793,0.912,794,0.912,795,0.912,796,1.883,797,2.052,798,0.912,799,0.912,800,0.912,801,0.912,802,0.912,803,0.912,804,0.912,805,0.912,806,0.837,807,0.912,808,0.912,809,0.912,810,0.912,811,0.912,812,0.912,813,0.912,814,0.912,815,0.912,816,0.912,817,0.912,818,0.912,819,0.912,820,0.912,821,0.912,822,0.912,823,0.912,824,0.912,825,0.912,826,0.912,827,2.126,828,0.912,829,0.912,830,0.912,831,0.912,832,0.912,833,0.912,834,0.912,835,0.912,836,0.912,837,1.282,838,0.912,839,0.912,840,0.912,841,0.912,842,0.912,843,0.912,844,0.912,845,0.912,846,0.912,847,0.912,848,0.912,849,0.912,850,0.912,851,0.912,852,0.912,853,0.912,854,0.912,855,0.912,856,0.912,857,0.912,858,0.912,859,0.912,860,0.912,861,0.912,862,0.912,863,0.912,864,0.912,865,0.912,866,0.912,867,0.912,868,0.912,869,0.912,870,0.912,871,0.912,872,0.912,873,0.912,874,0.912,875,2.164,876,0.912,877,0.912,878,0.912,879,0.912,880,2.164,881,0.912,882,2.493,883,0.912,884,2.068,885,2.27,886,1.397,887,2.052,888,1.698,889,1.397,890,1.698,891,1.903,892,0.912,893,1.698,894,1.698,895,0.912,896,2.253,897,1.698,898,1,899,0.912,900,0.912,901,2.052,902,0.912,903,0.912,904,0.912,905,2.324,906,1.903,907,1.531,908,0.912,909,0.912,910,0.837,911,0.912,912,2.54,913,2.509,914,0.912,915,2.726,916,0.912,917,1.908,918,2.253,919,2.052,920,2.164,921,2.052,922,2.052,923,2.665,924,0.912,925,2.253,926,2.164,927,2.164,928,2.164,929,1.903,930,0.912,931,2.253,932,1.903,933,1.698,934,1.698,935,1.397,936,0.912,937,0.912,938,0.912,939,0.912,940,0.912,941,0.912,942,0.912,943,0.912,944,0.912,945,0.912,946,0.912,947,0.912,948,2.052,949,2.509,950,0.912,951,2.052,952,0.912,953,0.912,954,0.912,955,0.77,956,0.912,957,0.912,958,0.912,959,1.282,960,0.912,961,1.559,962,1.179,963,1.179,964,0.837,965,1.607,966,2.164,967,1.903,968,1.282,969,0.837,970,0.912,971,0.912,972,0.837,973,0.837,974,1.282,975,0.912,976,1.397,977,0.912,978,0.912,979,0.77,980,0.912,981,0.912,982,0.912,983,1.215,984,0.912,985,0.912,986,0.912,987,0.912,988,0.912,989,0.912,990,0.912,991,0.912,992,0.912,993,0.912,994,0.912,995,0.912,996,0.912,997,0.847,998,1,999,1.282,1000,1.086,1001,1.397,1002,1.086,1003,1.282,1004,0.912,1005,1.179,1006,0.912,1007,0.912,1008,1,1009,0.912,1010,2.052,1011,2.052,1012,2.052,1013,1.698,1014,0.912,1015,1.397,1016,1.282,1017,1.397,1018,1.397,1019,1.397,1020,0.912,1021,1.397,1022,0.912,1023,0.912,1024,1.698,1025,1.903,1026,2.052,1027,1.179,1028,0.912,1029,1.698,1030,0.601,1031,0.601,1032,0.912,1033,0.912,1034,0.912,1035,0.912,1036,0.912,1037,0.912,1038,0.912,1039,0.912,1040,1.397,1041,0.912,1042,0.912,1043,0.912,1044,0.912,1045,0.912,1046,0.912,1047,0.912,1048,1.397,1049,1.903,1050,0.837,1051,0.837,1052,0.912,1053,0.912,1054,0.912,1055,1.282,1056,0.912,1057,0.912,1058,0.912,1059,0.912,1060,0.912,1061,1.698,1062,0.912,1063,0.912,1064,0.912,1065,0.912,1066,0.912,1067,0.837,1068,1.397,1069,0.912,1070,0.912,1071,1.397,1072,0.912,1073,0.837,1074,0.912,1075,0.77,1076,1.397,1077,0.912,1078,1.282,1079,0.837,1080,0.466,1081,0.912,1082,0.912,1083,0.77]],["title/components/ProfileModalComponent.html",[0,0.226,417,0.847]],["body/components/ProfileModalComponent.html",[0,0.31,1,0.735,2,1.163,3,0.245,4,0.212,5,1.617,6,0.867,7,0.867,8,0.18,10,0.542,11,1.537,12,0.462,13,0.407,14,0.584,16,0.444,17,0.407,19,1.371,20,2.092,21,0.867,22,1.756,23,1.756,24,1.07,25,0.631,26,1.07,27,1.262,30,0.735,32,0.033,33,2.142,34,2.404,36,2.464,37,0.889,39,2.266,40,1.758,43,2.305,44,1.97,45,2.537,46,2.355,47,2.124,48,1.915,49,2.31,50,1.758,51,1.758,53,1.758,56,2.53,57,2.53,59,2.142,60,1.97,61,2.333,62,2.464,63,2.506,64,2.31,65,2.404,66,1.915,67,1.915,68,2.333,69,2.333,70,2.516,71,2.516,72,2.333,73,0.819,74,2.294,75,2.398,76,1.915,77,2.305,78,2.404,80,2.142,81,2.142,84,2.53,86,2.619,87,2.31,88,2.333,89,2.53,90,2.333,91,1.067,92,2.31,93,2.549,98,2.795,99,2.052,100,2.142,101,2.549,102,2.549,103,2.748,104,2.124,108,1.617,113,2.294,115,3.014,116,1.918,117,2.795,121,3.014,122,2.333,123,0.476,127,2.294,131,2.142,144,2.53,158,0.283,159,0.309,168,1.07,169,0.594,176,2.52,184,1.506,186,0.665,187,1.726,189,1.371,190,0.631,191,0.458,192,1.161,193,1.776,197,2.53,198,0.513,199,0.51,203,1.075,205,0.71,206,0.672,210,1.402,214,2.146,218,0.659,219,2.092,220,0.593,227,0.392,233,1.774,234,2.63,235,2.53,238,1.337,242,0.905,253,0.845,261,1.337,267,0.785,268,1.07,269,0.985,279,1.624,284,1.045,285,1.386,287,1.163,288,0.737,289,2.696,291,0.866,293,0.807,295,0.63,302,2.687,304,0.743,305,2.386,307,3.038,308,0.529,311,0.212,312,0.677,313,0.942,314,0.799,323,0.867,326,0.245,327,0.245,331,0.845,337,0.785,343,1.219,352,2.294,360,2.294,363,1.153,370,0.522,378,0.522,379,0.919,389,1.371,394,0.867,395,1.262,396,1.262,397,0.867,398,1.635,399,0.867,400,0.867,401,0.735,402,0.867,403,0.735,404,0.867,405,0.677,406,0.867,407,0.735,408,0.867,409,0.735,410,0.867,411,0.735,412,0.867,413,0.867,414,0.735,415,0.867,416,1.635,417,1.275,418,1.489,419,0.735,420,0.867,421,0.735,422,0.622,423,0.867,424,0.867,425,0.018,426,0.018,441,1.67,453,1.415,454,1.262,455,1.473,457,1.231,467,2.146,470,1.931,472,1.402,483,3.859,490,1.116,498,1.639,499,1.639,517,1.846,538,3.168,549,1.915,556,3.427,561,2.092,565,1.262,568,2.813,581,2.53,583,2.294,585,2.813,602,0.735,613,1.163,615,0.433,656,1.172,658,1.473,659,1.473,661,1.262,662,1.262,663,1.371,664,1.163,898,1.163,997,0.985,998,0.799,1008,1.67,1030,1.07,1031,1.07,1080,1.192,1091,2.813,1105,2.885,1106,1.766,1114,1.624,1119,1.639,1126,2.092,1140,1.116,1142,3.883,1151,1.219,1183,0.942,1185,1.846,1186,1.846,1192,3.643,1193,4.082,1194,2.146,1198,2.294,1200,2.294,1201,2.813,1209,2.294,1215,2.294,1217,2.294,1218,2.294,1224,2.294,1254,1.946,1307,1.639,1316,2.53,1317,3.685,1318,3.546,1319,2.813,1321,2.092,1322,3.168,1323,3.324,1324,3.859,1325,3.168,1326,2.779,1328,3.09,1329,3.09,1330,2.813,1331,2.813,1332,3.09,1333,3.09,1334,3.09,1335,3.168,1337,3.696,1338,3.09,1339,2.813,1340,3.082,1341,3.168,1342,2.687,1345,2.386,1347,2.386,1348,3.09,1350,1.474,1351,2.779,1353,2.53,1356,2.386,1358,3.804,1359,3.427,1360,2.386,1361,1.774,1364,2.386,1366,3.181,1367,2.146,1368,2.146,1369,2.386,1379,3.181,1381,2.146,1384,2.146,1385,2.146,1391,1.474,1394,1.474,1395,2.953,1396,2.386,1397,1.639,1413,2.386,1415,1.639,1416,1.639,1417,1.639,1418,2.386,1419,1.846,1420,1.846,1421,1.846,1422,1.474,1423,1.846,1424,1.639,1425,1.846,1426,1.846,1427,2.386,1432,1.846,1433,1.846,1434,2.146,1435,2.146,1440,2.123,1443,1.474,1453,2.123,1454,2.123,1455,2.123,1456,2.123,1458,2.123,1460,2.386,1461,3.168,1462,3.168,1472,1.946,1474,2.687,1475,2.687,1477,2.687,1497,1.846,1505,1.639,1506,1.639,1512,2.687,1513,1.846,1579,3.168,1679,1.474,1689,3.09,1693,2.386,1694,3.537,1696,2.813,1728,2.386,1729,2.123,1731,1.337,1732,1.639,1758,2.123,1761,1.639,1770,3.168,1771,3.168,1772,3.643,1774,2.813,1775,3.427,1776,2.53,1777,2.813,1778,3.168,1779,3.168,1784,5.029,1785,3.702,1786,4.365,1787,3.643,1788,4.694,1789,4.002,1790,4.365,1791,4.002,1792,3.09,1793,3.702,1794,3.702,1795,3.702,1796,2.543,1797,3.702,1798,3.702,1799,3.702,1800,2.543,1801,2.543,1802,2.543,1803,2.543,1804,2.543,1805,2.543,1806,2.543,1807,3.702,1808,3.643,1809,3.09,1810,2.543,1811,2.543,1812,2.543,1813,3.702,1814,2.543,1815,2.543,1816,2.543,1817,2.123,1818,3.09,1819,3.09,1820,3.09,1821,3.09,1822,3.09,1823,2.123,1824,2.123,1825,3.09,1826,2.123,1827,2.543,1828,2.543,1829,2.543,1830,2.543,1831,2.543,1832,2.543,1833,3.702,1834,3.702,1835,2.543,1836,2.543,1837,3.702,1838,2.543,1839,2.543,1840,2.123,1841,3.09,1842,3.09,1843,3.09,1844,3.09,1845,2.687,1846,2.543,1847,2.543,1848,2.543,1849,2.543,1850,2.543,1851,2.543,1852,3.09,1853,2.543,1854,2.543,1855,2.543,1856,2.543,1857,2.543,1858,2.543,1859,2.543,1860,2.543]],["title/components/RegisterModalComponent.html",[0,0.226,419,0.921]],["body/components/RegisterModalComponent.html",[0,0.323,1,0.794,2,1.228,3,0.264,4,0.229,5,1.017,6,0.936,7,0.936,8,0.195,10,0.563,11,1.131,12,0.553,13,0.545,16,0.442,18,1.212,21,0.936,22,1.779,23,1.779,24,1.131,25,0.724,26,1.131,27,1.317,30,0.794,32,0.033,33,2,34,2.262,36,2,37,0.871,38,1.315,39,2.021,43,2.08,44,1.449,45,2.114,46,2.164,47,1.688,48,1.204,49,1.575,50,1.575,51,1.575,53,1.106,55,1.999,56,1.591,57,1.591,59,1.575,60,1.84,61,1.999,62,2,63,2,64,1.575,65,2,66,1.204,67,1.204,68,1.716,69,1.716,70,1.999,71,1.999,72,1.716,73,0.94,74,2.055,75,2.279,76,1.716,77,2.126,78,2.198,80,1.575,81,1.575,84,1.591,87,2,88,1.204,89,1.591,90,1.716,91,0.671,92,1.575,93,2.184,95,2.291,98,2.055,99,2,100,1.575,101,1.874,102,1.874,103,1.874,104,1.688,105,1.999,106,1.769,107,1.769,108,1.449,109,1.591,110,1.769,111,1.769,112,1.769,113,2.055,115,2.759,116,1.554,117,2.055,121,2.055,122,1.204,123,0.853,127,1.442,131,1.575,144,2.267,146,1.315,149,2.267,158,0.231,159,0.326,168,1.131,169,0.615,184,1.228,186,0.688,187,1.8,189,1.648,190,0.696,191,0.487,192,1.396,193,1.688,198,0.631,199,0.542,203,0.877,205,0.762,206,0.602,210,1.403,218,0.724,219,2.516,220,0.583,227,0.423,228,0.73,233,1.874,234,2.615,253,0.913,267,0.865,268,1.436,269,1.321,279,1.716,281,0.73,284,1.178,285,1.713,287,1.559,288,0.821,289,2.751,291,0.923,293,0.875,295,0.956,298,0.73,305,2.521,306,1.84,307,2.984,308,0.541,311,0.229,312,0.73,313,1.017,314,0.862,323,0.936,326,0.264,327,0.264,331,0.953,337,0.702,343,1.874,359,2.291,360,2.055,363,1.152,370,0.563,378,0.563,379,0.933,390,1.017,394,0.936,395,1.334,396,1.334,397,0.936,398,1.693,399,0.936,400,0.936,401,0.794,402,0.936,403,0.794,404,0.936,405,0.73,406,0.936,407,0.794,408,0.936,409,0.794,410,0.936,411,0.794,412,0.936,413,0.936,414,0.794,415,0.936,416,1.693,417,0.73,418,0.936,419,1.436,420,1.958,421,0.794,422,0.671,423,0.936,424,0.936,425,0.019,426,0.019,433,1.716,435,1.575,441,1.648,451,1.431,457,1.113,467,2.267,470,2,472,1.334,490,1.204,498,1.769,499,1.769,538,1.992,549,1.204,553,2.839,556,2.521,561,1.315,565,0.794,568,1.769,581,1.591,583,1.442,602,0.794,613,1.228,615,0.467,656,1.114,658,1.578,659,1.578,660,2.035,661,1.131,662,1.66,663,1.714,664,1.228,733,1.452,827,1.554,898,1.431,917,1.431,955,1.017,979,1.017,983,1.431,997,0.73,998,0.862,999,1.575,1000,0.936,1002,0.936,1005,1.017,1030,1.131,1031,1.436,1067,1.106,1073,1.575,1075,1.017,1080,1.113,1105,2.951,1106,1.763,1114,1.716,1115,1.591,1126,1.315,1140,1.204,1183,1.017,1194,2.267,1198,1.442,1200,1.442,1201,1.769,1209,1.442,1215,1.442,1217,1.442,1218,2.395,1224,1.442,1254,2.61,1255,2.641,1258,3.383,1275,2.521,1276,2.521,1277,2.521,1278,2.521,1279,1.992,1280,1.992,1281,2.839,1282,1.992,1283,1.992,1284,2.521,1285,2.521,1286,1.769,1287,2.521,1294,2.641,1295,2.521,1316,2.641,1317,3.386,1318,3.163,1321,1.315,1323,2.641,1326,1.591,1330,3.201,1331,3.201,1333,3.201,1335,2.839,1337,3.619,1340,3.043,1345,2.521,1347,2.521,1350,1.591,1351,2.878,1353,2.267,1356,1.769,1358,3.7,1359,2.937,1360,1.769,1361,1.315,1364,2.521,1366,3.434,1367,2.267,1368,2.267,1369,2.521,1379,2.641,1381,2.267,1384,2.267,1385,2.267,1391,1.591,1392,1.769,1394,1.591,1395,3.327,1396,2.521,1397,1.769,1399,2.291,1413,2.521,1415,1.769,1416,1.769,1417,1.769,1418,2.937,1422,3.163,1424,3.517,1427,2.521,1434,2.641,1435,1.591,1438,2.291,1443,1.591,1451,1.769,1460,2.521,1461,3.307,1462,3.307,1466,4.145,1468,2.839,1469,4.145,1470,3.264,1474,3.961,1475,3.604,1476,4.145,1477,4.432,1478,4.555,1479,2.839,1480,4.145,1493,4.145,1495,3.264,1497,3.307,1498,2.839,1504,4.145,1505,1.769,1506,1.769,1507,3.264,1508,2.291,1511,2.291,1512,1.992,1513,1.992,1514,2.291,1515,3.264,1521,2.291,1523,2.291,1534,2.291,1535,3.264,1536,2.291,1537,2.291,1538,3.803,1539,4.381,1540,2.291,1541,2.291,1542,3.803,1543,4.381,1544,1.769,1545,2.291,1546,2.291,1558,2.291,1563,2.291,1564,2.291,1565,2.291,1566,3.264,1567,2.291,1568,2.291,1569,2.291,1570,2.291,1571,2.291,1572,2.291,1573,2.291,1574,2.291,1576,3.604,1577,4.145,1579,2.839,1588,2.291,1613,4.687,1619,4.541,1634,4.145,1666,2.291,1679,1.591,1680,3.307,1681,2.839,1689,3.201,1691,4.145,1693,2.521,1694,3.517,1696,2.937,1708,2.291,1719,2.291,1728,2.521,1731,1.442,1732,1.769,1761,1.769,1770,1.992,1771,1.992,1773,2.291,1774,1.769,1775,2.521,1776,1.591,1777,1.769,1778,1.992,1779,2.839,1780,2.291,1783,2.839,1787,3.264,1788,4.145,1789,3.264,1791,4.145,1808,2.291,1809,3.264,1817,2.291,1818,2.291,1819,2.291,1820,2.291,1821,2.291,1822,4.381,1823,2.291,1824,2.291,1825,3.264,1840,3.264,1841,3.264,1842,3.264,1843,3.264,1844,3.264,1845,2.839,1852,2.291,1861,5.222,1862,4.556,1863,3.264,1864,2.291,1865,2.744,1866,2.744,1867,2.744,1868,2.744,1869,2.744,1870,2.744,1871,3.91,1872,3.91,1873,2.744,1874,2.744,1875,2.291,1876,2.744,1877,2.744,1878,2.744,1879,2.744,1880,2.744,1881,2.744,1882,2.744,1883,2.744,1884,2.744,1885,2.744,1886,2.744,1887,2.744,1888,2.744,1889,3.91,1890,2.744,1891,3.91,1892,2.744,1893,2.744,1894,2.744,1895,2.744,1896,2.744,1897,2.744,1898,2.744,1899,2.744,1900,2.744,1901,2.744,1902,3.91,1903,3.91,1904,2.744,1905,2.744,1906,2.744]],["title/interfaces/Rol.html",[587,0.266,907,0.921]],["body/interfaces/Rol.html",[3,0.202,4,0.175,8,0.228,10,0.512,12,0.544,13,0.23,14,0.61,16,0.426,17,0.566,18,0.558,25,0.7,32,0.033,37,0.893,73,0.911,91,1.148,123,1.187,145,1.968,155,1.094,156,1.094,157,0.716,158,0.124,159,0.267,169,0.726,186,0.291,190,0.397,191,0.267,198,0.54,199,0.392,203,0.471,205,0.54,206,0.919,210,0.952,218,0.739,220,0.496,224,2.113,227,0.671,228,1.725,231,1.249,239,0.513,242,0.952,253,0.6,267,0.323,281,1.249,284,0.964,288,0.714,291,0.981,293,0.604,295,1.1,298,0.853,304,0.546,308,0.375,311,0.175,325,2.149,326,0.525,327,0.202,331,0.99,337,0.793,344,0.659,363,1.098,367,1.369,369,1.327,370,0.658,372,2.383,378,0.658,379,0.6,425,0.016,426,0.016,428,0.659,429,0.513,431,0.659,437,0.607,439,0.777,441,0.659,446,1.126,448,0.845,451,1.007,453,0.853,454,1.812,455,1.606,457,0.873,461,1.222,465,1.126,471,1.568,472,1.433,475,1.292,477,1.094,484,1.695,492,0.607,493,0.845,515,0.716,519,0.845,522,0.845,523,0.845,529,1.292,536,1.568,540,0.777,550,0.777,565,1.49,579,1.938,587,0.443,588,0.659,589,0.777,590,1.574,591,2.238,592,1.407,593,2.061,594,2.061,595,0.927,596,1.407,597,1.292,598,2.058,599,0.777,600,1.407,601,0.921,602,0.607,603,0.716,604,0.777,605,0.716,606,0.921,607,0.921,608,0.921,609,0.921,610,0.921,611,0.921,612,0.921,613,0.659,614,0.921,615,1.015,616,0.921,617,0.921,618,0.921,619,0.921,620,0.921,621,0.921,622,0.921,623,0.921,624,0.921,625,0.921,626,0.921,627,0.921,628,0.921,629,0.921,630,0.921,631,0.921,632,0.921,633,1.757,634,0.921,635,0.921,636,0.921,637,0.921,638,0.921,639,1.568,640,0.921,641,0.921,642,1.407,643,2.331,644,0.921,645,0.921,646,0.921,647,0.921,648,2.515,649,2.331,650,2.14,651,2.389,652,2.515,653,2.596,654,2.596,655,2.26,656,1.539,657,2.755,658,1.848,659,1.848,660,2.036,661,1.845,662,1.857,663,1.938,664,1.899,665,2.26,666,2.26,667,0.921,668,2.596,669,2.403,670,2.403,671,2.403,672,2.389,673,2.238,674,2.238,675,2.45,676,2.14,677,1.407,678,0.921,679,1.442,680,1.188,681,1.708,682,1.432,683,1.407,684,1.708,685,0.921,686,1.708,687,0.921,688,0.921,689,1.913,690,0.921,691,2.389,692,2.479,693,0.921,694,0.921,695,0.921,696,1.913,697,0.921,698,1.708,699,0.921,700,1.407,701,0.921,702,0.921,703,1.407,704,1.407,705,0.921,706,1.708,707,1.442,708,1.442,709,1.442,710,0.921,711,0.921,712,0.845,713,0.921,714,2.763,715,2.83,716,0.921,717,0.921,718,0.921,719,0.921,720,0.921,721,0.921,722,0.921,723,0.921,724,2.683,725,0.921,726,0.921,727,2.438,728,0.921,729,0.921,730,0.921,731,0.921,732,0.921,733,1.37,734,0.921,735,0.921,736,0.921,737,0.921,738,0.921,739,1.968,740,0.921,741,0.921,742,0.921,743,0.921,744,0.921,745,2.061,746,0.921,747,0.921,748,0.921,749,0.921,750,0.921,751,1.407,752,0.921,753,0.921,754,0.921,755,0.921,756,0.921,757,0.921,758,0.921,759,0.921,760,0.921,761,0.921,762,0.921,763,0.921,764,0.921,765,0.921,766,0.921,767,0.921,768,0.921,769,0.921,770,0.921,771,0.921,772,0.921,773,0.921,774,0.921,775,0.921,776,0.921,777,0.921,778,0.921,779,0.921,780,0.921,781,0.921,782,0.921,783,1.407,784,0.845,785,2.061,786,2.061,787,0.921,788,0.921,789,0.921,790,0.921,791,0.921,792,0.921,793,0.921,794,0.921,795,0.921,796,1.892,797,2.061,798,0.921,799,0.921,800,0.921,801,0.921,802,0.921,803,0.921,804,0.921,805,0.921,806,0.845,807,0.921,808,0.921,809,0.921,810,0.921,811,0.921,812,0.921,813,0.921,814,0.921,815,0.921,816,0.921,817,0.921,818,0.921,819,0.921,820,0.921,821,0.921,822,0.921,823,0.921,824,0.921,825,0.921,826,0.921,827,2.128,828,0.921,829,0.921,830,0.921,831,0.921,832,0.921,833,0.921,834,0.921,835,0.921,836,0.921,837,1.292,838,0.921,839,0.921,840,0.921,841,0.921,842,0.921,843,0.921,844,0.921,845,0.921,846,0.921,847,0.921,848,0.921,849,0.921,850,0.921,851,0.921,852,0.921,853,0.921,854,0.921,855,0.921,856,0.921,857,0.921,858,0.921,859,0.921,860,0.921,861,0.921,862,0.921,863,0.921,864,0.921,865,0.921,866,0.921,867,0.921,868,0.921,869,0.921,870,0.921,871,0.921,872,0.921,873,0.921,874,0.921,875,2.173,876,0.921,877,0.921,878,0.921,879,0.921,880,2.173,881,0.921,882,2.496,883,0.921,884,2.075,885,2.276,886,1.407,887,2.061,888,1.708,889,1.407,890,1.708,891,1.913,892,0.921,893,1.708,894,1.708,895,0.921,896,2.26,897,1.708,898,1.007,899,0.921,900,0.921,901,2.061,902,0.921,903,0.921,904,0.921,905,2.331,906,1.913,907,1.606,908,0.921,909,0.921,910,0.845,911,0.921,912,2.545,913,2.515,914,0.921,915,2.729,916,0.921,917,1.91,918,2.26,919,2.061,920,2.173,921,2.061,922,2.061,923,2.669,924,0.921,925,2.26,926,2.173,927,2.173,928,2.173,929,1.913,930,0.921,931,2.26,932,1.913,933,1.708,934,1.708,935,1.407,936,0.921,937,0.921,938,0.921,939,0.921,940,0.921,941,0.921,942,0.921,943,0.921,944,0.921,945,0.921,946,0.921,947,0.921,948,2.061,949,2.515,950,0.921,951,2.061,952,0.921,953,0.921,954,0.921,955,0.777,956,0.921,957,0.921,958,0.921,959,1.292,960,0.921,961,1.568,962,1.188,963,1.188,964,0.845,965,1.615,966,2.173,967,1.913,968,1.292,969,0.845,970,0.921,971,0.921,972,0.845,973,0.845,974,1.292,975,0.921,976,1.407,977,0.921,978,0.921,979,0.777,980,0.921,981,0.921,982,0.921,983,1.222,984,0.921,985,0.921,986,0.921,987,0.921,988,0.921,989,0.921,990,0.921,991,0.921,992,0.921,993,0.921,994,0.921,995,0.921,996,0.921,997,0.853,998,1.007,999,1.292,1000,1.094,1001,1.407,1002,1.094,1003,1.292,1004,0.921,1005,1.188,1006,0.921,1007,0.921,1008,1.007,1009,0.921,1010,2.061,1011,2.061,1012,2.061,1013,1.708,1014,0.921,1015,1.407,1016,1.292,1017,1.407,1018,1.407,1019,1.407,1020,0.921,1021,1.407,1022,0.921,1023,0.921,1024,1.708,1025,1.913,1026,2.061,1027,1.188,1028,0.921,1029,1.708,1030,0.607,1031,0.607,1032,0.921,1033,0.921,1034,0.921,1035,0.921,1036,0.921,1037,0.921,1038,0.921,1039,0.921,1040,1.407,1041,0.921,1042,0.921,1043,0.921,1044,0.921,1045,0.921,1046,0.921,1047,0.921,1048,1.407,1049,1.913,1050,0.845,1051,0.845,1052,0.921,1053,0.921,1054,0.921,1055,1.292,1056,0.921,1057,0.921,1058,0.921,1059,0.921,1060,0.921,1061,1.708,1062,0.921,1063,0.921,1064,0.921,1065,0.921,1066,0.921,1067,0.845,1068,1.407,1069,0.921,1070,0.921,1071,1.407,1072,0.921,1073,0.845,1074,0.921,1075,0.777,1076,1.407,1077,0.921,1078,1.292,1079,0.845,1080,0.719,1081,0.921,1082,0.921,1083,0.777]],["title/interfaces/RolFuncionario.html",[587,0.266,1083,1.18]],["body/interfaces/RolFuncionario.html",[3,0.202,4,0.175,8,0.227,10,0.512,12,0.544,13,0.23,14,0.62,16,0.423,17,0.566,18,0.558,25,0.7,32,0.033,37,0.893,73,0.911,91,1.148,123,1.19,145,1.967,155,1.093,156,1.093,157,0.715,158,0.124,159,0.267,169,0.726,186,0.291,190,0.397,191,0.267,198,0.539,199,0.392,203,0.47,205,0.54,206,0.919,210,0.951,218,0.744,220,0.496,224,2.128,227,0.671,228,1.719,231,1.249,239,0.513,242,0.951,253,0.671,267,0.323,281,1.249,284,0.963,288,0.714,291,0.977,293,0.604,295,1.1,298,0.853,304,0.545,308,0.375,311,0.175,325,2.148,326,0.524,327,0.202,331,0.99,337,0.793,344,0.658,363,1.097,367,1.368,369,1.327,370,0.658,372,2.383,378,0.658,379,0.599,425,0.016,426,0.016,428,0.658,429,0.513,431,0.658,437,0.606,439,0.777,441,0.658,446,1.125,448,0.845,451,1.007,453,0.853,454,1.811,455,1.606,457,0.872,461,1.222,465,1.125,471,1.567,472,1.433,475,1.291,477,1.093,484,1.695,492,0.606,493,0.845,515,0.715,519,0.845,522,0.845,523,0.845,529,1.291,536,1.567,540,0.777,550,0.777,565,1.489,579,1.938,587,0.443,588,0.658,589,0.777,590,1.574,591,2.237,592,1.406,593,2.06,594,2.06,595,0.927,596,1.406,597,1.291,598,2.058,599,0.777,600,1.406,601,0.92,602,0.606,603,0.715,604,0.777,605,0.715,606,0.92,607,0.92,608,0.92,609,0.92,610,0.92,611,0.92,612,0.92,613,0.658,614,0.92,615,1.015,616,0.92,617,0.92,618,0.92,619,0.92,620,0.92,621,0.92,622,0.92,623,0.92,624,0.92,625,0.92,626,0.92,627,0.92,628,0.92,629,0.92,630,0.92,631,0.92,632,0.92,633,1.756,634,0.92,635,0.92,636,0.92,637,0.92,638,0.92,639,1.567,640,0.92,641,0.92,642,1.406,643,2.331,644,0.92,645,0.92,646,0.92,647,0.92,648,2.514,649,2.331,650,2.139,651,2.389,652,2.514,653,2.596,654,2.596,655,2.26,656,1.526,657,2.755,658,1.848,659,1.848,660,2.036,661,1.845,662,1.857,663,1.938,664,1.899,665,2.26,666,2.26,667,0.92,668,2.596,669,2.403,670,2.403,671,2.403,672,2.389,673,2.237,674,2.237,675,2.486,676,2.139,677,1.406,678,0.92,679,1.441,680,1.187,681,1.707,682,1.431,683,1.406,684,1.707,685,0.92,686,1.707,687,0.92,688,0.92,689,1.912,690,0.92,691,2.389,692,2.572,693,0.92,694,0.92,695,0.92,696,1.912,697,0.92,698,1.707,699,0.92,700,1.406,701,0.92,702,0.92,703,1.406,704,1.406,705,0.92,706,1.707,707,1.441,708,1.441,709,1.441,710,0.92,711,0.92,712,0.845,713,0.92,714,2.763,715,2.829,716,0.92,717,0.92,718,0.92,719,0.92,720,0.92,721,0.92,722,0.92,723,0.92,724,2.683,725,0.92,726,0.92,727,2.437,728,0.92,729,0.92,730,0.92,731,0.92,732,0.92,733,1.37,734,0.92,735,0.92,736,0.92,737,0.92,738,0.92,739,1.967,740,0.92,741,0.92,742,0.92,743,0.92,744,0.92,745,2.06,746,0.92,747,0.92,748,0.92,749,0.92,750,0.92,751,1.406,752,0.92,753,0.92,754,0.92,755,0.92,756,0.92,757,0.92,758,0.92,759,0.92,760,0.92,761,0.92,762,0.92,763,0.92,764,0.92,765,0.92,766,0.92,767,0.92,768,0.92,769,0.92,770,0.92,771,0.92,772,0.92,773,0.92,774,0.92,775,0.92,776,0.92,777,0.92,778,0.92,779,0.92,780,0.92,781,0.92,782,0.92,783,1.406,784,0.845,785,2.06,786,2.06,787,0.92,788,0.92,789,0.92,790,0.92,791,0.92,792,0.92,793,0.92,794,0.92,795,0.92,796,1.891,797,2.06,798,0.92,799,0.92,800,0.92,801,0.92,802,0.92,803,0.92,804,0.92,805,0.92,806,0.845,807,0.92,808,0.92,809,0.92,810,0.92,811,0.92,812,0.92,813,0.92,814,0.92,815,0.92,816,0.92,817,0.92,818,0.92,819,0.92,820,0.92,821,0.92,822,0.92,823,0.92,824,0.92,825,0.92,826,0.92,827,2.128,828,0.92,829,0.92,830,0.92,831,0.92,832,0.92,833,0.92,834,0.92,835,0.92,836,0.92,837,1.291,838,0.92,839,0.92,840,0.92,841,0.92,842,0.92,843,0.92,844,0.92,845,0.92,846,0.92,847,0.92,848,0.92,849,0.92,850,0.92,851,0.92,852,0.92,853,0.92,854,0.92,855,0.92,856,0.92,857,0.92,858,0.92,859,0.92,860,0.92,861,0.92,862,0.92,863,0.92,864,0.92,865,0.92,866,0.92,867,0.92,868,0.92,869,0.92,870,0.92,871,0.92,872,0.92,873,0.92,874,0.92,875,2.172,876,0.92,877,0.92,878,0.92,879,0.92,880,2.172,881,0.92,882,2.496,883,0.92,884,2.075,885,2.275,886,1.406,887,2.06,888,1.707,889,1.406,890,1.707,891,1.912,892,0.92,893,1.707,894,1.707,895,0.92,896,2.26,897,1.707,898,1.007,899,0.92,900,0.92,901,2.06,902,0.92,903,0.92,904,0.92,905,2.331,906,1.912,907,1.574,908,0.92,909,0.92,910,0.845,911,0.92,912,2.545,913,2.514,914,0.92,915,2.729,916,0.92,917,1.91,918,2.26,919,2.06,920,2.172,921,2.06,922,2.06,923,2.669,924,0.92,925,2.26,926,2.172,927,2.172,928,2.172,929,1.912,930,0.92,931,2.26,932,1.912,933,1.707,934,1.707,935,1.406,936,0.92,937,0.92,938,0.92,939,0.92,940,0.92,941,0.92,942,0.92,943,0.92,944,0.92,945,0.92,946,0.92,947,0.92,948,2.06,949,2.514,950,0.92,951,2.06,952,0.92,953,0.92,954,0.92,955,0.777,956,0.92,957,0.92,958,0.92,959,1.291,960,0.92,961,1.567,962,1.187,963,1.187,964,0.845,965,1.614,966,2.172,967,1.912,968,1.291,969,0.845,970,0.92,971,0.92,972,0.845,973,0.845,974,1.291,975,0.92,976,1.406,977,0.92,978,0.92,979,0.777,980,0.92,981,0.92,982,0.92,983,1.222,984,0.92,985,0.92,986,0.92,987,0.92,988,0.92,989,0.92,990,0.92,991,0.92,992,0.92,993,0.92,994,0.92,995,0.92,996,0.92,997,0.853,998,1.007,999,1.291,1000,1.093,1001,1.406,1002,1.093,1003,1.291,1004,0.92,1005,1.187,1006,0.92,1007,0.92,1008,1.007,1009,0.92,1010,2.06,1011,2.06,1012,2.06,1013,1.707,1014,0.92,1015,1.406,1016,1.291,1017,1.406,1018,1.406,1019,1.406,1020,0.92,1021,1.406,1022,0.92,1023,0.92,1024,1.707,1025,1.912,1026,2.06,1027,1.187,1028,0.92,1029,1.707,1030,0.606,1031,0.606,1032,0.92,1033,0.92,1034,0.92,1035,0.92,1036,0.92,1037,0.92,1038,0.92,1039,0.92,1040,1.406,1041,0.92,1042,0.92,1043,0.92,1044,0.92,1045,0.92,1046,0.92,1047,0.92,1048,1.406,1049,1.912,1050,0.845,1051,0.845,1052,0.92,1053,0.92,1054,0.92,1055,1.291,1056,0.92,1057,0.92,1058,0.92,1059,0.92,1060,0.92,1061,1.707,1062,0.92,1063,0.92,1064,0.92,1065,0.92,1066,0.92,1067,0.845,1068,1.406,1069,0.92,1070,0.92,1071,1.406,1072,0.92,1073,0.845,1074,0.92,1075,0.777,1076,1.406,1077,0.92,1078,1.291,1079,0.845,1080,0.47,1081,1.406,1082,1.406,1083,1.187]],["title/guards/RoleGuard.html",[1907,2.312,1908,2.312]],["body/guards/RoleGuard.html",[3,0.443,4,0.383,8,0.326,10,0.585,12,0.565,14,0.681,16,0.431,17,0.505,19,1.702,25,0.679,32,0.033,158,0.271,168,1.585,169,0.679,184,1.722,185,2.961,186,0.842,187,1.585,189,1.722,190,0.679,191,0.457,192,1.459,193,2.031,198,0.76,199,0.531,203,1.314,205,0.679,210,1.123,214,3.178,220,0.528,285,1.695,288,0.86,293,0.76,304,0.933,308,0.565,311,0.383,314,1.443,323,1.87,326,0.443,327,0.443,331,0.903,337,0.844,363,1.162,370,0.943,378,0.943,379,0.844,380,3.834,389,2.031,425,0.027,426,0.027,431,1.443,451,1.841,457,1.23,490,2.016,515,1.566,516,3.834,595,1.585,605,1.566,633,1.999,639,2.446,682,1.585,907,1.328,968,1.85,969,1.85,1027,1.702,1031,1.585,1080,1.412,1091,2.961,1105,3.393,1119,2.961,1128,4.255,1133,3.334,1146,4.57,1151,2.202,1152,4.255,1154,3.98,1184,3.98,1479,3.334,1525,3.834,1544,2.961,1762,3.834,1908,3.98,1909,4.593,1910,3.834,1911,5.483,1912,5.483,1913,5.483,1914,5.483,1915,6.071,1916,4.593,1917,5.483,1918,6.071,1919,6.071,1920,6.071,1921,4.593,1922,5.483,1923,5.483,1924,5.483,1925,5.483,1926,4.593,1927,4.593,1928,5.483,1929,5.483,1930,4.593,1931,4.593]],["title/interfaces/SegmentoHorario.html",[231,0.847,587,0.266]],["body/interfaces/SegmentoHorario.html",[3,0.201,4,0.174,8,0.227,10,0.511,12,0.544,13,0.229,14,0.609,16,0.426,17,0.565,18,0.555,25,0.699,32,0.033,37,0.892,73,0.91,91,1.145,123,1.187,145,1.964,155,1.089,156,1.089,157,0.711,158,0.123,159,0.266,169,0.725,186,0.289,190,0.396,191,0.412,198,0.538,199,0.391,203,0.468,205,0.538,206,0.918,210,0.948,218,0.738,220,0.495,224,2.127,227,0.721,228,1.724,231,1.314,239,0.51,242,0.948,253,0.597,267,0.321,281,1.246,284,1.055,288,0.713,291,0.987,293,0.602,295,1.1,298,0.849,304,0.543,308,0.374,311,0.174,325,2.169,326,0.524,327,0.201,331,0.99,337,0.792,344,0.655,363,1.096,367,1.365,369,1.482,370,0.655,372,2.381,378,0.655,379,0.597,425,0.016,426,0.016,428,0.655,429,0.51,431,0.655,437,0.603,439,0.773,441,0.655,446,1.121,448,0.84,451,1.003,453,0.849,454,1.808,455,1.604,457,0.87,461,1.218,465,1.121,471,1.562,472,1.431,475,1.286,477,1.089,484,1.693,492,0.603,493,0.84,515,0.711,519,0.84,522,0.84,523,0.84,529,1.286,536,1.562,540,0.773,550,0.773,565,1.486,579,1.937,587,0.442,588,0.655,589,0.773,590,1.572,591,2.234,592,1.401,593,2.055,594,2.055,595,0.923,596,1.401,597,1.286,598,2.055,599,0.773,600,1.401,601,0.915,602,0.603,603,0.711,604,0.773,605,0.711,606,0.915,607,0.915,608,0.915,609,0.915,610,0.915,611,0.915,612,0.915,613,0.655,614,0.915,615,1.014,616,0.915,617,0.915,618,0.915,619,0.915,620,0.915,621,0.915,622,0.915,623,0.915,624,0.915,625,0.915,626,0.915,627,0.915,628,0.915,629,0.915,630,0.915,631,0.915,632,0.915,633,1.753,634,0.915,635,0.915,636,0.915,637,0.915,638,0.915,639,1.562,640,0.915,641,0.915,642,1.401,643,2.327,644,0.915,645,0.915,646,0.915,647,0.915,648,2.511,649,2.327,650,2.136,651,2.385,652,2.511,653,2.593,654,2.593,655,2.256,656,1.538,657,2.754,658,1.847,659,1.847,660,2.036,661,1.844,662,1.856,663,1.937,664,1.897,665,2.256,666,2.256,667,0.915,668,2.593,669,2.4,670,2.4,671,2.4,672,2.385,673,2.334,674,2.334,675,2.484,676,2.272,677,1.401,678,0.915,679,1.437,680,1.183,681,1.702,682,1.428,683,1.401,684,1.702,685,0.915,686,1.702,687,0.915,688,0.915,689,1.907,690,0.915,691,2.385,692,2.475,693,0.915,694,0.915,695,0.915,696,1.907,697,0.915,698,1.702,699,0.915,700,1.401,701,0.915,702,0.915,703,1.401,704,1.401,705,0.915,706,1.702,707,1.437,708,1.437,709,1.437,710,0.915,711,0.915,712,0.84,713,0.915,714,2.761,715,2.828,716,0.915,717,0.915,718,0.915,719,0.915,720,0.915,721,0.915,722,0.915,723,0.915,724,2.681,725,0.915,726,0.915,727,2.434,728,0.915,729,0.915,730,0.915,731,0.915,732,0.915,733,1.368,734,0.915,735,0.915,736,0.915,737,0.915,738,0.915,739,1.964,740,0.915,741,0.915,742,0.915,743,0.915,744,0.915,745,2.055,746,0.915,747,0.915,748,0.915,749,0.915,750,0.915,751,1.401,752,0.915,753,0.915,754,0.915,755,0.915,756,0.915,757,0.915,758,0.915,759,0.915,760,0.915,761,0.915,762,0.915,763,0.915,764,0.915,765,0.915,766,0.915,767,0.915,768,0.915,769,0.915,770,0.915,771,0.915,772,0.915,773,0.915,774,0.915,775,0.915,776,0.915,777,0.915,778,0.915,779,0.915,780,0.915,781,0.915,782,0.915,783,1.401,784,0.84,785,2.055,786,2.055,787,0.915,788,0.915,789,0.915,790,0.915,791,0.915,792,0.915,793,0.915,794,0.915,795,0.915,796,1.887,797,2.055,798,0.915,799,0.915,800,0.915,801,0.915,802,0.915,803,0.915,804,0.915,805,0.915,806,0.84,807,0.915,808,0.915,809,0.915,810,0.915,811,0.915,812,0.915,813,0.915,814,0.915,815,0.915,816,0.915,817,0.915,818,0.915,819,0.915,820,0.915,821,0.915,822,0.915,823,0.915,824,0.915,825,0.915,826,0.915,827,2.127,828,0.915,829,0.915,830,0.915,831,0.915,832,0.915,833,0.915,834,0.915,835,0.915,836,0.915,837,1.286,838,0.915,839,0.915,840,0.915,841,0.915,842,0.915,843,0.915,844,0.915,845,0.915,846,0.915,847,0.915,848,0.915,849,0.915,850,0.915,851,0.915,852,0.915,853,0.915,854,0.915,855,0.915,856,0.915,857,0.915,858,0.915,859,0.915,860,0.915,861,0.915,862,0.915,863,0.915,864,0.915,865,0.915,866,0.915,867,0.915,868,0.915,869,0.915,870,0.915,871,0.915,872,0.915,873,0.915,874,0.915,875,2.168,876,0.915,877,0.915,878,0.915,879,0.915,880,2.168,881,0.915,882,2.494,883,0.915,884,2.071,885,2.272,886,1.401,887,2.055,888,1.702,889,1.401,890,1.702,891,1.907,892,0.915,893,1.702,894,1.702,895,0.915,896,2.256,897,1.702,898,1.003,899,0.915,900,0.915,901,2.055,902,0.915,903,0.915,904,0.915,905,2.327,906,1.907,907,1.533,908,0.915,909,0.915,910,0.84,911,0.915,912,2.542,913,2.511,914,0.915,915,2.727,916,0.915,917,1.909,918,2.256,919,2.055,920,2.168,921,2.055,922,2.055,923,2.667,924,0.915,925,2.256,926,2.168,927,2.168,928,2.168,929,1.907,930,0.915,931,2.256,932,1.907,933,1.702,934,1.702,935,1.401,936,0.915,937,0.915,938,0.915,939,0.915,940,0.915,941,0.915,942,0.915,943,0.915,944,0.915,945,0.915,946,0.915,947,0.915,948,2.055,949,2.511,950,0.915,951,2.055,952,0.915,953,0.915,954,0.915,955,0.773,956,0.915,957,0.915,958,0.915,959,1.286,960,0.915,961,1.562,962,1.183,963,1.183,964,0.84,965,1.61,966,2.168,967,1.907,968,1.286,969,0.84,970,0.915,971,0.915,972,0.84,973,0.84,974,1.286,975,0.915,976,1.401,977,0.915,978,0.915,979,0.773,980,0.915,981,0.915,982,0.915,983,1.218,984,0.915,985,0.915,986,0.915,987,0.915,988,0.915,989,0.915,990,0.915,991,0.915,992,0.915,993,0.915,994,0.915,995,0.915,996,0.915,997,0.849,998,1.003,999,1.286,1000,1.089,1001,1.401,1002,1.089,1003,1.286,1004,0.915,1005,1.183,1006,0.915,1007,0.915,1008,1.003,1009,0.915,1010,2.055,1011,2.055,1012,2.055,1013,1.702,1014,0.915,1015,1.401,1016,1.286,1017,1.401,1018,1.401,1019,1.401,1020,0.915,1021,1.401,1022,0.915,1023,0.915,1024,1.702,1025,1.907,1026,2.055,1027,1.183,1028,0.915,1029,1.702,1030,0.603,1031,0.603,1032,0.915,1033,0.915,1034,0.915,1035,0.915,1036,0.915,1037,0.915,1038,0.915,1039,0.915,1040,1.401,1041,0.915,1042,0.915,1043,0.915,1044,0.915,1045,0.915,1046,0.915,1047,0.915,1048,1.401,1049,1.907,1050,0.84,1051,0.84,1052,0.915,1053,0.915,1054,0.915,1055,1.286,1056,0.915,1057,0.915,1058,0.915,1059,0.915,1060,0.915,1061,1.702,1062,0.915,1063,0.915,1064,0.915,1065,0.915,1066,0.915,1067,0.84,1068,1.401,1069,0.915,1070,0.915,1071,1.401,1072,0.915,1073,0.84,1074,0.915,1075,0.773,1076,1.401,1077,0.915,1078,1.286,1079,0.84,1080,0.468,1081,0.915,1082,0.915,1083,0.773]],["title/components/SegmentoModalComponent.html",[0,0.226,30,0.921]],["body/components/SegmentoModalComponent.html",[0,0.375,1,1.054,2,1.491,3,0.351,4,0.304,6,1.243,7,1.243,8,0.259,10,0.573,11,1.617,12,0.457,13,0.614,14,0.614,16,0.459,17,0.58,18,0.97,19,1.759,20,2.53,21,1.243,22,1.852,23,1.852,24,1.373,25,0.693,26,1.373,27,1.526,30,1.617,32,0.033,37,0.505,73,0.813,99,2.252,116,1.243,123,1.149,158,0.215,159,0.396,168,1.373,176,2.939,184,1.145,186,0.505,187,1.844,189,1.145,190,0.654,191,0.517,192,0.97,197,2.752,199,0.544,205,0.693,206,0.861,211,4.059,218,0.76,219,2.901,220,0.591,226,3.963,227,1.022,228,0.97,229,4.314,231,1.487,233,2.275,234,2.779,235,3.241,239,1.29,242,1.161,253,0.813,261,1.916,267,0.915,268,1.373,269,1.263,284,0.974,285,1.373,287,1.491,288,0.804,289,2.849,293,0.824,294,2.752,295,1.012,298,1.263,304,0.898,307,2.941,308,0.539,311,0.304,312,0.97,313,1.351,314,1.145,321,4.649,323,1.243,325,1.759,326,0.351,327,0.351,331,0.893,344,1.658,357,4.208,360,2.495,367,1.145,368,1.748,369,1.907,386,4.208,390,1.955,394,1.243,395,1.619,396,1.619,397,1.243,398,1.907,399,1.243,400,1.243,401,1.054,402,1.243,403,1.054,404,1.243,405,0.97,406,1.243,407,1.054,408,1.243,409,1.054,410,1.243,411,1.054,412,1.243,413,1.243,414,1.054,415,1.243,416,1.907,417,0.97,418,1.243,419,1.054,420,1.243,421,1.054,422,0.891,423,1.243,424,1.243,425,0.023,426,0.023,435,1.912,439,2.273,455,1.373,465,1.373,494,3.06,496,2.647,584,3.831,602,1.054,613,1.867,615,1.03,656,1.48,673,1.469,674,1.469,675,1.469,676,1.469,837,2.394,885,1.912,1016,1.912,1079,1.912,1114,2.083,1151,2.68,1168,3.241,1194,2.752,1195,3.446,1316,3.06,1323,3.06,1339,3.06,1348,3.604,1350,2.114,1351,3.241,1353,2.752,1361,2.275,1379,3.06,1381,2.752,1391,2.114,1394,2.114,1395,2.752,1422,2.752,1435,2.114,1444,3.044,1445,3.044,1446,3.044,1447,3.044,1448,3.044,1583,3.963,1679,2.114,1680,3.446,1681,3.446,1689,3.604,1693,3.06,1694,3.604,1696,3.901,1697,3.044,1716,3.044,1728,3.604,1731,1.916,1732,2.35,1761,3.06,1792,3.963,1826,3.044,1845,4.059,1863,3.963,1864,3.044,1875,3.044,1932,5.346,1933,4.747,1934,6.052,1935,5.278,1936,5.591,1937,5.797,1938,5.943,1939,4.747,1940,3.646,1941,3.646,1942,3.646,1943,3.646,1944,3.646,1945,3.646,1946,3.646,1947,5.278,1948,5.278,1949,3.646,1950,3.646,1951,3.646,1952,5.278,1953,3.646,1954,3.646,1955,3.646,1956,3.646,1957,3.646,1958,3.646,1959,3.646,1960,3.646,1961,3.646,1962,3.646,1963,3.646,1964,3.646,1965,3.646,1966,3.646,1967,3.646,1968,3.646,1969,3.646,1970,3.646,1971,3.646,1972,3.646,1973,3.646,1974,4.747,1975,4.747,1976,4.747,1977,4.747,1978,4.747,1979,3.646,1980,4.747,1981,4.747,1982,4.747,1983,3.646,1984,3.646,1985,3.646]],["title/interfaces/Toast.html",[422,0.779,587,0.266]],["body/interfaces/Toast.html",[3,0.623,4,0.388,8,0.33,10,0.588,12,0.6,13,0.511,14,0.67,16,0.453,17,0.607,32,0.033,158,0.275,159,0.461,169,0.577,191,0.54,197,2.699,198,0.766,199,0.519,218,0.731,220,0.533,291,0.939,295,0.793,298,1.239,304,0.793,306,2.259,308,0.533,311,0.388,323,1.588,326,0.533,327,0.449,337,0.851,340,3.002,368,2.65,379,0.983,388,1.725,389,2.184,422,1.596,425,0.027,426,0.027,429,1.138,431,1.463,453,1.239,470,2.629,492,1.347,587,0.388,588,1.463,590,1.705,595,1.599,598,1.725,599,1.725,605,1.588,615,0.793,682,1.347,739,1.725,1106,1.463,1143,3.563,1144,3.563,1153,2.232,1163,3.002,1183,2.364,1290,2.448,1321,3.027,1361,2.826,1472,2.448,1731,2.448,1986,3.38,1987,3.38,1988,3.887,1989,3.887,1990,3.887,1991,3.887,1992,3.887,1993,3.887,1994,3.887,1995,3.887,1996,3.887,1997,3.887,1998,3.887,1999,3.887,2000,3.887,2001,4.614,2002,3.887,2003,3.887,2004,3.887]],["title/components/ToastComponent.html",[0,0.226,421,0.921]],["body/components/ToastComponent.html",[0,0.396,1,1.188,2,1.608,3,0.563,4,0.343,5,2.067,6,1.401,7,1.401,8,0.291,10,0.579,11,1.773,12,0.591,13,0.563,14,0.683,16,0.396,17,0.563,19,1.897,21,1.401,22,1.878,23,1.878,24,1.481,25,0.635,26,1.481,27,1.614,30,1.188,32,0.033,37,0.774,39,2.067,40,2.553,43,2.348,44,2.067,46,2.067,47,2.067,49,2.248,56,3.235,57,3.235,60,2.067,73,0.86,75,2.389,77,2.067,80,2.248,81,2.248,90,2.69,98,3.222,104,2.067,108,2.067,116,1.747,158,0.345,159,0.427,168,1.481,169,0.691,184,1.753,187,1.689,189,1.29,190,0.691,191,0.465,192,1.093,198,0.774,199,0.427,205,0.509,206,0.633,220,0.493,227,0.633,242,1.004,267,0.926,268,1.188,269,1.093,295,0.872,304,0.872,308,0.563,311,0.343,312,1.093,326,0.396,327,0.396,337,0.633,379,0.86,388,1.897,389,1.897,390,1.897,394,1.401,395,1.747,396,1.747,397,1.401,398,1.993,399,1.401,400,1.401,401,1.188,402,1.401,403,1.188,404,1.401,405,1.093,406,1.401,407,1.188,408,1.401,409,1.188,410,1.401,411,1.188,412,1.401,413,1.401,414,1.188,415,1.401,416,1.993,417,1.093,418,1.401,419,1.188,420,1.401,421,1.689,422,1.61,423,1.401,424,1.401,425,0.025,426,0.025,429,1.252,430,4.658,450,4.877,453,1.599,459,4.275,464,5.117,492,1.188,496,2.982,525,3.429,526,3.429,527,3.429,528,3.429,549,2.449,552,3.597,561,2.675,1106,1.953,1140,1.802,1153,2.675,1183,2.067,1198,2.933,1199,3.597,1200,2.933,1290,3.071,1472,2.159,1774,3.597,1775,3.952,1776,3.235,1777,3.597,1987,2.982,2005,3.429,2006,5.581,2007,5.581,2008,5.581,2009,5.581,2010,4.107,2011,5.121,2012,4.107,2013,6.13,2014,4.107,2015,5.121,2016,4.107,2017,4.107,2018,4.107,2019,5.121,2020,4.107,2021,4.107,2022,4.107]],["title/injectables/ToastService.html",[595,0.921,1106,1]],["body/injectables/ToastService.html",[3,0.624,4,0.377,8,0.321,10,0.595,12,0.611,13,0.596,14,0.663,16,0.45,17,0.663,32,0.033,158,0.266,159,0.453,168,1.57,169,0.721,187,1.746,189,1.419,190,0.56,191,0.529,192,1.202,197,3.147,198,0.807,199,0.534,205,0.673,206,0.836,218,0.721,220,0.582,268,1.683,269,1.548,291,0.93,295,0.769,298,1.444,304,0.769,306,2.237,308,0.523,311,0.377,323,1.541,326,0.523,327,0.435,337,0.836,340,2.912,368,2.165,379,0.977,388,1.673,389,2.288,422,1.612,425,0.027,426,0.027,429,1.327,431,1.419,453,1.444,470,2.629,492,1.306,587,0.377,590,1.57,595,1.57,598,1.673,599,2.011,605,1.541,615,0.924,682,1.57,739,1.673,1106,1.705,1143,2.912,1144,2.912,1153,2.602,1163,3.499,1183,2.35,1290,2.853,1321,2.894,1361,2.79,1472,2.374,1731,2.853,1986,3.279,1987,3.279,1988,4.531,1989,4.531,1990,4.858,1991,4.531,1992,4.531,1993,4.531,1994,4.531,1995,3.771,1996,3.771,1997,3.771,1998,3.771,1999,4.531,2000,3.771,2001,4.531,2002,3.771,2003,3.771,2004,5.04,2023,3.771,2024,5.428,2025,4.517,2026,4.517,2027,4.517,2028,4.517]],["title/coverage.html",[2029,3.622]],["body/coverage.html",[0,0.466,1,1.379,8,0.338,9,3.981,30,1.379,32,0.033,100,2.601,123,0.893,186,0.661,191,0.398,231,1.269,321,3.462,401,1.379,403,1.379,405,1.269,407,1.379,409,1.379,411,1.379,414,1.379,417,1.269,419,1.379,421,1.379,422,1.166,425,0.028,426,0.028,427,3.981,461,1.498,465,1.379,472,1.166,484,1.379,587,0.546,589,2.405,595,1.621,615,0.812,650,1.921,784,1.921,884,2.258,907,1.379,1083,1.767,1084,4.07,1106,1.498,1122,3.074,1142,3.074,1238,3.462,1239,4.68,1315,3.981,1459,3.981,1544,3.614,1596,3.981,1597,3.981,1598,3.981,1617,3.462,1619,3.462,1678,3.981,1679,3.563,1783,4.07,1784,3.981,1861,3.981,1907,3.462,1908,3.462,1910,3.981,1932,3.981,1986,4.07,2005,3.981,2029,3.981,2030,4.769,2031,4.769,2032,4.769,2033,4.769,2034,4.769,2035,4.769,2036,4.769,2037,4.769,2038,4.769,2039,3.981,2040,4.769,2041,3.981,2042,4.769,2043,4.769,2044,4.769,2045,4.769,2046,4.769,2047,4.769,2048,4.769,2049,4.769,2050,5.606,2051,4.769,2052,4.769,2053,5.606,2054,4.769,2055,4.769,2056,4.769,2057,4.769,2058,4.769,2059,4.769,2060,4.769,2061,4.769,2062,4.769,2063,5.955,2064,5.955,2065,5.606,2066,4.769,2067,4.769,2068,4.769]],["title/dependencies.html",[2069,1.934,2070,3.196]],["body/dependencies.html",[8,0.357,32,0.033,311,0.42,312,1.34,313,1.865,316,3.655,317,3.655,318,3.655,319,3.655,320,3.655,425,0.029,426,0.029,490,2.21,492,1.456,597,2.028,1505,3.246,1506,3.246,2070,4.203,2071,5.035,2072,6.515,2073,5.035,2074,5.786,2075,5.786,2076,5.035,2077,5.035,2078,5.035,2079,6.355,2080,5.035,2081,5.035,2082,5.035,2083,5.035,2084,5.035,2085,5.035,2086,5.035,2087,5.035,2088,5.035,2089,5.035,2090,5.035]],["title/miscellaneous/enumerations.html",[2091,1.717,2092,3.196]],["body/miscellaneous/enumerations.html",[12,0.497,16,0.366,32,0.031,37,0.714,73,0.794,158,0.304,199,0.43,218,0.639,269,1.56,425,0.029,426,0.029,465,1.49,589,1.909,591,2.076,679,1.909,680,1.909,682,1.777,1078,2.076,2091,3.322,2092,4.302,2093,5.154]],["title/index.html",[158,0.157,2094,2.665,2095,2.665]],["body/index.html",[0,0.429,4,0.413,19,1.835,32,0.028,135,5.389,190,0.614,352,3.365,425,0.028,426,0.028,550,1.835,615,0.843,712,2.549,972,1.996,973,1.996,1600,4.135,1776,2.872,2069,3.596,2096,4.954,2097,5.732,2098,4.954,2099,6.049,2100,6.049,2101,4.135,2102,4.954,2103,4.954,2104,5.732,2105,4.954,2106,4.954,2107,4.954,2108,4.954,2109,4.954,2110,4.954,2111,4.954,2112,4.954,2113,4.954,2114,4.954,2115,4.954,2116,6.049,2117,6.049,2118,4.954,2119,6.221,2120,4.954,2121,4.954,2122,4.954,2123,4.954,2124,5.732,2125,5.732,2126,6.221,2127,4.954,2128,5.732,2129,5.732,2130,4.954,2131,4.954,2132,4.954,2133,4.954,2134,5.732,2135,4.954,2136,4.954,2137,4.954,2138,4.954,2139,6.049,2140,4.954,2141,4.954,2142,3.596,2143,4.954]],["title/modules.html",[2144,3.622]],["body/modules.html",[32,0.029,425,0.029,426,0.029,2144,4.351]],["title/overview.html",[2142,3.149]],["body/overview.html",[2,1.63,32,0.029,73,0.799,425,0.029,426,0.029,588,1.63,733,1.381,806,2.091,827,1.77,1907,3.768,2023,4.333,2142,3.768]],["title/properties.html",[159,0.319,2069,1.934]],["body/properties.html",[32,0.03,159,0.434,425,0.029,426,0.029,2101,4.344,2145,5.204]],["title/miscellaneous/variables.html",[2091,1.717,2146,3.196]],["body/miscellaneous/variables.html",[14,0.567,16,0.366,32,0.032,158,0.304,191,0.43,268,1.492,269,1.372,277,3.745,425,0.029,426,0.029,429,1.261,1460,3.325,2039,4.306,2041,4.897,2091,3.325,2146,4.306,2147,5.159,2148,5.159,2149,5.159]]],"invertedIndex":[["",{"_index":32,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":37,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/enumerations.html":{}}}],["0.0.0",{"_index":2145,"title":{},"body":{"properties.html":{}}}],["0.1",{"_index":113,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.14.10",{"_index":2090,"title":{},"body":{"dependencies.html":{}}}],["0.25rem",{"_index":89,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.2s",{"_index":105,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.3s",{"_index":56,"title":{},"body":{"components/AgendaComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["0.4rem",{"_index":1231,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.5",{"_index":1771,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.5rem",{"_index":131,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.75rem",{"_index":59,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.875rem",{"_index":1209,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["0.8rem",{"_index":1237,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.9rem",{"_index":83,"title":{},"body":{"components/AgendaComponent.html":{}}}],["01",{"_index":874,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["02",{"_index":807,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["03",{"_index":826,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["04",{"_index":854,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["05",{"_index":783,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["06",{"_index":864,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["07",{"_index":816,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["08",{"_index":794,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["08:00:00",{"_index":894,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["09",{"_index":836,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["09:00:00",{"_index":886,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1",{"_index":73,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"miscellaneous/enumerations.html":{},"overview.html":{}}}],["1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g",{"_index":1286,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1).touppercase",{"_index":1536,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1.1.26",{"_index":2078,"title":{},"body":{"dependencies.html":{}}}],["1.12.0",{"_index":2084,"title":{},"body":{"dependencies.html":{}}}],["1.1rem",{"_index":79,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{}}}],["1.25rem",{"_index":1666,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1.2rem",{"_index":142,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{}}}],["1.4.9",{"_index":2081,"title":{},"body":{"dependencies.html":{}}}],["1.5",{"_index":1676,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["1.5rem",{"_index":45,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1/1",{"_index":2042,"title":{},"body":{"coverage.html":{}}}],["1/10",{"_index":2065,"title":{},"body":{"coverage.html":{}}}],["1/3",{"_index":2064,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2060,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2062,"title":{},"body":{"coverage.html":{}}}],["1/7",{"_index":2066,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":1544,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"coverage.html":{}}}],["100",{"_index":100,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"coverage.html":{}}}],["1000",{"_index":1201,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1001",{"_index":725,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1002",{"_index":731,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1003",{"_index":737,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1004",{"_index":743,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1005",{"_index":749,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1006",{"_index":755,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1007",{"_index":760,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1008",{"_index":765,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1009",{"_index":770,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["100vh",{"_index":1196,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["1010",{"_index":775,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["101010101",{"_index":868,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1024px",{"_index":1216,"title":{},"body":{"components/DashboardComponent.html":{}}}],["10px",{"_index":576,"title":{},"body":{"components/AppComponent.html":{}}}],["11",{"_index":827,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"overview.html":{}}}],["111111111",{"_index":777,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["116726459",{"_index":757,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["12",{"_index":806,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"overview.html":{}}}],["1200px",{"_index":35,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{}}}],["123",{"_index":787,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["12345678",{"_index":1531,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["12:00:00",{"_index":887,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["13/13",{"_index":2047,"title":{},"body":{"coverage.html":{}}}],["13/14",{"_index":2036,"title":{},"body":{"coverage.html":{}}}],["13/52",{"_index":2059,"title":{},"body":{"coverage.html":{}}}],["13538951k",{"_index":728,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["14",{"_index":784,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["14/19",{"_index":2038,"title":{},"body":{"coverage.html":{}}}],["1400px",{"_index":1202,"title":{},"body":{"components/DashboardComponent.html":{}}}],["145092035",{"_index":734,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["14:00:00",{"_index":888,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["150px",{"_index":1235,"title":{},"body":{"components/DashboardComponent.html":{}}}],["151205682",{"_index":746,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["153",{"_index":111,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["159",{"_index":847,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["15:00:00",{"_index":890,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["16",{"_index":2061,"title":{},"body":{"coverage.html":{}}}],["16/17",{"_index":2049,"title":{},"body":{"coverage.html":{}}}],["17",{"_index":865,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["17/19",{"_index":2058,"title":{},"body":{"coverage.html":{}}}],["170401697",{"_index":762,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["171939747",{"_index":767,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["17:00:00",{"_index":889,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["18.2.0",{"_index":2072,"title":{},"body":{"dependencies.html":{}}}],["18.2.12",{"_index":2102,"title":{},"body":{"index.html":{}}}],["18:00:00",{"_index":891,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["19",{"_index":817,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["19.0.0",{"_index":2082,"title":{},"body":{"dependencies.html":{}}}],["195174571",{"_index":752,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["196450963",{"_index":721,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1975",{"_index":845,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1978",{"_index":805,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1980",{"_index":825,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1985",{"_index":793,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1988",{"_index":853,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["198848395",{"_index":772,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1990",{"_index":782,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["199072412",{"_index":740,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1991",{"_index":873,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1992",{"_index":815,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1993",{"_index":863,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1995",{"_index":835,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["1fr",{"_index":121,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1px",{"_index":101,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["1rem",{"_index":60,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["2",{"_index":733,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"overview.html":{}}}],["2.3.0",{"_index":2088,"title":{},"body":{"dependencies.html":{}}}],["2.5rem",{"_index":1675,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["2/2",{"_index":2045,"title":{},"body":{"coverage.html":{}}}],["2/3",{"_index":2056,"title":{},"body":{"coverage.html":{}}}],["20/21",{"_index":2046,"title":{},"body":{"coverage.html":{}}}],["2000",{"_index":2006,"title":{},"body":{"components/ToastComponent.html":{}}}],["2001",{"_index":780,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2002",{"_index":791,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2003",{"_index":803,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2004",{"_index":813,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2005",{"_index":823,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2006",{"_index":833,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2007",{"_index":843,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2008",{"_index":851,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2009",{"_index":861,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2010",{"_index":871,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2024",{"_index":882,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["20px",{"_index":568,"title":{},"body":{"components/AppComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["21/22",{"_index":2054,"title":{},"body":{"coverage.html":{}}}],["22",{"_index":855,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["222222222",{"_index":788,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["225",{"_index":112,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["23",{"_index":795,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["24",{"_index":881,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["24/25",{"_index":2034,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":884,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["26",{"_index":893,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["27",{"_index":896,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["28",{"_index":875,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["29",{"_index":901,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["2c5282",{"_index":148,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["2d3748",{"_index":76,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["2f855a",{"_index":1593,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["2px",{"_index":52,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{}}}],["2rem",{"_index":40,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/ToastComponent.html":{}}}],["3",{"_index":739,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["3.5rem",{"_index":1233,"title":{},"body":{"components/DashboardComponent.html":{}}}],["3/3",{"_index":2067,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":837,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["30*60000",{"_index":1019,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["3000",{"_index":2002,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["31/33",{"_index":2044,"title":{},"body":{"coverage.html":{}}}],["3182ce",{"_index":146,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["321",{"_index":819,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["33",{"_index":2063,"title":{},"body":{"coverage.html":{}}}],["333333333",{"_index":800,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["35px",{"_index":563,"title":{},"body":{"components/AppComponent.html":{}}}],["38a169",{"_index":554,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["3px",{"_index":109,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["3rem",{"_index":1665,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["4",{"_index":745,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["400px",{"_index":1773,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["40px",{"_index":1211,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4299e1",{"_index":108,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["444444444",{"_index":810,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["456",{"_index":799,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["48",{"_index":1976,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["48bb78",{"_index":552,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/ToastComponent.html":{}}}],["4a5568",{"_index":88,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["4px",{"_index":53,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["4rem",{"_index":1227,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["5",{"_index":751,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["5/5",{"_index":2050,"title":{},"body":{"coverage.html":{}}}],["50",{"_index":1212,"title":{},"body":{"components/DashboardComponent.html":{}}}],["500",{"_index":81,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["500px",{"_index":94,"title":{},"body":{"components/AgendaComponent.html":{}}}],["53",{"_index":2051,"title":{},"body":{"coverage.html":{}}}],["555",{"_index":724,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["555555555",{"_index":820,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["56",{"_index":1512,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["576px",{"_index":1230,"title":{},"body":{"components/DashboardComponent.html":{}}}],["5px",{"_index":575,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["5rem",{"_index":1660,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["6",{"_index":1073,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["6.1.15",{"_index":2079,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":2053,"title":{},"body":{"coverage.html":{}}}],["600",{"_index":1203,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["60000",{"_index":1956,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["600px",{"_index":1667,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["640px",{"_index":1222,"title":{},"body":{"components/DashboardComponent.html":{}}}],["654",{"_index":829,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["66",{"_index":2055,"title":{},"body":{"coverage.html":{}}}],["666666666",{"_index":830,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["6px",{"_index":104,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["6rem",{"_index":1214,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["7",{"_index":1075,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["7.8.0",{"_index":2083,"title":{},"body":{"dependencies.html":{}}}],["7/13",{"_index":2052,"title":{},"body":{"coverage.html":{}}}],["718096",{"_index":84,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["73",{"_index":2037,"title":{},"body":{"coverage.html":{}}}],["753",{"_index":857,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["768px",{"_index":1224,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["777777777",{"_index":840,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["789",{"_index":809,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["7px",{"_index":574,"title":{},"body":{"components/AppComponent.html":{}}}],["8",{"_index":897,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["8).touppercase",{"_index":1748,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["800px",{"_index":538,"title":{},"body":{"components/AppComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["852",{"_index":867,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["888888888",{"_index":848,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["89",{"_index":2057,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":48,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["9",{"_index":898,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["90",{"_index":1772,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{}}}],["900px",{"_index":1585,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["90vh",{"_index":1904,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["92",{"_index":2035,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":2043,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":2048,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":1783,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{},"coverage.html":{}}}],["951",{"_index":877,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["96",{"_index":2033,"title":{},"body":{"coverage.html":{}}}],["987",{"_index":839,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["999999999",{"_index":858,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["9]{7,8}[0",{"_index":1521,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["9ae6b4",{"_index":1594,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["9kk]$/.test(cleanrut",{"_index":1522,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["9kk]$/.test(rut",{"_index":1534,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["9kk]/g",{"_index":1283,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["a0aec0",{"_index":583,"title":{},"body":{"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["a:hover",{"_index":1659,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{}}}],["abc123",{"_index":727,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["abierto",{"_index":1621,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["abre",{"_index":356,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["absolute",{"_index":566,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["abstractcontrol",{"_index":1493,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["acceder",{"_index":1152,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["acceso",{"_index":1154,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["accessors",{"_index":1102,"title":{},"body":{"components/DashboardComponent.html":{}}}],["actions",{"_index":1322,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["activar",{"_index":1925,"title":{},"body":{"guards/RoleGuard.html":{}}}],["activatedroutesnapshot",{"_index":1918,"title":{},"body":{"guards/RoleGuard.html":{}}}],["actual",{"_index":389,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["actual_component",{"_index":424,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["actuales",{"_index":1313,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["actualiza",{"_index":261,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["actualizado",{"_index":1440,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["actualizar",{"_index":1342,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["actualmente",{"_index":300,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{}}}],["add",{"_index":550,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"index.html":{}}}],["addfuncionario(funcionario",{"_index":960,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["addpaciente(paciente",{"_index":971,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["addsegmentohorario(segmentohorario",{"_index":1009,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["administra",{"_index":1129,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["administración",{"_index":1636,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["agenda",{"_index":15,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["agenda'},{'name",{"_index":400,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["agendacomponent",{"_index":1,"title":{"components/AgendaComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["agrega",{"_index":955,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["agregar",{"_index":957,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["ahora",{"_index":1639,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["al",{"_index":267,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["alert",{"_index":1589,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["alert('error",{"_index":382,"title":{},"body":{"components/AgendaComponent.html":{}}}],["alert('este",{"_index":1274,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["alert('por",{"_index":358,"title":{},"body":{"components/AgendaComponent.html":{}}}],["align",{"_index":68,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["allowed",{"_index":1326,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["already",{"_index":975,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["alterna",{"_index":257,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["ana",{"_index":747,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["ana.garcia@ejemplo.com",{"_index":750,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["andres.silva@ejemplo.com",{"_index":844,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["andrés",{"_index":841,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["angular",{"_index":2099,"title":{},"body":{"index.html":{}}}],["angular/animations",{"_index":2071,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":312,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"dependencies.html":{}}}],["angular/compiler",{"_index":2073,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":311,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":313,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":2074,"title":{},"body":{"dependencies.html":{}}}],["angular/router",{"_index":490,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"dependencies.html":{}}}],["animation",{"_index":1774,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["antes",{"_index":1446,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["antonio",{"_index":801,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["antonio.vargas@ejemplo.com",{"_index":804,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["apellido",{"_index":1111,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["apellidos",{"_index":659,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["aplicación",{"_index":429,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["app",{"_index":23,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["app.component.css",{"_index":434,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":436,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":401,"title":{"components/AppComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["appconfig",{"_index":2041,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["apple",{"_index":542,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["application",{"_index":2109,"title":{},"body":{"index.html":{}}}],["applicationconfig",{"_index":2148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arguments",{"_index":194,"title":{},"body":{"components/AgendaComponent.html":{}}}],["around",{"_index":1232,"title":{},"body":{"components/DashboardComponent.html":{}}}],["artifacts",{"_index":2120,"title":{},"body":{"index.html":{}}}],["asegurar",{"_index":1871,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["asigna",{"_index":959,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["asignación",{"_index":1246,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["asignar",{"_index":1247,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["assignpaciente",{"_index":1302,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["assignsegmentotopaciente(pacid",{"_index":1052,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["async",{"_index":451,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["atenciones",{"_index":1651,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["atención",{"_index":325,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["autenticado",{"_index":1121,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["authorizednavitems",{"_index":1103,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["auto",{"_index":38,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["autoincrement",{"_index":655,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["automatically",{"_index":2110,"title":{},"body":{"index.html":{}}}],["automáticamente",{"_index":1996,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["autorizados",{"_index":1139,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["avatar",{"_index":1210,"title":{},"body":{"components/DashboardComponent.html":{}}}],["avenida",{"_index":797,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["await",{"_index":515,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["backdrop",{"_index":1770,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["background",{"_index":43,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["backgroundcolor",{"_index":1269,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["bar",{"_index":548,"title":{},"body":{"components/AppComponent.html":{}}}],["basadas",{"_index":1914,"title":{},"body":{"guards/RoleGuard.html":{}}}],["basado",{"_index":1155,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"interfaces/NavItem.html":{}}}],["base",{"_index":454,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["bee3f8",{"_index":1664,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["before",{"_index":1518,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["behavior",{"_index":1631,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["behaviorsubject",{"_index":598,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["behaviorsubject(null",{"_index":1991,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["being",{"_index":711,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["between",{"_index":67,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["block",{"_index":573,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{}}}],["body",{"_index":1779,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["boolean",{"_index":284,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["border",{"_index":46,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["bordercolor",{"_index":1270,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["bottom",{"_index":49,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["box",{"_index":50,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["browser",{"_index":2075,"title":{},"body":{"dependencies.html":{}}}],["btn",{"_index":86,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{}}}],["btn:disabled",{"_index":1325,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["btn:hover",{"_index":546,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{}}}],["build",{"_index":2119,"title":{},"body":{"index.html":{}}}],["busca",{"_index":1289,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["buscar",{"_index":1250,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["button",{"_index":144,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["button:disabled",{"_index":1780,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["button:hover",{"_index":553,"title":{},"body":{"components/AppComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["buttons",{"_index":1669,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["búsqueda",{"_index":249,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["c/u",{"_index":1974,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["c53030",{"_index":1590,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["calendar",{"_index":133,"title":{},"body":{"components/AgendaComponent.html":{}}}],["calendarcomponent",{"_index":160,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["calendario",{"_index":212,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["calendaroptions",{"_index":161,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["calle",{"_index":786,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cambia",{"_index":1733,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["cambiar",{"_index":1768,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["cambio",{"_index":1743,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["cambios",{"_index":197,"title":{},"body":{"components/AgendaComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["camila",{"_index":869,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["camila.reyes@ejemplo.com",{"_index":872,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["campo",{"_index":1358,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["campos",{"_index":1451,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["canactivate",{"_index":1915,"title":{},"body":{"guards/RoleGuard.html":{}}}],["canactivate(route",{"_index":1917,"title":{},"body":{"guards/RoleGuard.html":{}}}],["cancel",{"_index":1324,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{}}}],["cancela",{"_index":1699,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["cancelando",{"_index":528,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["cancelar",{"_index":1339,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["cancelrecovery",{"_index":1688,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["capabilities",{"_index":2137,"title":{},"body":{"index.html":{}}}],["caracteres",{"_index":1424,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["características",{"_index":1610,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["card",{"_index":124,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{}}}],["card.selected",{"_index":128,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{}}}],["card:hover",{"_index":126,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{}}}],["cardiología",{"_index":716,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["carga",{"_index":238,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["cargando",{"_index":480,"title":{},"body":{"components/AppComponent.html":{}}}],["carlos",{"_index":763,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["carlos.torres@ejemplo.com",{"_index":766,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["carmen",{"_index":735,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["carmen.lopez@ejemplo.com",{"_index":738,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["case",{"_index":1529,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["castro",{"_index":779,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["catch",{"_index":378,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["cbd5e0",{"_index":1587,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{}}}],["center",{"_index":70,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["cerrar",{"_index":1194,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["change",{"_index":2112,"title":{},"body":{"index.html":{}}}],["check",{"_index":973,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"index.html":{}}}],["checkbox",{"_index":560,"title":{},"body":{"components/AppComponent.html":{}}}],["checking",{"_index":1931,"title":{},"body":{"guards/RoleGuard.html":{}}}],["checkmark",{"_index":567,"title":{},"body":{"components/AppComponent.html":{}}}],["checkmark:after",{"_index":572,"title":{},"body":{"components/AppComponent.html":{}}}],["checkscreensize",{"_index":170,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["child",{"_index":559,"title":{},"body":{"components/AppComponent.html":{}}}],["choice",{"_index":2133,"title":{},"body":{"index.html":{}}}],["cierra",{"_index":1114,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["circle",{"_index":1221,"title":{},"body":{"components/DashboardComponent.html":{}}}],["circle:hover",{"_index":1234,"title":{},"body":{"components/DashboardComponent.html":{}}}],["cit_cita",{"_index":686,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cita",{"_index":461,"title":{"interfaces/Cita.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["citas",{"_index":437,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["citas'},{'name",{"_index":404,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["citas.component.css",{"_index":1249,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["citas.component.html",{"_index":1248,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["citascomponent",{"_index":403,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["citassubject",{"_index":620,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["citassubscription",{"_index":438,"title":{},"body":{"components/AppComponent.html":{}}}],["cl",{"_index":1173,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["class",{"_index":327,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["cleanrut",{"_index":1520,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{}}}],["cli",{"_index":2100,"title":{},"body":{"index.html":{}}}],["clic",{"_index":217,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["clickeado",{"_index":222,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["clickinfo",{"_index":221,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["clickinfo.event.extendedprops.segmento",{"_index":1272,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["close",{"_index":1694,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["closeassignmodal",{"_index":1314,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["closemodal",{"_index":1689,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["closeprofilemodal",{"_index":1095,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["code",{"_index":2114,"title":{},"body":{"index.html":{}}}],["coincidan",{"_index":1809,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["coinciden",{"_index":1789,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["coincidentes",{"_index":1807,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["colapsada",{"_index":391,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["color",{"_index":75,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["column",{"_index":1218,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["columns",{"_index":117,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["comenzar",{"_index":1638,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["command",{"_index":2134,"title":{},"body":{"index.html":{}}}],["commonmodule",{"_index":27,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["como",{"_index":1051,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["comparar",{"_index":1872,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["completa",{"_index":1383,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["completed",{"_index":578,"title":{},"body":{"components/AppComponent.html":{}}}],["compodoc/compodoc",{"_index":2077,"title":{},"body":{"dependencies.html":{}}}],["component",{"_index":0,"title":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{},"index.html":{}}}],["component_template",{"_index":399,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["componente",{"_index":11,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["componentes",{"_index":626,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"overview.html":{}}}],["components/login",{"_index":1616,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["components/profile",{"_index":1141,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["components/register",{"_index":1618,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["components/toast/toast.component",{"_index":491,"title":{},"body":{"components/AppComponent.html":{}}}],["comprueba",{"_index":1926,"title":{},"body":{"guards/RoleGuard.html":{}}}],["con",{"_index":343,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["configura",{"_index":1826,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["configuración",{"_index":277,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"miscellaneous/variables.html":{}}}],["confirm('¿est",{"_index":1447,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["confirmación",{"_index":1445,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["confirmar",{"_index":1787,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["confirmpassword",{"_index":1822,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["confirmpassword?.seterrors",{"_index":1835,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["confirmpassword?.seterrors(null",{"_index":1836,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["confirmpassword?.value",{"_index":1834,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["cono",{"_index":1147,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["console.error('error",{"_index":380,"title":{},"body":{"components/AgendaComponent.html":{},"guards/RoleGuard.html":{}}}],["console.error('login",{"_index":1763,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["console.error('registration",{"_index":1899,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["console.error(`error",{"_index":908,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["console.error(err",{"_index":524,"title":{},"body":{"components/AppComponent.html":{}}}],["console.error(error",{"_index":1310,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["console.log",{"_index":372,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["console.log('código",{"_index":1749,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["const",{"_index":331,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["constructor",{"_index":184,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["constructor(dbservice",{"_index":185,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/LoginModalComponent.html":{},"guards/RoleGuard.html":{}}}],["constructor(fb",{"_index":1350,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["constructor(private",{"_index":496,"title":{},"body":{"components/AppComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["constructor(router",{"_index":1104,"title":{},"body":{"components/DashboardComponent.html":{}}}],["constructor(toastservice",{"_index":2010,"title":{},"body":{"components/ToastComponent.html":{}}}],["container",{"_index":31,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{}}}],["container:hover",{"_index":570,"title":{},"body":{"components/AppComponent.html":{}}}],["content",{"_index":65,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["content.hidden",{"_index":97,"title":{},"body":{"components/AgendaComponent.html":{}}}],["contraseña",{"_index":1337,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["contraseñas",{"_index":1788,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["control",{"_index":1418,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["control.errors['email",{"_index":1425,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.errors['minlength",{"_index":1421,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.errors['minlength'].requiredlength",{"_index":1423,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.errors['passwordmismatch",{"_index":1846,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["control.errors['pattern",{"_index":1426,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.errors['required",{"_index":1420,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.get('confirmpassword')?.value",{"_index":1884,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["control.get('password')?.value",{"_index":1883,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["control.markastouched",{"_index":1433,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control.value",{"_index":1515,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["control.value?.includes",{"_index":1838,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["control?.errors",{"_index":1419,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["control?.invalid",{"_index":1432,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["copy",{"_index":1654,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["correctas",{"_index":1752,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["correo",{"_index":1330,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["correspondiente",{"_index":1360,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["coverage",{"_index":2029,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["crea",{"_index":367,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["creada",{"_index":1306,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["creado",{"_index":1561,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["crear",{"_index":357,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["create",{"_index":649,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["creating",{"_index":373,"title":{},"body":{"components/AgendaComponent.html":{}}}],["credenciales",{"_index":1751,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["cruz",{"_index":860,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cta",{"_index":1668,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["cuarta",{"_index":818,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cumpla",{"_index":1547,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["cup_cupo",{"_index":681,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cup_cupo(id",{"_index":687,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cup_id",{"_index":593,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cupo",{"_index":465,"title":{"interfaces/Cupo.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["cupos",{"_index":439,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["cupossubject",{"_index":619,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["cupossubscription",{"_index":440,"title":{},"body":{"components/AppComponent.html":{}}}],["currentuser",{"_index":1091,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{}}}],["currentuser.id",{"_index":1928,"title":{},"body":{"guards/RoleGuard.html":{}}}],["curso",{"_index":1385,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["cursor",{"_index":71,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["cuyos",{"_index":1797,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["código",{"_index":1713,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["dash",{"_index":1533,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["dashboard",{"_index":1086,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["dashboard'},{'name",{"_index":406,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["dashboard.component.css",{"_index":1089,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["dashboard.component.html",{"_index":1090,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["dashboardcomponent",{"_index":405,"title":{"components/DashboardComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["database",{"_index":523,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["databaseservice",{"_index":186,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["date",{"_index":294,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/SegmentoModalComponent.html":{}}}],["date(segmento.fecha_hora_inicio",{"_index":1264,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["date(segmentohorario.fecha_hora_fin).gettime",{"_index":1017,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["date(segmentohorario.fecha_hora_inicio).gettime",{"_index":1018,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["date(startdate",{"_index":1965,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date(this.segmentotoedit.fecha_hora_fin).gettime",{"_index":1954,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date(this.segmentotoedit.fecha_hora_inicio",{"_index":1962,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date(this.segmentotoedit.fecha_hora_inicio).gettime",{"_index":1955,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date:'dd/mm/yyyy",{"_index":1979,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["date:\\'dd/mm/yyyy",{"_index":1984,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["datos",{"_index":455,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["day",{"_index":1177,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["daygridplugin",{"_index":271,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["db",{"_index":606,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["dbservice",{"_index":193,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{}}}],["de",{"_index":16,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["debe",{"_index":305,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["decoration",{"_index":580,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{}}}],["decorators",{"_index":243,"title":{},"body":{"components/AgendaComponent.html":{}}}],["deep",{"_index":136,"title":{},"body":{"components/AgendaComponent.html":{}}}],["default",{"_index":268,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["defecto",{"_index":706,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["define",{"_index":1143,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["defined",{"_index":187,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["del",{"_index":220,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["delete",{"_index":584,"title":{},"body":{"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["deletefuncionario",{"_index":1344,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["deletesegmentohorario(id",{"_index":1020,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["deleting",{"_index":385,"title":{},"body":{"components/AgendaComponent.html":{}}}],["demo",{"_index":537,"title":{},"body":{"components/AppComponent.html":{}}}],["dependencies",{"_index":2070,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["derecha",{"_index":2018,"title":{},"body":{"components/ToastComponent.html":{}}}],["derechos",{"_index":1655,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dermatología",{"_index":719,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["descripción",{"_index":1149,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["description",{"_index":10,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["desplaza",{"_index":1609,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["desplazamiento",{"_index":1625,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["desplegable",{"_index":1164,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["después",{"_index":1997,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["destruir",{"_index":459,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["detallados",{"_index":1650,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["dev",{"_index":2106,"title":{},"body":{"index.html":{}}}],["development",{"_index":2103,"title":{},"body":{"index.html":{}}}],["diego",{"_index":778,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["diego.castro@ejemplo.com",{"_index":781,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["diferentes",{"_index":607,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["digit",{"_index":1175,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["direccion",{"_index":671,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["dirección",{"_index":1584,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["direction",{"_index":1217,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["directive",{"_index":397,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["directives",{"_index":423,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2118,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2123,"title":{},"body":{"index.html":{}}}],["display",{"_index":62,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["disponibilidad",{"_index":1241,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{}}}],["disponible",{"_index":679,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"miscellaneous/enumerations.html":{}}}],["disponibles",{"_index":467,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["dist",{"_index":2122,"title":{},"body":{"index.html":{}}}],["document.getelementbyid('features",{"_index":1629,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["documentation",{"_index":2030,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":6,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["domain",{"_index":1566,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["domain.includes",{"_index":1568,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["domain.split",{"_index":1571,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["dominio",{"_index":1476,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["dots",{"_index":1532,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["dropdown",{"_index":1228,"title":{},"body":{"components/DashboardComponent.html":{}}}],["duoc",{"_index":2086,"title":{},"body":{"dependencies.html":{}}}],["duracion",{"_index":683,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["duración",{"_index":1981,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["durante",{"_index":1718,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["duration",{"_index":1016,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["dynamic",{"_index":2076,"title":{},"body":{"dependencies.html":{}}}],["décima",{"_index":876,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["dígitos",{"_index":1902,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["e2e",{"_index":2131,"title":{},"body":{"index.html":{}}}],["e2e8f0",{"_index":103,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["e53e3e",{"_index":549,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["ease",{"_index":57,"title":{},"body":{"components/AgendaComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["ebf8ff",{"_index":129,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{}}}],["edf2f7",{"_index":569,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["edición",{"_index":302,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["editando",{"_index":1947,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["editar",{"_index":386,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["eficiente",{"_index":1645,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["ej",{"_index":1530,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["el",{"_index":199,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{}}}],["electrónico",{"_index":1331,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["element",{"_index":396,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["elemento",{"_index":1145,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["elementos",{"_index":1131,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["elena",{"_index":849,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["elena.santos@ejemplo.com",{"_index":852,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["elimina",{"_index":1355,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["eliminación",{"_index":226,"title":{},"body":{"components/AgendaComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["eliminado",{"_index":1450,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["eliminar",{"_index":229,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["email",{"_index":662,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["email.includes",{"_index":1563,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["email.split",{"_index":1567,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["emaildomainvalidator",{"_index":1466,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["emite",{"_index":1731,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["emitevent",{"_index":1882,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["emitido",{"_index":613,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["en",{"_index":198,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["encontrado",{"_index":1301,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{}}}],["encontraron",{"_index":1327,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["encuentra",{"_index":1003,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["end",{"_index":352,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"index.html":{}}}],["enddate",{"_index":1964,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["enddate.setminutes(enddate.getminutes",{"_index":1966,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["enddate.toisostring",{"_index":1971,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["entrada",{"_index":1489,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["entre",{"_index":1082,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["enum",{"_index":1078,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"miscellaneous/enumerations.html":{}}}],["enumerations",{"_index":2092,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enviado",{"_index":1722,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["enviar",{"_index":1769,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["envío",{"_index":233,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["err",{"_index":519,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["error",{"_index":379,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["error('failed",{"_index":705,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["error('paciente",{"_index":978,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["errormessage",{"_index":1258,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["es",{"_index":289,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["escribe",{"_index":1277,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["escucha",{"_index":196,"title":{},"body":{"components/AgendaComponent.html":{}}}],["esp",{"_index":1825,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["esp.id",{"_index":1408,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["esp.nombre",{"_index":1335,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["esp_especialidad",{"_index":652,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["esp_especialidad(id",{"_index":667,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["esp_especialidad.id",{"_index":922,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["esp_especialidad.nombre",{"_index":919,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["esp_id",{"_index":664,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["espacios",{"_index":1840,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["especialidad",{"_index":472,"title":{"interfaces/Especialidad.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["especialidad.id",{"_index":1060,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["especialidad.nombre",{"_index":1409,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["especialidades",{"_index":441,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["especialidadessubject",{"_index":614,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["especialidadessubscription",{"_index":442,"title":{},"body":{"components/AppComponent.html":{}}}],["específico",{"_index":1028,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["esquina",{"_index":2016,"title":{},"body":{"components/ToastComponent.html":{}}}],["est",{"_index":390,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["esta",{"_index":1244,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["estableciéndolo",{"_index":2003,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["estado",{"_index":682,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{}}}],["estados",{"_index":678,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["este",{"_index":602,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["estructura",{"_index":1144,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["están",{"_index":1798,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["estándar",{"_index":1548,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["etiqueta",{"_index":1148,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["event",{"_index":149,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["event.preventdefault",{"_index":1744,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["event.target",{"_index":1279,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["eventemitter",{"_index":1696,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["eventinput",{"_index":315,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["evento",{"_index":219,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["eventos",{"_index":342,"title":{},"body":{"components/AgendaComponent.html":{}}}],["events",{"_index":346,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["evita",{"_index":525,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["execute",{"_index":2128,"title":{},"body":{"index.html":{}}}],["existe",{"_index":471,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["existente",{"_index":1948,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["existentes",{"_index":1509,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["existingpaciente",{"_index":976,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["existinguser",{"_index":1889,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["exists",{"_index":651,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["exitosamente",{"_index":1307,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["exitoso",{"_index":1182,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["expecteddigit",{"_index":1542,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["expecteddigit.tostring",{"_index":1546,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["expectedverificationdigit",{"_index":1543,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["exponen",{"_index":625,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["export",{"_index":326,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["extendedprops",{"_index":1271,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["extends",{"_index":1242,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["extiende",{"_index":1240,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["f",{"_index":796,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["f0fff4",{"_index":1592,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["f56565",{"_index":586,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["f8fafc",{"_index":125,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{}}}],["failed",{"_index":521,"title":{},"body":{"components/AppComponent.html":{}}}],["falla",{"_index":641,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["false",{"_index":285,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{}}}],["family",{"_index":138,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["favor",{"_index":359,"title":{},"body":{"components/AgendaComponent.html":{},"components/RegisterModalComponent.html":{}}}],["fb",{"_index":1353,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["fc",{"_index":137,"title":{},"body":{"components/AgendaComponent.html":{}}}],["fc8181",{"_index":585,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["feature",{"_index":1673,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["features",{"_index":1672,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["featuressection",{"_index":1628,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["featuressection.scrollintoview",{"_index":1630,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["feb2b2",{"_index":1591,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["fecha",{"_index":211,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["fecha_hora_fin",{"_index":674,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["fecha_hora_inicio",{"_index":673,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["fecha_nacimiento",{"_index":669,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["femenino",{"_index":1582,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["fff5f5",{"_index":1213,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{}}}],["field",{"_index":1413,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["field.dirty",{"_index":1416,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["field.invalid",{"_index":1415,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["field.touched",{"_index":1417,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["fieldname",{"_index":1359,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["file",{"_index":8,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"dependencies.html":{}}}],["files",{"_index":2113,"title":{},"body":{"index.html":{}}}],["fill",{"_index":119,"title":{},"body":{"components/AgendaComponent.html":{}}}],["filteredfuncionarios",{"_index":162,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["filtra",{"_index":246,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{}}}],["filtrada",{"_index":1156,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"interfaces/NavItem.html":{}}}],["filtrados",{"_index":280,"title":{},"body":{"components/AgendaComponent.html":{}}}],["finally",{"_index":1443,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["first",{"_index":972,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"index.html":{}}}],["fit",{"_index":1674,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["fixed",{"_index":1198,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["flex",{"_index":63,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["flores",{"_index":774,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["font",{"_index":77,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["footer",{"_index":1677,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{}}}],["force",{"_index":989,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["foreign",{"_index":665,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["form",{"_index":1317,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formatea",{"_index":1275,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formateado",{"_index":1484,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formatear",{"_index":1483,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formato",{"_index":1427,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formatrut",{"_index":1467,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formatrut(rut",{"_index":1481,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formatting",{"_index":1517,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["formbuilder",{"_index":1351,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["formgroup",{"_index":1379,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["formgroup.get('confirmpassword",{"_index":1832,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["formgroup.get('password",{"_index":1831,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["formsmodule",{"_index":28,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{}}}],["formulario",{"_index":234,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["formularios",{"_index":1794,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["formvalue",{"_index":1435,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["formvalue.apellidos",{"_index":1893,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["formvalue.cupos",{"_index":1967,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["formvalue.email",{"_index":1895,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["formvalue.nombre",{"_index":1969,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["formvalue.nombres",{"_index":1892,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["formvalue.password",{"_index":1852,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formvalue.password.length",{"_index":1853,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["formvalue.password.match(/^(?=.*[a",{"_index":1854,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["formvalue.rut.replace(/\\./g",{"_index":1558,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["formvalue.telefono",{"_index":1894,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["free",{"_index":676,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["fresh",{"_index":990,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["friday",{"_index":900,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["full",{"_index":1225,"title":{},"body":{"components/DashboardComponent.html":{}}}],["fullcalendar/angular",{"_index":317,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"dependencies.html":{}}}],["fullcalendar/core",{"_index":316,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"dependencies.html":{}}}],["fullcalendar/daygrid",{"_index":318,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"dependencies.html":{}}}],["fullcalendar/interaction",{"_index":320,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"dependencies.html":{}}}],["fullcalendar/timegrid",{"_index":319,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"dependencies.html":{}}}],["fullcalendarcomponent",{"_index":263,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["fullcalendarmodule",{"_index":29,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["fun_funcionario",{"_index":657,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["fun_funcionario(id",{"_index":677,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["fun_funcionario.esp_id",{"_index":921,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["fun_funcionario.id",{"_index":953,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["fun_id",{"_index":675,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["funcionalidad",{"_index":1150,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["funcionario",{"_index":123,"title":{"interfaces/Funcionario.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["funcionario.apellidos",{"_index":156,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario.apellidos.tolowercase().includes(searchtermlower",{"_index":335,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["funcionario.email",{"_index":963,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario.esp_id",{"_index":965,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario.especialidad",{"_index":157,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario.especialidad?.tolowercase().includes(searchtermlower",{"_index":336,"title":{},"body":{"components/AgendaComponent.html":{}}}],["funcionario.id",{"_index":1757,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["funcionario.nombres",{"_index":155,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario.nombres.tolowercase().includes(searchtermlower",{"_index":334,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["funcionario.password",{"_index":964,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario.rut",{"_index":961,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario.telefono",{"_index":962,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionario[field",{"_index":1066,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionarioform",{"_index":1343,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["funcionarioid",{"_index":240,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["funcionarios",{"_index":18,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["funcionarios'},{'name",{"_index":408,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["funcionarios.map(f",{"_index":1260,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["funcionarios.map(funcionario",{"_index":1400,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["funcionarioscomponent",{"_index":407,"title":{"components/FuncionariosComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["funcionariossubject",{"_index":616,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["funcionariossubscription",{"_index":443,"title":{},"body":{"components/AppComponent.html":{}}}],["funcionariowithavailability",{"_index":1238,"title":{"interfaces/FuncionarioWithAvailability.html":{}},"body":{"interfaces/FuncionarioWithAvailability.html":{},"coverage.html":{}}}],["funid",{"_index":966,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["further",{"_index":2138,"title":{},"body":{"index.html":{}}}],["g",{"_index":1281,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["gap",{"_index":122,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["garcía",{"_index":748,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["genera",{"_index":1648,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["generado",{"_index":1714,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["general",{"_index":885,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["generate",{"_index":2116,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2098,"title":{},"body":{"index.html":{}}}],["generatedcode",{"_index":1682,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["genero",{"_index":670,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["gestiona",{"_index":603,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["gestionar",{"_index":324,"title":{},"body":{"components/AgendaComponent.html":{}}}],["gestión",{"_index":494,"title":{},"body":{"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["getauthorizednavitems",{"_index":1137,"title":{},"body":{"components/DashboardComponent.html":{}}}],["geterrormessage",{"_index":1345,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["geterrormessage('apellidos",{"_index":1329,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage('email",{"_index":1332,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage('esp_id",{"_index":1336,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["geterrormessage('nombres",{"_index":1328,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage('password",{"_index":1338,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage('telefono",{"_index":1334,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage(\\'apellidos",{"_index":1454,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage(\\'email",{"_index":1455,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage(\\'esp_id",{"_index":1457,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["geterrormessage(\\'nombres",{"_index":1453,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage(\\'password",{"_index":1458,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage(\\'telefono",{"_index":1456,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["geterrormessage(fieldname",{"_index":1356,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["getespecialidadbyname(nombre",{"_index":1056,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["getespecialidadnombre",{"_index":1346,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["getespecialidadnombre(esp_id",{"_index":1362,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["getfuncionariobyemail(email",{"_index":954,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["getfuncionariobyid(id",{"_index":952,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["getfuncionariobyname(name",{"_index":950,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["getfuncionariobyrut(rut",{"_index":1039,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["getpacientebyrut(rut",{"_index":1004,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["getsegmentohorariobyid(id",{"_index":1022,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["getting",{"_index":2094,"title":{"index.html":{}},"body":{}}],["getuserfullname",{"_index":1096,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["getuserinitials",{"_index":1097,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["getuserspecialty",{"_index":1098,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["globales",{"_index":495,"title":{},"body":{"components/AppComponent.html":{}}}],["go",{"_index":2141,"title":{},"body":{"index.html":{}}}],["gonzález",{"_index":723,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["gradient(135deg",{"_index":1663,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["grid",{"_index":115,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["group",{"_index":1318,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["group.full",{"_index":1906,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["guard",{"_index":1907,"title":{"guards/RoleGuard.html":{}},"body":{"coverage.html":{},"overview.html":{}}}],["guardado",{"_index":1441,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["guardando",{"_index":1341,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{}}}],["guardar",{"_index":235,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["guardia",{"_index":1911,"title":{},"body":{"guards/RoleGuard.html":{}}}],["guards",{"_index":1909,"title":{},"body":{"guards/RoleGuard.html":{}}}],["guión",{"_index":1002,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["género",{"_index":1580,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["h1",{"_index":545,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["h2",{"_index":74,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["h3",{"_index":130,"title":{},"body":{"components/AgendaComponent.html":{},"components/LandingPageComponent.html":{}}}],["ha",{"_index":1367,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["hacia",{"_index":1627,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["hack",{"_index":968,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["handledateselect",{"_index":171,"title":{},"body":{"components/AgendaComponent.html":{}}}],["handledateselect(selectinfo",{"_index":207,"title":{},"body":{"components/AgendaComponent.html":{}}}],["handleeventclick",{"_index":172,"title":{},"body":{"components/AgendaComponent.html":{}}}],["handleeventclick(clickinfo",{"_index":215,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["handlerecovery",{"_index":1690,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["handlerecovery(event",{"_index":1703,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["handlesegmentodelete",{"_index":173,"title":{},"body":{"components/AgendaComponent.html":{}}}],["handlesegmentodelete(id",{"_index":223,"title":{},"body":{"components/AgendaComponent.html":{}}}],["handlesegmentosubmit",{"_index":174,"title":{},"body":{"components/AgendaComponent.html":{}}}],["handlesegmentosubmit(segmento",{"_index":230,"title":{},"body":{"components/AgendaComponent.html":{}}}],["handlesubmit",{"_index":1691,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["handlesubmit(event",{"_index":1705,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["hasavailablesegments",{"_index":1243,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["hasrole",{"_index":1929,"title":{},"body":{"guards/RoleGuard.html":{}}}],["hasrole(funid",{"_index":1032,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["hay",{"_index":1254,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["header",{"_index":61,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["height",{"_index":93,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["help",{"_index":2139,"title":{},"body":{"index.html":{}}}],["hero",{"_index":1661,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["hh:mm",{"_index":1980,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["hidden",{"_index":96,"title":{},"body":{"components/AgendaComponent.html":{}}}],["hide",{"_index":2004,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["hora",{"_index":1977,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["horario",{"_index":369,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["horarios",{"_index":239,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["hospital",{"_index":477,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["host",{"_index":134,"title":{},"body":{"components/AgendaComponent.html":{}}}],["hostlistener",{"_index":309,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["hostlistener('window:resize",{"_index":244,"title":{},"body":{"components/AgendaComponent.html":{}}}],["hostlisteners",{"_index":182,"title":{},"body":{"components/AgendaComponent.html":{}}}],["hour",{"_index":1174,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["hs",{"_index":1189,"title":{},"body":{"components/DashboardComponent.html":{}}}],["html",{"_index":395,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["http://localhost:4200",{"_index":2108,"title":{},"body":{"index.html":{}}}],["https://sql.js.org/dist/${file",{"_index":645,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["icon",{"_index":1125,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["id",{"_index":228,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["identifier",{"_index":2031,"title":{},"body":{"coverage.html":{}}}],["ignore",{"_index":906,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["implements",{"_index":19,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["import",{"_index":308,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["important",{"_index":143,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["imports",{"_index":26,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["incorrectos",{"_index":1711,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["index",{"_index":158,"title":{"index.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["indica",{"_index":287,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["indicando",{"_index":1031,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["inferior",{"_index":2017,"title":{},"body":{"components/ToastComponent.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["información",{"_index":214,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{}}}],["informes",{"_index":1649,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["ingresado",{"_index":1498,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["ingrese",{"_index":1296,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["inherit",{"_index":139,"title":{},"body":{"components/AgendaComponent.html":{}}}],["inicia",{"_index":1710,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["iniciales",{"_index":514,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["inicializa",{"_index":242,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["inicialización",{"_index":493,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["iniciando",{"_index":1766,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["iniciar",{"_index":1633,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{}}}],["inicie",{"_index":1898,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["inicio",{"_index":1168,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/SegmentoModalComponent.html":{}}}],["initialize",{"_index":522,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["initializedatabase",{"_index":642,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["initialview",{"_index":274,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["initsqljs",{"_index":596,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["injectable",{"_index":595,"title":{"injectables/ToastService.html":{}},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["injectables",{"_index":2023,"title":{},"body":{"injectables/ToastService.html":{},"overview.html":{}}}],["inline",{"_index":1226,"title":{},"body":{"components/DashboardComponent.html":{}}}],["input",{"_index":99,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["input.error",{"_index":1319,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{}}}],["input.value",{"_index":1288,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{}}}],["input.value.replace(/\\./g",{"_index":1280,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["input:checked",{"_index":571,"title":{},"body":{"components/AppComponent.html":{}}}],["input:focus",{"_index":106,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["inputs",{"_index":1792,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["inscripcion",{"_index":1124,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{}}}],["inscripcion'},{'name",{"_index":410,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["inscripcion.component.css",{"_index":1463,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["inscripcion.component.html",{"_index":1464,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["inscripcioncomponent",{"_index":409,"title":{"components/InscripcionComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["inscripción",{"_index":1127,"title":{},"body":{"components/DashboardComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{}}}],["insert",{"_index":714,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["integer",{"_index":653,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["integral",{"_index":1635,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["intente",{"_index":1900,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["intento",{"_index":1707,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["interactionplugin",{"_index":273,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["interface",{"_index":587,"title":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{}},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["interfaces",{"_index":588,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"overview.html":{}}}],["interfaz",{"_index":590,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["invaliddomain",{"_index":1569,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["invalidemail",{"_index":1564,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["invalidrut",{"_index":1523,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["inválido",{"_index":1366,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["isabel",{"_index":768,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["isabel.ramirez@ejemplo.com",{"_index":771,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["iseditmode",{"_index":1934,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["isfieldinvalid",{"_index":1347,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["isfieldinvalid(fieldname",{"_index":1364,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["isloading",{"_index":1340,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["isrecovering",{"_index":1683,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["issmallscreen",{"_index":163,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["item",{"_index":557,"title":{},"body":{"components/AppComponent.html":{}}}],["item.icon",{"_index":1190,"title":{},"body":{"components/DashboardComponent.html":{}}}],["item.label",{"_index":1191,"title":{},"body":{"components/DashboardComponent.html":{}}}],["item.requiredrole",{"_index":1159,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["item:last",{"_index":558,"title":{},"body":{"components/AppComponent.html":{}}}],["items",{"_index":69,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["join",{"_index":920,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["jorge",{"_index":859,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["jorge.cruz@ejemplo.com",{"_index":862,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["jos",{"_index":729,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["jose.rodriguez@ejemplo.com",{"_index":732,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["json.parse(localstorage.getitem('currentuser",{"_index":1119,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{}}}],["json.stringify(updateduser",{"_index":1858,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["json.stringify(userdata",{"_index":1759,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["juan",{"_index":753,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["juan.sanchez@ejemplo.com",{"_index":756,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["justify",{"_index":64,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["k",{"_index":1545,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["karma",{"_index":2130,"title":{},"body":{"index.html":{}}}],["key",{"_index":654,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["keyframes",{"_index":1777,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["keyof",{"_index":1064,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["la",{"_index":14,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/variables.html":{}}}],["label",{"_index":1126,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["landing",{"_index":412,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["landingpagecomponent",{"_index":411,"title":{"components/LandingPageComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["las",{"_index":457,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["laura",{"_index":758,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["laura.perez@ejemplo.com",{"_index":761,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["leaks",{"_index":527,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["left",{"_index":91,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["legend",{"_index":394,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["limpia",{"_index":388,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["line",{"_index":581,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["linear",{"_index":1662,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["link",{"_index":1205,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{}}}],["link.active",{"_index":1207,"title":{},"body":{"components/DashboardComponent.html":{}}}],["link:hover",{"_index":1206,"title":{},"body":{"components/DashboardComponent.html":{}}}],["links",{"_index":1658,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["list",{"_index":114,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{}}}],["lista",{"_index":279,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["load",{"_index":991,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loadcitas",{"_index":941,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loadcupos",{"_index":939,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loadfuncionarios",{"_index":916,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loading",{"_index":444,"title":{},"body":{"components/AppComponent.html":{}}}],["loadpacientes",{"_index":930,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loadroles",{"_index":943,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loadrolesfuncionario",{"_index":945,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loadsegmentos(funcionarioid",{"_index":1268,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["loadsegmentoshorario",{"_index":937,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["loadshifts",{"_index":175,"title":{},"body":{"components/AgendaComponent.html":{}}}],["loadshifts(funcionarioid",{"_index":236,"title":{},"body":{"components/AgendaComponent.html":{}}}],["localpart",{"_index":1565,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["localstorage",{"_index":1166,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["localstorage.removeitem('currentuser",{"_index":1169,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["localstorage.setitem('currentuser",{"_index":1758,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{}}}],["locatefile",{"_index":644,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["login",{"_index":415,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["loginmodalcomponent",{"_index":414,"title":{"components/LoginModalComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["logo",{"_index":1657,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["logout",{"_index":1099,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["los",{"_index":17,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["ltimo",{"_index":611,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["lucia.morales@ejemplo.com",{"_index":792,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["lucía",{"_index":789,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["luis",{"_index":741,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["luis.martinez@ejemplo.com",{"_index":744,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["lópez",{"_index":736,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["m",{"_index":785,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["main",{"_index":1197,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["maneja",{"_index":13,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["manera",{"_index":1644,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["mantener",{"_index":610,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["mantiene",{"_index":1989,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["marca",{"_index":1050,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["margin",{"_index":36,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["maria.gonzalez@ejemplo.com",{"_index":726,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["martínez",{"_index":742,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["maría",{"_index":722,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["masculino",{"_index":1581,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["mask",{"_index":1506,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"dependencies.html":{}}}],["matching",{"_index":426,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["math.random().tostring(36).substring(2",{"_index":1747,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["max",{"_index":33,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["mayúscula",{"_index":1843,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["media",{"_index":1215,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["memory",{"_index":526,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["men",{"_index":1118,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["mendoza",{"_index":832,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["menos",{"_index":1842,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["mensaje",{"_index":470,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["mensajes",{"_index":1290,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["menu",{"_index":1208,"title":{},"body":{"components/DashboardComponent.html":{}}}],["message",{"_index":1321,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["metadata",{"_index":21,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["methods",{"_index":168,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["mientras",{"_index":1276,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["miguel",{"_index":773,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["miguel.flores@ejemplo.com",{"_index":776,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["min",{"_index":1195,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["minmax(250px",{"_index":120,"title":{},"body":{"components/AgendaComponent.html":{},"components/LandingPageComponent.html":{}}}],["minute",{"_index":1176,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["minutos",{"_index":1079,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["minúscula",{"_index":1844,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["miscellaneous",{"_index":2091,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["mobile",{"_index":1229,"title":{},"body":{"components/DashboardComponent.html":{}}}],["modal",{"_index":307,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal'},{'name",{"_index":416,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["modal.component",{"_index":322,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["modal.component.css",{"_index":1680,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.html",{"_index":1681,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts",{"_index":1679,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["modal.component.ts:103",{"_index":1869,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:121",{"_index":1870,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:134",{"_index":1868,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:143",{"_index":1865,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:151",{"_index":1708,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["modal.component.ts:170",{"_index":1706,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:19",{"_index":1940,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:198",{"_index":1866,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:21",{"_index":1697,"title":{},"body":{"components/LoginModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:225",{"_index":1867,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:23",{"_index":1864,"title":{},"body":{"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:24",{"_index":1726,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:25",{"_index":1941,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:26",{"_index":1719,"title":{},"body":{"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["modal.component.ts:27",{"_index":1942,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:28",{"_index":1877,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:29",{"_index":1716,"title":{},"body":{"components/LoginModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:290",{"_index":1796,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:292",{"_index":1800,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:295",{"_index":1811,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:297",{"_index":1810,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:299",{"_index":1793,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:30",{"_index":1876,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:31",{"_index":1725,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:32",{"_index":1875,"title":{},"body":{"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:33",{"_index":1720,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:336",{"_index":1804,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:34",{"_index":1863,"title":{},"body":{"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:35",{"_index":1721,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:351",{"_index":1806,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:37",{"_index":1723,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:374",{"_index":1803,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:384",{"_index":1802,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:39",{"_index":1717,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:407",{"_index":1801,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:41",{"_index":1712,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:415",{"_index":1805,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modal.component.ts:44",{"_index":1727,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:46",{"_index":1715,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:47",{"_index":1944,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:48",{"_index":1695,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:60",{"_index":1702,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:64",{"_index":1943,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:67",{"_index":1874,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:68",{"_index":1709,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:72",{"_index":1945,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:78",{"_index":1698,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal.component.ts:83",{"_index":1946,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["modal.component.ts:90",{"_index":1873,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["modal.component.ts:94",{"_index":1704,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["modal/login",{"_index":1617,"title":{},"body":{"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"coverage.html":{}}}],["modal/profile",{"_index":1142,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"coverage.html":{}}}],["modal/register",{"_index":1619,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{},"coverage.html":{}}}],["modal/segmento",{"_index":321,"title":{},"body":{"components/AgendaComponent.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["modales",{"_index":1620,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["modificación",{"_index":1785,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modificando",{"_index":1799,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["modificar",{"_index":1192,"title":{},"body":{"components/DashboardComponent.html":{},"components/ProfileModalComponent.html":{}}}],["modo",{"_index":1428,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["modules",{"_index":2144,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["monday",{"_index":883,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["month",{"_index":1178,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["morales",{"_index":790,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["more",{"_index":2140,"title":{},"body":{"index.html":{}}}],["mostrando",{"_index":2015,"title":{},"body":{"components/ToastComponent.html":{}}}],["mostrar",{"_index":306,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["muestra",{"_index":1153,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["multiplier",{"_index":1539,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["más",{"_index":1641,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["máximo",{"_index":1975,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["médica",{"_index":592,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["médicas",{"_index":463,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["médico",{"_index":1646,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["médicos",{"_index":1637,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["mínimo",{"_index":1422,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["nacimiento",{"_index":1578,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["name",{"_index":190,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["nav",{"_index":1204,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{}}}],["navegación",{"_index":1132,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["navigate",{"_index":2107,"title":{},"body":{"index.html":{}}}],["navitem",{"_index":1122,"title":{"interfaces/NavItem.html":{}},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"coverage.html":{}}}],["navitems",{"_index":1092,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["necesarias",{"_index":638,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["necesarios",{"_index":1525,"title":{},"body":{"components/InscripcionComponent.html":{},"guards/RoleGuard.html":{}}}],["need",{"_index":2135,"title":{},"body":{"index.html":{}}}],["neurología",{"_index":717,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["new",{"_index":615,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"coverage.html":{},"index.html":{}}}],["newespecialidadtitle",{"_index":445,"title":{},"body":{"components/AppComponent.html":{}}}],["newfuncionario",{"_index":1067,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["newfuncionario.password",{"_index":1068,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["newfuncionario.password.length",{"_index":1069,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["newpassword",{"_index":1055,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["ng",{"_index":135,"title":{},"body":{"components/AgendaComponent.html":{},"index.html":{}}}],["ngondestroy",{"_index":450,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["ngoninit",{"_index":176,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["ngx",{"_index":1505,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"dependencies.html":{}}}],["ngxmaskdirective",{"_index":1462,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["ni",{"_index":1001,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["nombre",{"_index":656,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["nombres",{"_index":658,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["none",{"_index":87,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["notificaciones",{"_index":1472,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["nov",{"_index":880,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["novena",{"_index":866,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["now",{"_index":1170,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["now.tolocalestring('es",{"_index":1172,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["nueva",{"_index":483,"title":{},"body":{"components/AppComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{}}}],["nuevamente",{"_index":1901,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["nuevo",{"_index":298,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["nuevos",{"_index":1508,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["nuevospacientes",{"_index":970,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["null",{"_index":295,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["number",{"_index":224,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["numbers",{"_index":1537,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["numbers.length",{"_index":1540,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["numeric",{"_index":1180,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["número",{"_index":1845,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["o",{"_index":368,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["object.keys(this.funcionarioform.controls).foreach(key",{"_index":1430,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["object.keys(this.pacienteform.controls).foreach(key",{"_index":1555,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["object.keys(this.profileform.controls).foreach(key",{"_index":1848,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["objeto",{"_index":956,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["observable",{"_index":599,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["observables",{"_index":475,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["obtiene",{"_index":997,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["octava",{"_index":856,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["oculta",{"_index":1163,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["ocultar",{"_index":1995,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["ocupado",{"_index":680,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"miscellaneous/enumerations.html":{}}}],["oldfuncionario",{"_index":1061,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["oldfuncionario.password",{"_index":1071,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["olvidaste",{"_index":1764,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["oncología",{"_index":720,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["ondelete",{"_index":1936,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["ondestroy",{"_index":430,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["oninit",{"_index":20,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["onresize",{"_index":177,"title":{},"body":{"components/AgendaComponent.html":{}}}],["onrutinput",{"_index":1468,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["onrutinput(event",{"_index":1278,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["onsubmit",{"_index":1348,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["opacity",{"_index":98,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["opcional",{"_index":1786,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["openprofilemodal",{"_index":1100,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["operaciones",{"_index":600,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["operación",{"_index":1384,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["optional",{"_index":192,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["ortega",{"_index":812,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["otro",{"_index":1583,"title":{},"body":{"components/InscripcionComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["out",{"_index":1776,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{},"index.html":{}}}],["outline",{"_index":107,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["output",{"_index":1728,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["outputs",{"_index":1693,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["overflow",{"_index":95,"title":{},"body":{"components/AgendaComponent.html":{},"components/RegisterModalComponent.html":{}}}],["overview",{"_index":2142,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":132,"title":{},"body":{"components/AgendaComponent.html":{},"components/LandingPageComponent.html":{}}}],["p.rut",{"_index":1007,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pac_id",{"_index":594,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pac_paciente",{"_index":668,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pac_paciente(id",{"_index":688,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pacid",{"_index":1048,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente",{"_index":484,"title":{"interfaces/Paciente.html":{}},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["paciente.apellidos",{"_index":981,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.direccion",{"_index":988,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.email",{"_index":985,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.fecha_nacimiento",{"_index":986,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.genero",{"_index":987,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.id",{"_index":994,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.nombres",{"_index":980,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.rut.replace(/\\./g",{"_index":982,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["paciente.telefono",{"_index":984,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pacienteform",{"_index":1465,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["pacienteform.get('id')?.value",{"_index":1575,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["pacienteform.get(\\'id\\')?.value",{"_index":1595,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["pacientes",{"_index":446,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pacientessubject",{"_index":617,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pacientessubscription",{"_index":447,"title":{},"body":{"components/AppComponent.html":{}}}],["package",{"_index":2069,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":39,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["page",{"_index":1600,"title":{},"body":{"components/LandingPageComponent.html":{},"index.html":{}}}],["page'},{'name",{"_index":413,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["page.component.css",{"_index":1601,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.html",{"_index":1602,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts",{"_index":1598,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["page.component.ts:19",{"_index":1614,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:21",{"_index":1615,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:27",{"_index":1611,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:36",{"_index":1612,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page.component.ts:45",{"_index":1608,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["page/landing",{"_index":1597,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["panel",{"_index":1085,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["pantalla",{"_index":204,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["para",{"_index":293,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["param",{"_index":337,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["parameters",{"_index":189,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["parseint(formvalue.esp_id",{"_index":1438,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/RegisterModalComponent.html":{}}}],["parseint(numbers[i",{"_index":1541,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["parts",{"_index":1570,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["parts[parts.length",{"_index":1573,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["pasos",{"_index":1741,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["password",{"_index":663,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["password?.value",{"_index":1833,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["passwordmatchvalidator",{"_index":1791,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["passwordmismatch",{"_index":1808,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["path",{"_index":1123,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["patient",{"_index":974,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["patients",{"_index":992,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pediatría",{"_index":718,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pedro",{"_index":821,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pedro.ramos@ejemplo.com",{"_index":824,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["pequeña",{"_index":290,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["perfil",{"_index":1193,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/ProfileModalComponent.html":{}}}],["permisos",{"_index":1133,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["permite",{"_index":323,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["permiten",{"_index":1839,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["personal",{"_index":1812,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["personalizado",{"_index":1475,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["pertenece",{"_index":1939,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["platform",{"_index":2132,"title":{},"body":{"index.html":{}}}],["plugins",{"_index":270,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["pointer",{"_index":72,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["por",{"_index":281,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["position",{"_index":561,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["primary",{"_index":145,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["primary:hover",{"_index":147,"title":{},"body":{"components/AgendaComponent.html":{},"components/LandingPageComponent.html":{}}}],["primero",{"_index":361,"title":{},"body":{"components/AgendaComponent.html":{}}}],["principal",{"_index":428,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["principales",{"_index":1642,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["private",{"_index":169,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["procesa",{"_index":1886,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["procesando",{"_index":1767,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["proceso",{"_index":1700,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["profile",{"_index":418,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["profileform",{"_index":1790,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["profilemodalcomponent",{"_index":417,"title":{"components/ProfileModalComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["programa",{"_index":1643,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["project",{"_index":2097,"title":{},"body":{"index.html":{}}}],["promise",{"_index":639,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["properties",{"_index":159,"title":{"properties.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"properties.html":{}}}],["protege",{"_index":1912,"title":{},"body":{"guards/RoleGuard.html":{}}}],["providedin",{"_index":605,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["providengxmask",{"_index":1461,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["providerouter(routes",{"_index":2149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["providers",{"_index":1460,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"miscellaneous/variables.html":{}}}],["próximas",{"_index":1653,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["public",{"_index":915,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["puede",{"_index":1922,"title":{},"body":{"guards/RoleGuard.html":{}}}],["puntos",{"_index":1000,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["página",{"_index":1599,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["pérez",{"_index":759,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["público",{"_index":1992,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["públicos",{"_index":624,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["que",{"_index":12,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{}}}],["quinta",{"_index":828,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["r",{"_index":1033,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["r.id",{"_index":1035,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["r.nombre",{"_index":1038,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["radius",{"_index":47,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["ramos",{"_index":822,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["ramírez",{"_index":769,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["reactiveformsmodule",{"_index":1316,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["reactivo",{"_index":1381,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["reactivos",{"_index":1795,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["realiza",{"_index":1624,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["recordatorios",{"_index":1652,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["recovery",{"_index":1781,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["recoverycode",{"_index":1684,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["recoverycodesent",{"_index":1685,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["recoverycodeverified",{"_index":1686,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["recoveryrut",{"_index":1687,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["recuperación",{"_index":1701,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["recuperar",{"_index":1730,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["redirige",{"_index":1167,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["reference",{"_index":2143,"title":{},"body":{"index.html":{}}}],["references",{"_index":666,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["referencia",{"_index":266,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["register",{"_index":420,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["registerform",{"_index":1862,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["registermodalcomponent",{"_index":419,"title":{"components/RegisterModalComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["registrado",{"_index":1891,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["registrados",{"_index":486,"title":{},"body":{"components/AppComponent.html":{}}}],["registrando",{"_index":1903,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["registrar",{"_index":1507,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["registrarse",{"_index":1634,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["registro",{"_index":1613,"title":{},"body":{"components/LandingPageComponent.html":{},"components/RegisterModalComponent.html":{}}}],["reinicia",{"_index":1373,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{}}}],["relación",{"_index":1081,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["relative",{"_index":562,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["reload",{"_index":2111,"title":{},"body":{"index.html":{}}}],["remove",{"_index":1516,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["repeat(2",{"_index":1905,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["repeat(auto",{"_index":118,"title":{},"body":{"components/AgendaComponent.html":{},"components/LandingPageComponent.html":{}}}],["replace",{"_index":983,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["reportes",{"_index":1647,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["representa",{"_index":591,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"miscellaneous/enumerations.html":{}}}],["requerida",{"_index":1579,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["requerido",{"_index":1151,"title":{},"body":{"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{}}}],["requeridos",{"_index":1577,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["requiredrole",{"_index":1128,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["reservados",{"_index":1656,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["reset",{"_index":1586,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["resetform",{"_index":1349,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["result",{"_index":917,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result.length",{"_index":923,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values.length",{"_index":949,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values.map((row",{"_index":932,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0",{"_index":951,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][0",{"_index":967,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][1",{"_index":1040,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][2",{"_index":1041,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][3",{"_index":1042,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][4",{"_index":1043,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][5",{"_index":1044,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][6",{"_index":1045,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][7",{"_index":1046,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["result[0].values[0][8",{"_index":1047,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["results",{"_index":425,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":363,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["returns",{"_index":205,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["reyes",{"_index":870,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rf",{"_index":1034,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rf.fun_id",{"_index":1037,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rf.rol_id",{"_index":1036,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rgba(0",{"_index":556,"title":{},"body":{"components/AppComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rgba(0,0,0,0.1",{"_index":54,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{}}}],["rgba(66",{"_index":110,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["right",{"_index":1199,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ToastComponent.html":{}}}],["rl_rol_fun",{"_index":691,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rodríguez",{"_index":730,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rol",{"_index":907,"title":{"interfaces/Rol.html":{}},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["rol_id",{"_index":692,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rol_roles",{"_index":689,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rol_roles(id",{"_index":693,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["role",{"_index":910,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["roleguard",{"_index":1908,"title":{"guards/RoleGuard.html":{}},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["roles",{"_index":633,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["roles.foreach(rol",{"_index":904,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rolesfuncionario",{"_index":635,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rolesfuncionariosubject",{"_index":622,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rolessubject",{"_index":621,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rolfuncionario",{"_index":1083,"title":{"interfaces/RolFuncionario.html":{}},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["rolnombre",{"_index":1029,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["root",{"_index":431,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["root'},{'name",{"_index":402,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["rotate(45deg",{"_index":577,"title":{},"body":{"components/AppComponent.html":{}}}],["route",{"_index":1924,"title":{},"body":{"guards/RoleGuard.html":{}}}],["route.data['requiredrole",{"_index":1927,"title":{},"body":{"guards/RoleGuard.html":{}}}],["router",{"_index":1105,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{}}}],["routerlink",{"_index":1087,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["routermodule",{"_index":432,"title":{},"body":{"components/AppComponent.html":{}}}],["routeroutlet",{"_index":1088,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["routerstatesnapshot",{"_index":1920,"title":{},"body":{"guards/RoleGuard.html":{}}}],["row",{"_index":1008,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[0",{"_index":912,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[1",{"_index":913,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[2",{"_index":925,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[3",{"_index":926,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[4",{"_index":927,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[5",{"_index":928,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[6",{"_index":933,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[7",{"_index":934,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["row[8",{"_index":929,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["run",{"_index":712,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"index.html":{}}}],["running",{"_index":2124,"title":{},"body":{"index.html":{}}}],["rut",{"_index":660,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rut.length",{"_index":1284,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rut.replace(/[^0",{"_index":1282,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rut.replace(/\\./g",{"_index":1005,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["rut.slice",{"_index":1287,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rut.slice(0",{"_index":1285,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["ruta",{"_index":1146,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["rutas",{"_index":1913,"title":{},"body":{"guards/RoleGuard.html":{}}}],["rutvalidator",{"_index":1469,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["rxjs",{"_index":492,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"dependencies.html":{}}}],["saber",{"_index":1640,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["sans",{"_index":543,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["santos",{"_index":850,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["saving",{"_index":381,"title":{},"body":{"components/AgendaComponent.html":{},"components/InscripcionComponent.html":{}}}],["scaffolding",{"_index":2115,"title":{},"body":{"index.html":{}}}],["scheduler",{"_index":604,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["script",{"_index":713,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["scrolltofeatures",{"_index":1605,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["se",{"_index":304,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["search",{"_index":41,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["searchfuncionarios",{"_index":178,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{}}}],["searchpaciente",{"_index":1292,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["searchrut",{"_index":1251,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["searchterm",{"_index":164,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["searchtermlower",{"_index":1404,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["sección",{"_index":259,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{}}}],["secondary",{"_index":1670,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["secondary:hover",{"_index":1671,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["section",{"_index":42,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["section.collapsed",{"_index":58,"title":{},"body":{"components/AgendaComponent.html":{}}}],["secundaria",{"_index":798,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["seed",{"_index":878,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["seeddatabase",{"_index":710,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["seeding",{"_index":909,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["seedroles",{"_index":903,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmento",{"_index":227,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["segmento.fecha_hora_fin",{"_index":353,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["segmento.fecha_hora_inicio",{"_index":351,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["segmento.free",{"_index":1265,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["segmento.fun_id",{"_index":354,"title":{},"body":{"components/AgendaComponent.html":{}}}],["segmento.id",{"_index":371,"title":{},"body":{"components/AgendaComponent.html":{}}}],["segmento.id.tostring",{"_index":348,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["segmento.nombre",{"_index":349,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["segmentodate",{"_index":1263,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["segmentoform",{"_index":1935,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["segmentoform.get('cupos')?.value",{"_index":1983,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["segmentoform.get(\\'cupos\\')?.value",{"_index":1985,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["segmentohorario",{"_index":231,"title":{"interfaces/SegmentoHorario.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["segmentohorario.fecha_hora_fin",{"_index":1012,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentohorario.fecha_hora_inicio",{"_index":1011,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentohorario.free",{"_index":1015,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentohorario.fun_id",{"_index":1013,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentohorario.id",{"_index":1024,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentohorario.nombre",{"_index":1010,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentomodalcomponent",{"_index":30,"title":{"components/SegmentoModalComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["segmentos",{"_index":344,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["segmentos.map(segmento",{"_index":347,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["segmentoshorario",{"_index":448,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentoshorariosubject",{"_index":618,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["segmentoshorariosubscription",{"_index":449,"title":{},"body":{"components/AppComponent.html":{}}}],["segmentotoedit",{"_index":1937,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["segmentotoedit.fecha_hora_inicio",{"_index":1978,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["segoe",{"_index":539,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["segundos",{"_index":1998,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["seguro",{"_index":1448,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["según",{"_index":247,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/NavItem.html":{}}}],["selecciona",{"_index":252,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["seleccionada",{"_index":297,"title":{},"body":{"components/AgendaComponent.html":{}}}],["seleccionado",{"_index":255,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["seleccionar",{"_index":153,"title":{},"body":{"components/AgendaComponent.html":{}}}],["seleccione",{"_index":360,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["selecciones",{"_index":1312,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["selección",{"_index":209,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["select",{"_index":565,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["select.error",{"_index":1320,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["select:focus",{"_index":1588,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["selecteddate",{"_index":165,"title":{},"body":{"components/AgendaComponent.html":{}}}],["selectedfuncionario",{"_index":150,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["selectedfuncionario.apellidos",{"_index":152,"title":{},"body":{"components/AgendaComponent.html":{}}}],["selectedfuncionario.especialidad",{"_index":154,"title":{},"body":{"components/AgendaComponent.html":{}}}],["selectedfuncionario.nombres",{"_index":151,"title":{},"body":{"components/AgendaComponent.html":{}}}],["selectedpaciente",{"_index":1252,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["selectedsegmento",{"_index":166,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["selectfuncionario",{"_index":179,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{}}}],["selectfuncionario(funcionario",{"_index":250,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["selectinfo",{"_index":213,"title":{},"body":{"components/AgendaComponent.html":{}}}],["selectinfo.start",{"_index":365,"title":{},"body":{"components/AgendaComponent.html":{}}}],["selectinfo.view.calendar.unselect",{"_index":362,"title":{},"body":{"components/AgendaComponent.html":{}}}],["selector",{"_index":22,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["semana",{"_index":1245,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["serif",{"_index":544,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["serve",{"_index":2105,"title":{},"body":{"index.html":{}}}],["server",{"_index":2104,"title":{},"body":{"index.html":{}}}],["services/database.service",{"_index":314,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{},"components/SegmentoModalComponent.html":{}}}],["services/toast.service",{"_index":1140,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["servicio",{"_index":453,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/InscripcionComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["sesión",{"_index":1115,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{}}}],["set",{"_index":1026,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["settimeout",{"_index":340,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["sexta",{"_index":838,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sgh_id",{"_index":684,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sgh_segmento_horario",{"_index":672,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sgh_segmento_horario(id",{"_index":685,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sghid",{"_index":1049,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["shadow",{"_index":51,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["short",{"_index":1223,"title":{},"body":{"components/DashboardComponent.html":{}}}],["show",{"_index":2024,"title":{},"body":{"injectables/ToastService.html":{}}}],["show(message",{"_index":1999,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["showassignmodal",{"_index":1253,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["showerror",{"_index":1255,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["showloginmodal",{"_index":1603,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["showprofilemodal",{"_index":1093,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["showregistermodal",{"_index":1604,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["showsegmentomodal",{"_index":167,"title":{},"body":{"components/AgendaComponent.html":{}}}],["showsuccess",{"_index":1257,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["showusermenu",{"_index":1094,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["si",{"_index":288,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["sido",{"_index":1368,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["silva",{"_index":842,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sin",{"_index":999,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sistema",{"_index":1392,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["size",{"_index":78,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["slidein",{"_index":1775,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["smooth",{"_index":1632,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["sofia.ortega@ejemplo.com",{"_index":814,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sofía",{"_index":811,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["solicita",{"_index":1444,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["solicitada",{"_index":1923,"title":{},"body":{"guards/RoleGuard.html":{}}}],["solid",{"_index":102,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["solo",{"_index":1077,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["son",{"_index":1576,"title":{},"body":{"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"index.html":{}}}],["space",{"_index":66,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["spaces",{"_index":1816,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["speciality",{"_index":1236,"title":{},"body":{"components/DashboardComponent.html":{}}}],["specialty",{"_index":82,"title":{},"body":{"components/AgendaComponent.html":{}}}],["sql",{"_index":643,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sql.database",{"_index":647,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["sql.js",{"_index":597,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"dependencies.html":{}}}],["sqlite",{"_index":536,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["src/.../app.config.ts",{"_index":2147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.service.ts",{"_index":2093,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app/agenda/agenda.component.ts",{"_index":9,"title":{},"body":{"components/AgendaComponent.html":{},"coverage.html":{}}}],["src/app/agenda/agenda.component.ts:240",{"_index":265,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:243",{"_index":292,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:245",{"_index":282,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:247",{"_index":278,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:249",{"_index":299,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:252",{"_index":276,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:274",{"_index":303,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:276",{"_index":296,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:278",{"_index":301,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:280",{"_index":286,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:287",{"_index":195,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:289",{"_index":188,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:306",{"_index":202,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:320",{"_index":260,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:351",{"_index":241,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:359",{"_index":245,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:377",{"_index":251,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:391",{"_index":237,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:409",{"_index":208,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:426",{"_index":232,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:448",{"_index":225,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:463",{"_index":216,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/agenda.component.ts:476",{"_index":256,"title":{},"body":{"components/AgendaComponent.html":{}}}],["src/app/agenda/segmento",{"_index":1932,"title":{},"body":{"components/SegmentoModalComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts",{"_index":427,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:22",{"_index":473,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:24",{"_index":476,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:26",{"_index":485,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:28",{"_index":488,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:30",{"_index":466,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:32",{"_index":462,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:34",{"_index":481,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:36",{"_index":479,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:38",{"_index":469,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:41",{"_index":474,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:42",{"_index":478,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:43",{"_index":487,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:44",{"_index":489,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:45",{"_index":468,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:46",{"_index":452,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:78",{"_index":460,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:94",{"_index":456,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.config.ts",{"_index":2039,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/citas/citas.component.ts",{"_index":1239,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"coverage.html":{}}}],["src/app/components/login",{"_index":1678,"title":{},"body":{"components/LoginModalComponent.html":{},"coverage.html":{}}}],["src/app/components/profile",{"_index":1784,"title":{},"body":{"components/ProfileModalComponent.html":{},"coverage.html":{}}}],["src/app/components/register",{"_index":1861,"title":{},"body":{"components/RegisterModalComponent.html":{},"coverage.html":{}}}],["src/app/components/toast/toast.component.ts",{"_index":2005,"title":{},"body":{"components/ToastComponent.html":{},"coverage.html":{}}}],["src/app/components/toast/toast.component.ts:58",{"_index":2014,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/components/toast/toast.component.ts:60",{"_index":2011,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/components/toast/toast.component.ts:77",{"_index":2012,"title":{},"body":{"components/ToastComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts",{"_index":1084,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"coverage.html":{}}}],["src/app/dashboard/dashboard.component.ts:103",{"_index":1113,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:119",{"_index":1109,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:123",{"_index":1112,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:127",{"_index":1116,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:131",{"_index":1108,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:37",{"_index":1120,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:39",{"_index":1135,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:40",{"_index":1134,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:43",{"_index":1130,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:65",{"_index":1107,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:77",{"_index":1138,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:87",{"_index":1110,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/dashboard/dashboard.component.ts:95",{"_index":1117,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts",{"_index":1315,"title":{},"body":{"components/FuncionariosComponent.html":{},"coverage.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:312",{"_index":1380,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:314",{"_index":1382,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:316",{"_index":1377,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:318",{"_index":1378,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:320",{"_index":1387,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:322",{"_index":1386,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:324",{"_index":1388,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:326",{"_index":1389,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:328",{"_index":1376,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:330",{"_index":1390,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:332",{"_index":1352,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:368",{"_index":1370,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:377",{"_index":1374,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:395",{"_index":1363,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:405",{"_index":1375,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:426",{"_index":1365,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:436",{"_index":1357,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:454",{"_index":1371,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:494",{"_index":1354,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/funcionarios/funcionarios.component.ts:513",{"_index":1372,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["src/app/guards/role.guard.ts",{"_index":1910,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/app/guards/role.guard.ts:12",{"_index":1916,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/guards/role.guard.ts:25",{"_index":1921,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/inscripcion/inscripcion.component.ts",{"_index":1459,"title":{},"body":{"components/InscripcionComponent.html":{},"coverage.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:117",{"_index":1482,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:131",{"_index":1496,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:163",{"_index":1488,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:182",{"_index":1494,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:209",{"_index":1490,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:21",{"_index":1500,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:23",{"_index":1501,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:247",{"_index":1491,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:25",{"_index":1502,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:259",{"_index":1473,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:27",{"_index":1503,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:29",{"_index":1499,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:31",{"_index":1471,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:56",{"_index":1492,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:76",{"_index":1487,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:85",{"_index":1486,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/inscripcion/inscripcion.component.ts:95",{"_index":1485,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["src/app/landing",{"_index":1596,"title":{},"body":{"components/LandingPageComponent.html":{},"coverage.html":{}}}],["src/app/services/database.service.ts",{"_index":589,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["src/app/services/toast.service.ts",{"_index":1986,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["src/app/services/toast.service.ts:23",{"_index":2028,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/services/toast.service.ts:25",{"_index":2027,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/services/toast.service.ts:33",{"_index":2026,"title":{},"body":{"injectables/ToastService.html":{}}}],["src/app/services/toast.service.ts:42",{"_index":2025,"title":{},"body":{"injectables/ToastService.html":{}}}],["standalone",{"_index":24,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["start",{"_index":350,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["startdate",{"_index":1938,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["startdate.toisostring",{"_index":1970,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["started",{"_index":2095,"title":{"index.html":{}},"body":{}}],["startofweek",{"_index":1266,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["startrecovery",{"_index":1692,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["state",{"_index":1919,"title":{},"body":{"guards/RoleGuard.html":{}}}],["statements",{"_index":2032,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":547,"title":{},"body":{"components/AppComponent.html":{}}}],["stored",{"_index":2121,"title":{},"body":{"index.html":{}}}],["streams",{"_index":623,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["stretch",{"_index":1219,"title":{},"body":{"components/DashboardComponent.html":{}}}],["string",{"_index":291,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["styles",{"_index":5,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["styleurl",{"_index":1933,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["styleurls",{"_index":433,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{}}}],["su",{"_index":998,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["suave",{"_index":1626,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["subject",{"_index":1988,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["submit",{"_index":1323,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["subscribe",{"_index":1262,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["subscription",{"_index":464,"title":{},"body":{"components/AppComponent.html":{},"components/ToastComponent.html":{}}}],["success",{"_index":1183,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["successmessage",{"_index":1259,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["sum",{"_index":1538,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["sus",{"_index":254,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/NavItem.html":{}}}],["suscripciones",{"_index":458,"title":{},"body":{"components/AppComponent.html":{}}}],["suscripción",{"_index":2013,"title":{},"body":{"components/ToastComponent.html":{}}}],["switch(fieldname",{"_index":1528,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["system",{"_index":541,"title":{},"body":{"components/AppComponent.html":{},"components/LandingPageComponent.html":{}}}],["sánchez",{"_index":754,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["séptima",{"_index":846,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["tablas",{"_index":637,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["table",{"_index":650,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2068,"title":{},"body":{"coverage.html":{}}}],["tamaño",{"_index":200,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["también",{"_index":958,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["tarea",{"_index":2085,"title":{},"body":{"dependencies.html":{}}}],["tareaduoc",{"_index":2096,"title":{},"body":{"index.html":{}}}],["task",{"_index":551,"title":{},"body":{"components/AppComponent.html":{}}}],["tasks",{"_index":555,"title":{},"body":{"components/AppComponent.html":{}}}],["telefono",{"_index":661,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["teléfono",{"_index":1333,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["template",{"_index":116,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["templateurl",{"_index":435,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["temporal",{"_index":969,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["temporales",{"_index":1987,"title":{},"body":{"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["temporary",{"_index":993,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["tener",{"_index":1841,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["tenga",{"_index":1479,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{},"guards/RoleGuard.html":{}}}],["tercera",{"_index":808,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["test",{"_index":2127,"title":{},"body":{"index.html":{}}}],["testing",{"_index":2136,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2126,"title":{},"body":{"index.html":{}}}],["text",{"_index":579,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["texto",{"_index":1994,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.calendaroptions.events",{"_index":355,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.checkfuncionarioavailability(f.id",{"_index":1261,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.checkscreensize",{"_index":330,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.citas",{"_index":513,"title":{},"body":{"components/AppComponent.html":{}}}],["this.citassubject.asobservable",{"_index":632,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.citassubject.next(result[0].values.map((row",{"_index":942,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.citassubscription",{"_index":511,"title":{},"body":{"components/AppComponent.html":{}}}],["this.citassubscription.unsubscribe",{"_index":535,"title":{},"body":{"components/AppComponent.html":{}}}],["this.close.emit",{"_index":1732,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["this.closeassignmodal",{"_index":1309,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.closemodal",{"_index":1761,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["this.cupos",{"_index":510,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cupossubject.asobservable",{"_index":631,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.cupossubject.next(result[0].values.map((row",{"_index":940,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.cupossubscription",{"_index":508,"title":{},"body":{"components/AppComponent.html":{}}}],["this.cupossubscription.unsubscribe",{"_index":534,"title":{},"body":{"components/AppComponent.html":{}}}],["this.currentuser",{"_index":1813,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.currentuser.apellidos",{"_index":1186,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{}}}],["this.currentuser.apellidos?.[0",{"_index":1161,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.currentuser.email",{"_index":1828,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.currentuser.esp_id",{"_index":1830,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.currentuser.especialidad",{"_index":1187,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.currentuser.nombres",{"_index":1185,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{}}}],["this.currentuser.nombres?.[0",{"_index":1160,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.currentuser.telefono",{"_index":1829,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.db",{"_index":646,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.exec",{"_index":918,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.exec('select",{"_index":931,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.exec(`select",{"_index":948,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.run",{"_index":648,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.run('insert",{"_index":905,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.run('update",{"_index":1053,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.run(`delete",{"_index":1021,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.run(`insert",{"_index":1014,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.run(script",{"_index":902,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.db.run(sql",{"_index":1076,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.dbservice.addfuncionario(funcionario",{"_index":1439,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.dbservice.addfuncionario(newfuncionario",{"_index":1896,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.dbservice.addpaciente(paciente",{"_index":1559,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.dbservice.addsegmentohorario(segmento",{"_index":374,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.dbservice.assignsegmentotopaciente(this.selectedpaciente.id",{"_index":1303,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.dbservice.citas$.subscribe",{"_index":512,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dbservice.cupos$.subscribe",{"_index":509,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dbservice.deletefuncionario(this.selectedfuncionario.id",{"_index":1449,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.dbservice.deletesegmentohorario(id",{"_index":384,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.dbservice.especialidades$.subscribe",{"_index":498,"title":{},"body":{"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.dbservice.funcionarios$.subscribe",{"_index":501,"title":{},"body":{"components/AppComponent.html":{},"components/FuncionariosComponent.html":{}}}],["this.dbservice.getfuncionariobyrut(cleanrut",{"_index":1754,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.dbservice.getfuncionariobyrut(formvalue.rut",{"_index":1890,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.dbservice.getfuncionariobyrut(this.recoveryrut",{"_index":1745,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.dbservice.getpacientebyrut(cleanrut",{"_index":1551,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.dbservice.getpacientebyrut(this.searchrut",{"_index":1297,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.dbservice.getsegmentohorariobyid(clickinfo.event.id",{"_index":387,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.dbservice.getsegmentoshorariobyfuncionarioid(funcionarioid",{"_index":345,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.dbservice.hasrole(currentuser.id",{"_index":1930,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.dbservice.hasrole(this.currentuser.id",{"_index":1158,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.dbservice.initializedatabase",{"_index":516,"title":{},"body":{"components/AppComponent.html":{},"guards/RoleGuard.html":{}}}],["this.dbservice.loadespecialidades",{"_index":517,"title":{},"body":{"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{}}}],["this.dbservice.loadfuncionarios",{"_index":1402,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.dbservice.loadpacientes",{"_index":1526,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.dbservice.pacientes$.subscribe",{"_index":503,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.dbservice.segmentoshorario$.subscribe",{"_index":506,"title":{},"body":{"components/AppComponent.html":{}}}],["this.dbservice.updatefuncionario(updateduser",{"_index":1857,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.dbservice.updatesegmentohorario(segmento",{"_index":376,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.delete.emit(this.segmentotoedit.id",{"_index":1959,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.emaildomainvalidator",{"_index":1514,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.error",{"_index":520,"title":{},"body":{"components/AppComponent.html":{}}}],["this.errormessage",{"_index":1295,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.especialidades",{"_index":499,"title":{},"body":{"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.especialidades.find(esp",{"_index":1407,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.especialidadessubject.asobservable",{"_index":627,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.especialidadessubject.next",{"_index":914,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.especialidadessubject.next(result[0].values.map((row",{"_index":911,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.especialidadessubscription",{"_index":497,"title":{},"body":{"components/AppComponent.html":{}}}],["this.especialidadessubscription.unsubscribe",{"_index":530,"title":{},"body":{"components/AppComponent.html":{}}}],["this.fb.group",{"_index":1394,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["this.filteredfuncionarios",{"_index":329,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["this.formatrut(paciente.rut",{"_index":1553,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.funcionario.id",{"_index":1972,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.funcionarioform",{"_index":1393,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.get(fieldname",{"_index":1414,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.get(key",{"_index":1431,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.invalid",{"_index":1429,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.markaspristine",{"_index":1411,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.markasuntouched",{"_index":1412,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.reset",{"_index":1452,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.setvalue",{"_index":1410,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarioform.value",{"_index":1436,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarios",{"_index":328,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["this.funcionarios.filter(funcionario",{"_index":1406,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.funcionarios.map(f",{"_index":1311,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.funcionariossubject.asobservable",{"_index":628,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.funcionariossubject.next(result[0].values.map((row",{"_index":924,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.funcionariossubscription",{"_index":500,"title":{},"body":{"components/AppComponent.html":{}}}],["this.funcionariossubscription.unsubscribe",{"_index":531,"title":{},"body":{"components/AppComponent.html":{}}}],["this.generatedcode",{"_index":1746,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.getespecialidadbyname(funcionario.especialidad",{"_index":1059,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.getespecialidadnombre(funcionario.esp_id",{"_index":1401,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.getfuncionariobyid(funcionario.id",{"_index":1062,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.getpacientebyrut(paciente.rut",{"_index":977,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.iseditmode",{"_index":1953,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.isloading",{"_index":1434,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.isrecovering",{"_index":1734,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.issmallscreen",{"_index":333,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.loadcitas",{"_index":700,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loadcupos",{"_index":699,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loadespecialidades",{"_index":695,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loadfuncionarios",{"_index":696,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loading",{"_index":518,"title":{},"body":{"components/AppComponent.html":{}}}],["this.loadpacientes",{"_index":697,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loadroles",{"_index":702,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loadrolesfuncionario",{"_index":703,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loadsegmentos(funcionario.id",{"_index":1267,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.loadsegmentos(this.selectedfuncionario.id",{"_index":1308,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.loadsegmentoshorario",{"_index":698,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.loadshifts(funcionario.id",{"_index":339,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.loadshifts(this.selectedfuncionario!.id",{"_index":377,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.message",{"_index":1550,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.navitems.filter(item",{"_index":1157,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.newpassword",{"_index":1739,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.newpassword.length",{"_index":1750,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.nuevospacientes.find(p",{"_index":1006,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.nuevospacientes.length",{"_index":995,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.nuevospacientes.push(paciente",{"_index":996,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.pacienteform",{"_index":1510,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.get(fieldname",{"_index":1527,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.get(key",{"_index":1556,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.invalid",{"_index":1554,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.patchvalue",{"_index":1552,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.reset",{"_index":1562,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacienteform.value",{"_index":1557,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.pacientes",{"_index":504,"title":{},"body":{"components/AppComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.pacientessubject.asobservable",{"_index":629,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.pacientessubject.next",{"_index":936,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.pacientessubject.next(pacientes",{"_index":935,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.pacientessubscription",{"_index":502,"title":{},"body":{"components/AppComponent.html":{}}}],["this.pacientessubscription.unsubscribe",{"_index":532,"title":{},"body":{"components/AppComponent.html":{}}}],["this.password",{"_index":1755,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.passwordmatchvalidator",{"_index":1824,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.profileform",{"_index":1814,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.profileform.get(fieldname",{"_index":1837,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.profileform.get(key",{"_index":1849,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.profileform.invalid",{"_index":1847,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.profileform.patchvalue",{"_index":1827,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.profileform.value",{"_index":1850,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.recoverycode",{"_index":1736,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.recoverycodesent",{"_index":1737,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.recoverycodeverified",{"_index":1738,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.recoveryrut",{"_index":1735,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.registerform",{"_index":1879,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.registerform.get(fieldname",{"_index":1885,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.registerform.invalid",{"_index":1887,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.registerform.patchvalue",{"_index":1881,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.registerform.value",{"_index":1888,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.resetform",{"_index":1442,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["this.rolesfuncionariosubject.asobservable",{"_index":636,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.rolesfuncionariosubject.next(result[0].values.map((row",{"_index":946,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.rolessubject.asobservable",{"_index":634,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.rolessubject.next(result[0].values.map((row",{"_index":944,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.router.navigate",{"_index":1184,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{},"guards/RoleGuard.html":{}}}],["this.router.navigate(['/dashboard",{"_index":1762,"title":{},"body":{"components/LoginModalComponent.html":{},"guards/RoleGuard.html":{}}}],["this.rut.replace(/\\./g",{"_index":1753,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.rutvalidator",{"_index":1511,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.searchfuncionarios",{"_index":393,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{}}}],["this.searchrut",{"_index":1293,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{}}}],["this.searchrut.replace(/\\./g",{"_index":1549,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.searchterm",{"_index":392,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.searchterm.tolowercase",{"_index":1405,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.searchterm.trim",{"_index":1403,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.seeddatabase",{"_index":694,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.seedroles",{"_index":701,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.segmentoform",{"_index":1949,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentoform.patchvalue",{"_index":1957,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentoform.valid",{"_index":1960,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentoform.value",{"_index":1961,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentoshorario",{"_index":507,"title":{},"body":{"components/AppComponent.html":{}}}],["this.segmentoshorariosubject.asobservable",{"_index":630,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.segmentoshorariosubject.next(result[0].values.map((row",{"_index":938,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["this.segmentoshorariosubscription",{"_index":505,"title":{},"body":{"components/AppComponent.html":{}}}],["this.segmentoshorariosubscription.unsubscribe",{"_index":533,"title":{},"body":{"components/AppComponent.html":{}}}],["this.segmentotoedit",{"_index":1952,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentotoedit.nombre",{"_index":1958,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.segmentotoedit?.id",{"_index":1968,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.selecteddate",{"_index":364,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.selectedfuncionario",{"_index":338,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["this.selectedfuncionario?.id",{"_index":1437,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["this.selectedpaciente",{"_index":1298,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.selectedsegmento",{"_index":383,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.selectedsegmento.id",{"_index":1304,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.showassignmodal",{"_index":1273,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.showerror",{"_index":1294,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["this.showloginmodal",{"_index":1622,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.showprofilemodal",{"_index":1188,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.showregistermodal",{"_index":1623,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["this.showsegmentomodal",{"_index":366,"title":{},"body":{"components/AgendaComponent.html":{}}}],["this.showsuccess",{"_index":1299,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["this.showusermenu",{"_index":1165,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.startdate",{"_index":1963,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.submit.emit(segmento",{"_index":1973,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["this.subscription",{"_index":2019,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.subscription.unsubscribe",{"_index":2022,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.successmessage",{"_index":1300,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["this.toast",{"_index":2021,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastservice.show('cita",{"_index":1305,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["this.toastservice.show('error",{"_index":1860,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.toastservice.show('la",{"_index":1855,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.toastservice.show('paciente",{"_index":1560,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.toastservice.show('perfil",{"_index":1859,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["this.toastservice.show('usuario",{"_index":1897,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["this.toastservice.show(`cierre",{"_index":1181,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["this.toastservice.show(`inicio",{"_index":1760,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["this.toastservice.toast$.subscribe",{"_index":2020,"title":{},"body":{"components/ToastComponent.html":{}}}],["this.toastsubject.asobservable",{"_index":1993,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.toastsubject.next",{"_index":2000,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.toastsubject.next(null",{"_index":2001,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["this.updatecalendarview",{"_index":341,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["this.validaterut(cleanrut",{"_index":1524,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["this.validaterut(rut",{"_index":1880,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["through",{"_index":582,"title":{},"body":{"components/AppComponent.html":{}}}],["throw",{"_index":704,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["throws",{"_index":640,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["thursday",{"_index":899,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["tiene",{"_index":1027,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["timegridplugin",{"_index":272,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["timestr",{"_index":1171,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["tipo",{"_index":1361,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["tipos",{"_index":608,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["title",{"_index":141,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["tld",{"_index":1572,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["tld.length",{"_index":1574,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["toast",{"_index":422,"title":{"interfaces/Toast.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toast.message",{"_index":2009,"title":{},"body":{"components/ToastComponent.html":{}}}],["toastcomponent",{"_index":421,"title":{"components/ToastComponent.html":{}},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"coverage.html":{}}}],["toastservice",{"_index":1106,"title":{"injectables/ToastService.html":{}},"body":{"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{}}}],["toastsubject",{"_index":1990,"title":{},"body":{"interfaces/Toast.html":{},"injectables/ToastService.html":{}}}],["tocado",{"_index":1369,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["todas",{"_index":529,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["todos",{"_index":283,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{}}}],["toggle",{"_index":85,"title":{},"body":{"components/AgendaComponent.html":{}}}],["toggleloginmodal",{"_index":1606,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["toggleregistermodal",{"_index":1607,"title":{},"body":{"components/LandingPageComponent.html":{}}}],["togglesearch",{"_index":180,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["toggleusermenu",{"_index":1101,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["toolbar",{"_index":140,"title":{},"body":{"components/AgendaComponent.html":{}}}],["top",{"_index":92,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["torres",{"_index":764,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["total",{"_index":1982,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["transform",{"_index":90,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["transition",{"_index":55,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["translatex(0",{"_index":2008,"title":{},"body":{"components/ToastComponent.html":{}}}],["translatex(100",{"_index":2007,"title":{},"body":{"components/ToastComponent.html":{}}}],["translatey",{"_index":127,"title":{},"body":{"components/AgendaComponent.html":{},"components/FuncionariosComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["translatey(0",{"_index":1778,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["tree",{"_index":7,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["tres",{"_index":1740,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["true",{"_index":25,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["try",{"_index":370,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["trylogin(email",{"_index":947,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["tslib",{"_index":2087,"title":{},"body":{"dependencies.html":{}}}],["tu",{"_index":1765,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["tuesday",{"_index":892,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["type",{"_index":191,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/sql.js",{"_index":2080,"title":{},"body":{"dependencies.html":{}}}],["término",{"_index":248,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{}}}],["título",{"_index":482,"title":{},"body":{"components/AppComponent.html":{}}}],["u",{"_index":1162,"title":{},"body":{"components/DashboardComponent.html":{},"interfaces/NavItem.html":{}}}],["ui",{"_index":540,"title":{},"body":{"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/LandingPageComponent.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["un",{"_index":218,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"interfaces/Toast.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{}}}],["una",{"_index":210,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["underline",{"_index":1782,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["unique",{"_index":690,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["unit",{"_index":2125,"title":{},"body":{"index.html":{}}}],["update",{"_index":1025,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["updatecalendarview",{"_index":181,"title":{},"body":{"components/AgendaComponent.html":{}}}],["updateduser",{"_index":1851,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["updateduser.password",{"_index":1856,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["updatefields",{"_index":1063,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["updatefields.map(field",{"_index":1065,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["updatefuncionario",{"_index":1058,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["updatefuncionario(funcionario",{"_index":1057,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["updatefuncionariopassword(id",{"_index":1054,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["updatesegmentohorario(segmentohorario",{"_index":1023,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["updating",{"_index":375,"title":{},"body":{"components/AgendaComponent.html":{}}}],["usa_agenda",{"_index":708,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["usa_citas",{"_index":707,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["usa_inscripcion",{"_index":709,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["usando",{"_index":601,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["use",{"_index":2117,"title":{},"body":{"index.html":{}}}],["user",{"_index":564,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["userdata",{"_index":1756,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["usuario",{"_index":1080,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["usuarios",{"_index":1729,"title":{},"body":{"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{}}}],["utilizan",{"_index":609,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["valentina",{"_index":831,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["valentina.mendoza@ejemplo.com",{"_index":834,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["valida",{"_index":1497,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validación",{"_index":1878,"title":{},"body":{"components/RegisterModalComponent.html":{}}}],["validador",{"_index":1474,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validar",{"_index":1478,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validaterut",{"_index":1470,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validaterut(rut",{"_index":1495,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validation",{"_index":1519,"title":{},"body":{"components/InscripcionComponent.html":{}}}],["validationerrors",{"_index":1504,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validator",{"_index":1823,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validatorfn",{"_index":1477,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators",{"_index":1391,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["validators.email",{"_index":1397,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.max(48",{"_index":1951,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["validators.min(1",{"_index":1950,"title":{},"body":{"components/SegmentoModalComponent.html":{}}}],["validators.minlength(12",{"_index":1513,"title":{},"body":{"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.minlength(2",{"_index":1396,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.minlength(6",{"_index":1399,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.pattern(/^(?=.*[a",{"_index":1817,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["validators.pattern(/^[0",{"_index":1398,"title":{},"body":{"components/FuncionariosComponent.html":{}}}],["validators.pattern(/^[^\\s",{"_index":1815,"title":{},"body":{"components/ProfileModalComponent.html":{}}}],["validators.required",{"_index":1395,"title":{},"body":{"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{}}}],["valor",{"_index":612,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["value",{"_index":269,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["values",{"_index":715,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["values.push(funcionario.id",{"_index":1074,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["values.push(newfuncionario.password",{"_index":1070,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["values.push(oldfuncionario",{"_index":1072,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["var",{"_index":398,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{}}}],["vargas",{"_index":802,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["variable",{"_index":2040,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":2146,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["ventana",{"_index":201,"title":{},"body":{"components/AgendaComponent.html":{}}}],["verifica",{"_index":203,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"guards/RoleGuard.html":{},"interfaces/SegmentoHorario.html":{}}}],["verificación",{"_index":1742,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["verificado",{"_index":1724,"title":{},"body":{"components/LoginModalComponent.html":{}}}],["verificar",{"_index":1030,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["verificationdigit",{"_index":1535,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["version",{"_index":2101,"title":{},"body":{"index.html":{},"properties.html":{}}}],["via",{"_index":2129,"title":{},"body":{"index.html":{}}}],["viewchild",{"_index":310,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["viewchild('calendar",{"_index":264,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["visibilidad",{"_index":258,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["visible",{"_index":1136,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"interfaces/NavItem.html":{}}}],["vista",{"_index":262,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/LandingPageComponent.html":{}}}],["void",{"_index":206,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{},"components/ToastComponent.html":{},"injectables/ToastService.html":{}}}],["válido",{"_index":1480,"title":{},"body":{"components/InscripcionComponent.html":{},"components/RegisterModalComponent.html":{}}}],["wassmallscreen",{"_index":332,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["wednesday",{"_index":895,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["week",{"_index":879,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/Paciente.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["weight",{"_index":80,"title":{},"body":{"components/AgendaComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["white",{"_index":44,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["width",{"_index":34,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"components/DashboardComponent.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["window.innerwidth",{"_index":275,"title":{},"body":{"components/AgendaComponent.html":{},"interfaces/FuncionarioWithAvailability.html":{}}}],["window:resize",{"_index":183,"title":{},"body":{"components/AgendaComponent.html":{}}}],["wrap",{"_index":1220,"title":{},"body":{"components/DashboardComponent.html":{}}}],["xito",{"_index":1256,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{}}}],["xito/error",{"_index":1291,"title":{},"body":{"interfaces/FuncionarioWithAvailability.html":{}}}],["y",{"_index":253,"title":{},"body":{"components/AgendaComponent.html":{},"components/AppComponent.html":{},"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"components/DashboardComponent.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"components/FuncionariosComponent.html":{},"components/InscripcionComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{},"interfaces/Paciente.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{},"components/SegmentoModalComponent.html":{}}}],["ya",{"_index":979,"title":{},"body":{"interfaces/Cita.html":{},"interfaces/Cupo.html":{},"interfaces/Especialidad.html":{},"interfaces/Funcionario.html":{},"interfaces/FuncionarioWithAvailability.html":{},"interfaces/Paciente.html":{},"components/RegisterModalComponent.html":{},"interfaces/Rol.html":{},"interfaces/RolFuncionario.html":{},"interfaces/SegmentoHorario.html":{}}}],["year",{"_index":1179,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginModalComponent.html":{},"interfaces/NavItem.html":{}}}],["z",{"_index":1200,"title":{},"body":{"components/DashboardComponent.html":{},"components/LandingPageComponent.html":{},"components/LoginModalComponent.html":{},"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{},"components/ToastComponent.html":{}}}],["z\\d]{6",{"_index":1821,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["z])(?=.*[a",{"_index":1818,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["z])(?=.*\\d)[a",{"_index":1819,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["za",{"_index":1820,"title":{},"body":{"components/ProfileModalComponent.html":{},"components/RegisterModalComponent.html":{}}}],["zone.js",{"_index":2089,"title":{},"body":{"dependencies.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AgendaComponent.html":{"url":"components/AgendaComponent.html","title":"component - AgendaComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AgendaComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/agenda/agenda.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja la agenda de los funcionarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-agenda\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            FullCalendarModule\n                                SegmentoModalComponent\n                \n            \n\n\n            \n                styles\n                \n    .agenda-container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 2rem;\n    }\n\n    .search-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      margin-bottom: 2rem;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n      transition: all 0.3s ease;\n    }\n\n    .search-section.collapsed {\n      padding: 0.75rem;\n      margin-bottom: 1rem;\n    }\n\n    .search-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      cursor: pointer;\n    }\n\n    .header-content {\n      flex: 1;\n    }\n\n    .header-content h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.1rem;\n      font-weight: 500;\n    }\n\n    .specialty {\n      font-size: 0.9rem;\n      color: #718096;\n    }\n\n    .toggle-btn {\n      background: none;\n      border: none;\n      color: #4a5568;\n      font-size: 1rem;\n      cursor: pointer;\n      padding: 0.25rem;\n      transition: transform 0.3s ease;\n      margin-left: 1rem;\n    }\n\n    .search-content {\n      margin-top: 1rem;\n      transition: all 0.3s ease;\n      max-height: 500px;\n      overflow: hidden;\n    }\n\n    .search-content.hidden {\n      margin-top: 0;\n      max-height: 0;\n      opacity: 0;\n    }\n\n    .search-box {\n      margin-bottom: 1.5rem;\n    }\n\n    .search-input {\n      width: 100%;\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n      transition: border-color 0.2s;\n    }\n\n    .search-input:focus {\n      outline: none;\n      border-color: #4299e1;\n      box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n    }\n\n    .funcionarios-list {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n      gap: 1rem;\n    }\n\n    .funcionario-card {\n      background: #f8fafc;\n      padding: 1rem;\n      border-radius: 6px;\n      border: 1px solid #e2e8f0;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .funcionario-card:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n      border-color: #4299e1;\n    }\n\n    .funcionario-card.selected {\n      background: #ebf8ff;\n      border-color: #4299e1;\n    }\n\n    .funcionario-info h3 {\n      margin: 0 0 0.5rem 0;\n      color: #2d3748;\n      font-size: 1.1rem;\n    }\n\n    .funcionario-info p {\n      margin: 0;\n      color: #718096;\n      font-size: 0.9rem;\n    }\n\n    .calendar-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .calendar-section h2 {\n      margin: 0 0 1.5rem 0;\n      color: #2d3748;\n    }\n\n    :host ::ng-deep {\n      .fc {\n        font-family: inherit;\n      }\n\n      .fc-toolbar-title {\n        font-size: 1.2rem !important;\n      }\n\n      .fc-button-primary {\n        background-color: #4299e1 !important;\n        border-color: #3182ce !important;\n      }\n\n      .fc-button-primary:hover {\n        background-color: #3182ce !important;\n        border-color: #2c5282 !important;\n      }\n\n      .fc-event {\n        background-color: #4299e1;\n        border-color: #3182ce;\n      }\n    }\n  \n            \n\n            \n                template\n                \n  \n    \n      \n        {{ selectedFuncionario ? selectedFuncionario.nombres + ' ' + selectedFuncionario.apellidos : 'Seleccionar Funcionario' }}\n        {{ selectedFuncionario.especialidad }}\n      \n      \n        {{ selectedFuncionario ? '▼' : '▲' }}\n      \n    \n\n    \n      \n        \n      \n\n       0\">\n        \n          \n            {{ funcionario.nombres }} {{ funcionario.apellidos }}\n            {{ funcionario.especialidad }}\n          \n        \n      \n    \n  \n\n  \n    \n  \n\n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                calendarComponent\n                            \n                            \n                                calendarOptions\n                            \n                            \n                                filteredFuncionarios\n                            \n                            \n                                funcionarios\n                            \n                            \n                                isSmallScreen\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedDate\n                            \n                            \n                                selectedFuncionario\n                            \n                            \n                                selectedSegmento\n                            \n                            \n                                showSegmentoModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                checkScreenSize\n                            \n                            \n                                handleDateSelect\n                            \n                            \n                                handleEventClick\n                            \n                            \n                                handleSegmentoDelete\n                            \n                            \n                                handleSegmentoSubmit\n                            \n                            \n                                loadShifts\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                    \n                                onResize\n                            \n                            \n                                searchFuncionarios\n                            \n                            \n                                selectFuncionario\n                            \n                            \n                                toggleSearch\n                            \n                            \n                                    Private\n                                updateCalendarView\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                window:resize\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/agenda/agenda.component.ts:289\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners    \n        \n            \n                \n                    \n                    \n                        window:resize\n                        \n                    \n                \n            \n            \n                \n                    Arguments : '$event' \n                \n            \n            \n                \nwindow:resize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:287\n                        \n                    \n\n\n            \n                \n                        Escucha cambios en el tamaño de la ventana\n\n\n                \n            \n        \n    \n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        checkScreenSize\n                        \n                    \n                \n            \n            \n                \n                        \n                    checkScreenSize()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:306\n                        \n                    \n\n\n            \n                \n                        Verifica el tamaño de la pantalla\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleDateSelect\n                        \n                    \n                \n            \n            \n                \nhandleDateSelect(selectInfo: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:409\n                        \n                    \n\n\n            \n                \n                        Maneja la selección de una fecha en el calendario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                selectInfo\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Información de la selección\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleEventClick\n                        \n                    \n                \n            \n            \n                \nhandleEventClick(clickInfo: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:463\n                        \n                    \n\n\n            \n                \n                        Maneja el clic en un evento del calendario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                clickInfo\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Información del evento clickeado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSegmentoDelete\n                        \n                    \n                \n            \n            \n                \nhandleSegmentoDelete(id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:448\n                        \n                    \n\n\n            \n                \n                        Maneja la eliminación de un segmento\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del segmento a eliminar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleSegmentoSubmit\n                        \n                    \n                \n            \n            \n                \nhandleSegmentoSubmit(segmento: SegmentoHorario)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:426\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario de segmento\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                segmento\n                                            \n                                                            SegmentoHorario\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Segmento a guardar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loadShifts\n                        \n                    \n                \n            \n            \n                \nloadShifts(funcionarioId: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:391\n                        \n                    \n\n\n            \n                \n                        Carga los horarios de un funcionario\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                funcionarioId\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID del funcionario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:351\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        onResize\n                        \n                    \n                \n            \n            \n                \n                        \n                    onResize()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @HostListener('window:resize', ['$event'])\n                \n            \n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:287\n                        \n                    \n\n\n            \n                \n                        Escucha cambios en el tamaño de la ventana\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchFuncionarios\n                        \n                    \n                \n            \n            \n                \nsearchFuncionarios()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:359\n                        \n                    \n\n\n            \n                \n                        Filtra funcionarios según término de búsqueda\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFuncionario\n                        \n                    \n                \n            \n            \n                \nselectFuncionario(funcionario: Funcionario)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:377\n                        \n                    \n\n\n            \n                \n                        Selecciona un funcionario y carga sus horarios\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                funcionario\n                                            \n                                                            Funcionario\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcionario seleccionado\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleSearch\n                        \n                    \n                \n            \n            \n                \ntoggleSearch()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:476\n                        \n                    \n\n\n            \n                \n                        Alterna la visibilidad de la sección de búsqueda\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updateCalendarView\n                        \n                    \n                \n            \n            \n                \n                        \n                    updateCalendarView()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/agenda.component.ts:320\n                        \n                    \n\n\n            \n                \n                        Actualiza la vista del calendario\n\n\n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        calendarComponent\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FullCalendarComponent\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('calendar')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:240\n                        \n                    \n\n            \n                \n                    Referencia al componente de calendario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        calendarOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     CalendarOptions\n\n                    \n                \n                \n                    \n                        Default value : {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    initialView: window.innerWidth \n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:252\n                        \n                    \n\n            \n                \n                    Configuración del calendario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredFuncionarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Funcionario[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:247\n                        \n                    \n\n            \n                \n                    Lista de funcionarios filtrados por búsqueda\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        funcionarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Funcionario[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:245\n                        \n                    \n\n            \n                \n                    Lista de todos los funcionarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isSmallScreen\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:280\n                        \n                    \n\n            \n                \n                    Indica si la pantalla es pequeña\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:243\n                        \n                    \n\n            \n                \n                    Término de búsqueda para funcionarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Date | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:276\n                        \n                    \n\n            \n                \n                    Fecha seleccionada para nuevo segmento\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFuncionario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Funcionario | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:249\n                        \n                    \n\n            \n                \n                    Funcionario seleccionado actualmente\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedSegmento\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegmentoHorario | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:278\n                        \n                    \n\n            \n                \n                    Segmento seleccionado para edición\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSegmentoModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/agenda.component.ts:274\n                        \n                    \n\n            \n                \n                    Indica si se debe mostrar el modal de segmento\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, HostListener, ViewChild } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatabaseService, Funcionario, SegmentoHorario } from '../services/database.service';\nimport { CalendarOptions, EventInput } from '@fullcalendar/core';\nimport { FullCalendarModule, FullCalendarComponent } from '@fullcalendar/angular';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { SegmentoModalComponent } from './segmento-modal/segmento-modal.component';\n\n/**\n * Componente que maneja la agenda de los funcionarios\n * @description Permite a los funcionarios gestionar sus horarios de atención\n */\n@Component({\n  selector: 'app-agenda',\n  standalone: true,\n  imports: [CommonModule, FormsModule, FullCalendarModule, SegmentoModalComponent],\n  template: `\n    \n      \n        \n          \n            {{ selectedFuncionario ? selectedFuncionario.nombres + ' ' + selectedFuncionario.apellidos : 'Seleccionar Funcionario' }}\n            {{ selectedFuncionario.especialidad }}\n          \n          \n            {{ selectedFuncionario ? '▼' : '▲' }}\n          \n        \n\n        \n          \n            \n          \n\n           0\">\n            \n              \n                {{ funcionario.nombres }} {{ funcionario.apellidos }}\n                {{ funcionario.especialidad }}\n              \n            \n          \n        \n      \n\n      \n        \n      \n\n      \n    \n  `,\n  styles: [`\n    .agenda-container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 2rem;\n    }\n\n    .search-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      margin-bottom: 2rem;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n      transition: all 0.3s ease;\n    }\n\n    .search-section.collapsed {\n      padding: 0.75rem;\n      margin-bottom: 1rem;\n    }\n\n    .search-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      cursor: pointer;\n    }\n\n    .header-content {\n      flex: 1;\n    }\n\n    .header-content h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.1rem;\n      font-weight: 500;\n    }\n\n    .specialty {\n      font-size: 0.9rem;\n      color: #718096;\n    }\n\n    .toggle-btn {\n      background: none;\n      border: none;\n      color: #4a5568;\n      font-size: 1rem;\n      cursor: pointer;\n      padding: 0.25rem;\n      transition: transform 0.3s ease;\n      margin-left: 1rem;\n    }\n\n    .search-content {\n      margin-top: 1rem;\n      transition: all 0.3s ease;\n      max-height: 500px;\n      overflow: hidden;\n    }\n\n    .search-content.hidden {\n      margin-top: 0;\n      max-height: 0;\n      opacity: 0;\n    }\n\n    .search-box {\n      margin-bottom: 1.5rem;\n    }\n\n    .search-input {\n      width: 100%;\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n      transition: border-color 0.2s;\n    }\n\n    .search-input:focus {\n      outline: none;\n      border-color: #4299e1;\n      box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n    }\n\n    .funcionarios-list {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n      gap: 1rem;\n    }\n\n    .funcionario-card {\n      background: #f8fafc;\n      padding: 1rem;\n      border-radius: 6px;\n      border: 1px solid #e2e8f0;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .funcionario-card:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n      border-color: #4299e1;\n    }\n\n    .funcionario-card.selected {\n      background: #ebf8ff;\n      border-color: #4299e1;\n    }\n\n    .funcionario-info h3 {\n      margin: 0 0 0.5rem 0;\n      color: #2d3748;\n      font-size: 1.1rem;\n    }\n\n    .funcionario-info p {\n      margin: 0;\n      color: #718096;\n      font-size: 0.9rem;\n    }\n\n    .calendar-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .calendar-section h2 {\n      margin: 0 0 1.5rem 0;\n      color: #2d3748;\n    }\n\n    :host ::ng-deep {\n      .fc {\n        font-family: inherit;\n      }\n\n      .fc-toolbar-title {\n        font-size: 1.2rem !important;\n      }\n\n      .fc-button-primary {\n        background-color: #4299e1 !important;\n        border-color: #3182ce !important;\n      }\n\n      .fc-button-primary:hover {\n        background-color: #3182ce !important;\n        border-color: #2c5282 !important;\n      }\n\n      .fc-event {\n        background-color: #4299e1;\n        border-color: #3182ce;\n      }\n    }\n  `]\n})\nexport class AgendaComponent implements OnInit {\n  /** Referencia al componente de calendario */\n  @ViewChild('calendar') calendarComponent!: FullCalendarComponent;\n  \n  /** Término de búsqueda para funcionarios */\n  searchTerm: string = '';\n  /** Lista de todos los funcionarios */\n  funcionarios: Funcionario[] = [];\n  /** Lista de funcionarios filtrados por búsqueda */\n  filteredFuncionarios: Funcionario[] = [];\n  /** Funcionario seleccionado actualmente */\n  selectedFuncionario: Funcionario | null = null;\n\n  /** Configuración del calendario */\n  calendarOptions: CalendarOptions = {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    initialView: window.innerWidth  {\n        this.funcionarios = funcionarios;\n        this.filteredFuncionarios = funcionarios;\n      }\n    );\n    this.checkScreenSize();\n  }\n\n  /**\n   * Verifica el tamaño de la pantalla\n   * @description Actualiza isSmallScreen y la vista del calendario\n   * @private\n   */\n  private checkScreenSize() {\n    const wasSmallScreen = this.isSmallScreen;\n    this.isSmallScreen = window.innerWidth  \n      funcionario.nombres.toLowerCase().includes(searchTermLower) ||\n      funcionario.apellidos.toLowerCase().includes(searchTermLower) ||\n      funcionario.especialidad?.toLowerCase().includes(searchTermLower)\n    );\n  }\n\n  /**\n   * Selecciona un funcionario y carga sus horarios\n   * @param funcionario Funcionario seleccionado\n   */\n  selectFuncionario(funcionario: Funcionario) {\n    this.selectedFuncionario = funcionario;\n    this.loadShifts(funcionario.id);\n    \n    setTimeout(() => {\n      this.updateCalendarView();\n    }, 0);\n  }\n\n  /**\n   * Carga los horarios de un funcionario\n   * @param funcionarioId ID del funcionario\n   * @description Actualiza los eventos del calendario con los segmentos del funcionario\n   */\n  loadShifts(funcionarioId: number) {\n    const segmentos = this.dbService.getSegmentosHorarioByFuncionarioId(funcionarioId);\n    const events: EventInput[] = segmentos.map(segmento => ({\n      id: segmento.id.toString(),\n      title: segmento.nombre,\n      start: segmento.fecha_hora_inicio,\n      end: segmento.fecha_hora_fin,\n      funcionarioId: segmento.fun_id\n    }));\n\n    this.calendarOptions.events = events;\n  }\n\n  /**\n   * Maneja la selección de una fecha en el calendario\n   * @param selectInfo Información de la selección\n   * @description Abre el modal para crear un nuevo segmento\n   */\n  handleDateSelect(selectInfo: any) {\n    if (!this.selectedFuncionario) {\n      alert('Por favor seleccione un funcionario primero');\n      selectInfo.view.calendar.unselect();\n      return;\n    }\n\n    this.selectedDate = selectInfo.start;\n    this.showSegmentoModal = true;\n    selectInfo.view.calendar.unselect();\n  }\n\n  /**\n   * Maneja el envío del formulario de segmento\n   * @param segmento Segmento a guardar\n   * @description Crea o actualiza un segmento horario\n   */\n  handleSegmentoSubmit(segmento: SegmentoHorario) {\n    try {\n      if (segmento.id === 0) {\n        console.log(\"### creating\", segmento);\n        this.dbService.addSegmentoHorario(segmento);\n      } else {\n        console.log(\"### updating\", segmento);\n        this.dbService.updateSegmentoHorario(segmento);\n      }\n      this.loadShifts(this.selectedFuncionario!.id);\n    } catch (error) {\n      console.error('Error saving segmento:', error);\n      alert('Error al guardar el segmento horario');\n    }\n    this.showSegmentoModal = false;\n    this.selectedSegmento = null;\n  }\n\n  /**\n   * Maneja la eliminación de un segmento\n   * @param id ID del segmento a eliminar\n   */\n  handleSegmentoDelete(id: number) {\n    try {\n      this.dbService.deleteSegmentoHorario(id);\n      this.loadShifts(this.selectedFuncionario!.id);\n    } catch (error) {\n      console.error('Error deleting segmento:', error);\n      alert('Error al eliminar el segmento horario');\n    }\n  }\n\n  /**\n   * Maneja el clic en un evento del calendario\n   * @param clickInfo Información del evento clickeado\n   * @description Abre el modal para editar el segmento\n   */\n  handleEventClick(clickInfo: any) {\n    console.log(\"### clickInfo\", clickInfo);\n    const segmento = this.dbService.getSegmentoHorarioById(clickInfo.event.id);\n    if (segmento) {\n      this.selectedSegmento = segmento;\n      this.showSegmentoModal = true;\n    }\n  }\n\n  /**\n   * Alterna la visibilidad de la sección de búsqueda\n   * @description Limpia la selección actual si está colapsada\n   */\n  toggleSearch() {\n    if (this.selectedFuncionario) {\n      this.selectedFuncionario = null;\n      this.searchTerm = '';\n      this.searchFuncionarios();\n    }\n  }\n}\n\n    \n\n\n    \n            \n    .agenda-container {\n      max-width: 1200px;\n      margin: 0 auto;\n      padding: 2rem;\n    }\n\n    .search-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      margin-bottom: 2rem;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n      transition: all 0.3s ease;\n    }\n\n    .search-section.collapsed {\n      padding: 0.75rem;\n      margin-bottom: 1rem;\n    }\n\n    .search-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      cursor: pointer;\n    }\n\n    .header-content {\n      flex: 1;\n    }\n\n    .header-content h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.1rem;\n      font-weight: 500;\n    }\n\n    .specialty {\n      font-size: 0.9rem;\n      color: #718096;\n    }\n\n    .toggle-btn {\n      background: none;\n      border: none;\n      color: #4a5568;\n      font-size: 1rem;\n      cursor: pointer;\n      padding: 0.25rem;\n      transition: transform 0.3s ease;\n      margin-left: 1rem;\n    }\n\n    .search-content {\n      margin-top: 1rem;\n      transition: all 0.3s ease;\n      max-height: 500px;\n      overflow: hidden;\n    }\n\n    .search-content.hidden {\n      margin-top: 0;\n      max-height: 0;\n      opacity: 0;\n    }\n\n    .search-box {\n      margin-bottom: 1.5rem;\n    }\n\n    .search-input {\n      width: 100%;\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n      transition: border-color 0.2s;\n    }\n\n    .search-input:focus {\n      outline: none;\n      border-color: #4299e1;\n      box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n    }\n\n    .funcionarios-list {\n      display: grid;\n      grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));\n      gap: 1rem;\n    }\n\n    .funcionario-card {\n      background: #f8fafc;\n      padding: 1rem;\n      border-radius: 6px;\n      border: 1px solid #e2e8f0;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .funcionario-card:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n      border-color: #4299e1;\n    }\n\n    .funcionario-card.selected {\n      background: #ebf8ff;\n      border-color: #4299e1;\n    }\n\n    .funcionario-info h3 {\n      margin: 0 0 0.5rem 0;\n      color: #2d3748;\n      font-size: 1.1rem;\n    }\n\n    .funcionario-info p {\n      margin: 0;\n      color: #718096;\n      font-size: 0.9rem;\n    }\n\n    .calendar-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .calendar-section h2 {\n      margin: 0 0 1.5rem 0;\n      color: #2d3748;\n    }\n\n    :host ::ng-deep {\n      .fc {\n        font-family: inherit;\n      }\n\n      .fc-toolbar-title {\n        font-size: 1.2rem !important;\n      }\n\n      .fc-button-primary {\n        background-color: #4299e1 !important;\n        border-color: #3182ce !important;\n      }\n\n      .fc-button-primary:hover {\n        background-color: #3182ce !important;\n        border-color: #2c5282 !important;\n      }\n\n      .fc-event {\n        background-color: #4299e1;\n        border-color: #3182ce;\n      }\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    {{ selectedFuncionario ? selectedFuncionario.nombres + \\' \\' + selectedFuncionario.apellidos : \\'Seleccionar Funcionario\\' }}        {{ selectedFuncionario.especialidad }}                    {{ selectedFuncionario ? \\'▼\\' : \\'▲\\' }}                                         0\">                              {{ funcionario.nombres }} {{ funcionario.apellidos }}            {{ funcionario.especialidad }}                                        '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AgendaComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente principal de la aplicación\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                            RouterModule\n                                ToastComponent\n                \n            \n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                citas\n                            \n                            \n                                    Private\n                                citasSubscription\n                            \n                            \n                                cupos\n                            \n                            \n                                    Private\n                                cuposSubscription\n                            \n                            \n                                error\n                            \n                            \n                                especialidades\n                            \n                            \n                                    Private\n                                especialidadesSubscription\n                            \n                            \n                                funcionarios\n                            \n                            \n                                    Private\n                                funcionariosSubscription\n                            \n                            \n                                loading\n                            \n                            \n                                newEspecialidadTitle\n                            \n                            \n                                pacientes\n                            \n                            \n                                    Private\n                                pacientesSubscription\n                            \n                            \n                                segmentosHorario\n                            \n                            \n                                    Private\n                                segmentosHorarioSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                    Async\n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:46\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de base de datos\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Limpia las suscripciones al destruir el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \n                        \n                    ngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/app.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        citas\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cita[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:32\n                        \n                    \n\n            \n                \n                    Lista de citas médicas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        citasSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        cupos\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Cupo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:30\n                        \n                    \n\n            \n                \n                    Lista de cupos disponibles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        cuposSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:45\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        error\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:38\n                        \n                    \n\n            \n                \n                    Mensaje de error si existe\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        especialidades\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Especialidad[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:22\n                        \n                    \n\n            \n                \n                    Lista de especialidades médicas\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        especialidadesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:41\n                        \n                    \n\n            \n                \n                    Suscripciones a los observables de la base de datos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        funcionarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Funcionario[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:24\n                        \n                    \n\n            \n                \n                    Lista de funcionarios del hospital\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        funcionariosSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:36\n                        \n                    \n\n            \n                \n                    Indica si la aplicación está cargando\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newEspecialidadTitle\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:34\n                        \n                    \n\n            \n                \n                    Título para nueva especialidad\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pacientes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Paciente[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:26\n                        \n                    \n\n            \n                \n                    Lista de pacientes registrados\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        pacientesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:43\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segmentosHorario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         SegmentoHorario[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:28\n                        \n                    \n\n            \n                \n                    Lista de segmentos horarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        segmentosHorarioSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:44\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { RouterModule } from '@angular/router';\nimport { ToastComponent } from './components/toast/toast.component';\nimport { DatabaseService, Especialidad, Funcionario, Paciente, SegmentoHorario, Cupo, Cita } from './services/database.service';\nimport { Subscription } from 'rxjs';\n\n/**\n * Componente principal de la aplicación\n * @description Maneja la inicialización de la base de datos y la gestión de datos globales\n */\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [CommonModule, FormsModule, RouterModule, ToastComponent],\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  /** Lista de especialidades médicas */\n  especialidades: Especialidad[] = [];\n  /** Lista de funcionarios del hospital */\n  funcionarios: Funcionario[] = [];\n  /** Lista de pacientes registrados */\n  pacientes: Paciente[] = [];\n  /** Lista de segmentos horarios */\n  segmentosHorario: SegmentoHorario[] = [];\n  /** Lista de cupos disponibles */\n  cupos: Cupo[] = [];\n  /** Lista de citas médicas */\n  citas: Cita[] = [];\n  /** Título para nueva especialidad */\n  newEspecialidadTitle: string = '';\n  /** Indica si la aplicación está cargando */\n  loading: boolean = true;\n  /** Mensaje de error si existe */\n  error: string | null = null;\n\n  /** Suscripciones a los observables de la base de datos */\n  private especialidadesSubscription: Subscription;\n  private funcionariosSubscription: Subscription;\n  private pacientesSubscription: Subscription;\n  private segmentosHorarioSubscription: Subscription;\n  private cuposSubscription: Subscription;\n  private citasSubscription: Subscription;\n\n  /**\n   * Constructor del componente\n   * @param dbService Servicio de base de datos\n   * @description Inicializa las suscripciones a los observables de la base de datos\n   */\n  constructor(private dbService: DatabaseService) {\n    this.especialidadesSubscription = this.dbService.especialidades$.subscribe(\n      especialidades => this.especialidades = especialidades\n    );\n    this.funcionariosSubscription = this.dbService.funcionarios$.subscribe(\n      funcionarios => this.funcionarios = funcionarios\n    );\n    this.pacientesSubscription = this.dbService.pacientes$.subscribe(\n      pacientes => this.pacientes = pacientes\n    );\n    this.segmentosHorarioSubscription = this.dbService.segmentosHorario$.subscribe(\n      segmentosHorario => this.segmentosHorario = segmentosHorario\n    );\n    this.cuposSubscription = this.dbService.cupos$.subscribe(\n      cupos => this.cupos = cupos\n    );\n    this.citasSubscription = this.dbService.citas$.subscribe(\n      citas => this.citas = citas\n    );\n  }\n\n  /**\n   * Inicializa el componente\n   * @description Inicializa la base de datos y carga los datos iniciales\n   */\n  async ngOnInit() {\n    try {\n      await this.dbService.initializeDatabase();\n      this.dbService.loadEspecialidades();\n      this.loading = false;\n    } catch (err) {\n      this.error = 'Failed to initialize database';\n      this.loading = false;\n      console.error(err);\n    }\n  }\n\n  /**\n   * Limpia las suscripciones al destruir el componente\n   * @description Evita memory leaks cancelando todas las suscripciones\n   */\n  ngOnDestroy() {\n    if (this.especialidadesSubscription) {\n      this.especialidadesSubscription.unsubscribe();\n    }\n    if (this.funcionariosSubscription) {\n      this.funcionariosSubscription.unsubscribe();\n    }\n    if (this.pacientesSubscription) {\n      this.pacientesSubscription.unsubscribe();\n    } \n    if (this.segmentosHorarioSubscription) {\n      this.segmentosHorarioSubscription.unsubscribe();\n    } \n    if (this.cuposSubscription) {\n      this.cuposSubscription.unsubscribe();\n    } \n    if (this.citasSubscription) {\n      this.citasSubscription.unsubscribe();\n    } \n  }\n}\n\n    \n\n    \n        \n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .sqlite-demo {\n  max-width: 800px;\n  margin: 0 auto;\n  padding: 2rem;\n  font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;\n}\n\nheader {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 2rem;\n}\n\nh1 {\n  color: #2d3748;\n  margin: 0;\n}\n\n.export-btn {\n  background-color: #4299e1;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.export-btn:hover {\n  background-color: #3182ce;\n}\n\n.status-bar {\n  margin-bottom: 1rem;\n}\n\n.loading {\n  color: #4299e1;\n}\n\n.error {\n  color: #e53e3e;\n}\n\n.add-task {\n  display: flex;\n  gap: 1rem;\n  margin-bottom: 2rem;\n}\n\n.add-task input {\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  font-size: 1rem;\n}\n\n.add-task button {\n  background-color: #48bb78;\n  color: white;\n  border: none;\n  padding: 0.75rem 1.5rem;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.add-task button:hover {\n  background-color: #38a169;\n}\n\n.tasks-list {\n  background: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n}\n\n.task-item {\n  display: flex;\n  align-items: center;\n  padding: 1rem;\n  border-bottom: 1px solid #e2e8f0;\n}\n\n.task-item:last-child {\n  border-bottom: none;\n}\n\n.checkbox-container {\n  position: relative;\n  padding-left: 35px;\n  cursor: pointer;\n  user-select: none;\n}\n\n.checkbox-container input {\n  position: absolute;\n  opacity: 0;\n  cursor: pointer;\n}\n\n.checkmark {\n  position: absolute;\n  top: 0;\n  left: 0;\n  height: 20px;\n  width: 20px;\n  background-color: #edf2f7;\n  border-radius: 4px;\n}\n\n.checkbox-container:hover input ~ .checkmark {\n  background-color: #e2e8f0;\n}\n\n.checkbox-container input:checked ~ .checkmark {\n  background-color: #48bb78;\n}\n\n.checkmark:after {\n  content: \"\";\n  position: absolute;\n  display: none;\n}\n\n.checkbox-container input:checked ~ .checkmark:after {\n  display: block;\n}\n\n.checkbox-container .checkmark:after {\n  left: 7px;\n  top: 3px;\n  width: 5px;\n  height: 10px;\n  border: solid white;\n  border-width: 0 2px 2px 0;\n  transform: rotate(45deg);\n}\n\n.completed {\n  text-decoration: line-through;\n  color: #a0aec0;\n}\n\n.delete-btn {\n  margin-left: auto;\n  background-color: #fc8181;\n  color: white;\n  border: none;\n  padding: 0.5rem 1rem;\n  border-radius: 6px;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.delete-btn:hover {\n  background-color: #f56565;\n}\n\n.no-tasks {\n  text-align: center;\n  color: #a0aec0;\n  padding: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cita.html":{"url":"interfaces/Cita.html","title":"interface - Cita","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Cita\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa una cita médica\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            cup_id\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            pac_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cup_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        cup_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        pac_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        pac_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Cupo.html":{"url":"interfaces/Cupo.html","title":"interface - Cupo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Cupo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa un cupo de atención\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            duracion\n                                        \n                                \n                                \n                                        \n                                            estado\n                                        \n                                \n                                \n                                        \n                                            fecha_hora_fin\n                                        \n                                \n                                \n                                        \n                                            fecha_hora_inicio\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        duracion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        duracion:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        estado\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        estado:         Estado\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Estado\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha_hora_fin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha_hora_fin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha_hora_inicio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha_hora_inicio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/dashboard/dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja el panel principal de la aplicación\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-dashboard\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            RouterLink\n                            RouterOutlet\n                                ProfileModalComponent\n                \n            \n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                            \n                                navItems\n                            \n                            \n                                showProfileModal\n                            \n                            \n                                showUserMenu\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeProfileModal\n                            \n                            \n                                getUserFullName\n                            \n                            \n                                getUserInitials\n                            \n                            \n                                getUserSpecialty\n                            \n                            \n                                logout\n                            \n                            \n                                openProfileModal\n                            \n                            \n                                toggleUserMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    authorizedNavItems\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, dbService: DatabaseService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/dashboard/dashboard.component.ts:65\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeProfileModal\n                        \n                    \n                \n            \n            \n                \ncloseProfileModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:131\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserFullName\n                        \n                    \n                \n            \n            \n                \ngetUserFullName()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:119\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserInitials\n                        \n                    \n                \n            \n            \n                \ngetUserInitials()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:87\n                        \n                    \n\n\n            \n                \n                        Obtiene las iniciales del usuario actual\n\n\n                        \n                            Returns :         string\n\n                        \n                            \n                                String con las iniciales del nombre y apellido\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserSpecialty\n                        \n                    \n                \n            \n            \n                \ngetUserSpecialty()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:123\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Cierra la sesión del usuario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openProfileModal\n                        \n                    \n                \n            \n            \n                \nopenProfileModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:127\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleUserMenu\n                        \n                    \n                \n            \n            \n                \ntoggleUserMenu()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/dashboard/dashboard.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Alterna la visibilidad del menú de usuario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentUser\n                        \n                    \n                \n            \n                \n                    \n                        Default value : JSON.parse(localStorage.getItem('currentUser') || '{}')\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:37\n                        \n                    \n\n            \n                \n                    Usuario actualmente autenticado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navItems\n                        \n                    \n                \n            \n                \n                    \n                        Type :         NavItem[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      path: 'inscripcion',\n      icon: '👥',\n      label: 'Inscripción',\n      description: 'Gestiona los pacientes',\n      requiredRole: 'USA_INSCRIPCION'\n    },\n    {\n      path: 'agenda',\n      icon: '📅',\n      label: 'Agenda',\n      description: 'Gestiona los horarios',\n      requiredRole: 'USA_AGENDA'\n    },\n    {\n      path: 'citas',\n      icon: '🕒',\n      label: 'Citas',\n      description: 'Administra las citas médicas',\n      requiredRole: 'USA_CITAS'\n    }\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:43\n                        \n                    \n\n            \n                \n                    Lista de elementos de navegación con sus permisos\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showProfileModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:40\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showUserMenu\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/dashboard/dashboard.component.ts:39\n                        \n                    \n\n            \n                \n                    Indica si el menú de usuario está visible\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        authorizedNavItems\n                    \n                \n\n                \n                    \n                        getauthorizedNavItems()\n                    \n                \n                            \n                                \n                                    Defined in src/app/dashboard/dashboard.component.ts:77\n                                \n                            \n                    \n                        \n                                Obtiene los elementos de navegación autorizados para el usuario actual\n\n\n                                \n                                \n                                \n                                    Returns :         NavItem[]\n\n                                \n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterLink, RouterOutlet } from '@angular/router';\nimport { DatabaseService } from '../services/database.service';\nimport { ToastService } from '../services/toast.service';\nimport { ProfileModalComponent } from '../components/profile-modal/profile-modal.component';\n\n/**\n * Interfaz que define la estructura de un elemento de navegación\n */\ninterface NavItem {\n  /** Ruta del componente */\n  path: string;\n  /** Ícono a mostrar */\n  icon: string;\n  /** Etiqueta del elemento */\n  label: string;\n  /** Descripción de la funcionalidad */\n  description: string;\n  /** Rol requerido para acceder */\n  requiredRole: string;\n}\n\n/**\n * Componente que maneja el panel principal de la aplicación\n * @description Muestra la navegación principal y gestiona el acceso basado en roles\n */\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule, RouterLink, RouterOutlet, ProfileModalComponent],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  /** Usuario actualmente autenticado */\n  currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n  /** Indica si el menú de usuario está visible */\n  showUserMenu = false;\n  showProfileModal = false;\n\n  /** Lista de elementos de navegación con sus permisos */\n  navItems: NavItem[] = [\n    {\n      path: 'inscripcion',\n      icon: '👥',\n      label: 'Inscripción',\n      description: 'Gestiona los pacientes',\n      requiredRole: 'USA_INSCRIPCION'\n    },\n    {\n      path: 'agenda',\n      icon: '📅',\n      label: 'Agenda',\n      description: 'Gestiona los horarios',\n      requiredRole: 'USA_AGENDA'\n    },\n    {\n      path: 'citas',\n      icon: '🕒',\n      label: 'Citas',\n      description: 'Administra las citas médicas',\n      requiredRole: 'USA_CITAS'\n    }\n  ];\n\n  constructor(\n    private router: Router,\n    private dbService: DatabaseService,\n    private toastService: ToastService\n  ) {}\n\n  /**\n   * Obtiene los elementos de navegación autorizados para el usuario actual\n   * @returns Lista filtrada de elementos de navegación según los roles del usuario\n   */\n  get authorizedNavItems(): NavItem[] {\n    return this.navItems.filter(item => \n      this.dbService.hasRole(this.currentUser.id, item.requiredRole)\n    );\n  }\n\n  /**\n   * Obtiene las iniciales del usuario actual\n   * @returns String con las iniciales del nombre y apellido\n   */\n  getUserInitials(): string {\n    return `${this.currentUser.nombres?.[0] || ''}${this.currentUser.apellidos?.[0] || ''}`;\n  }\n\n  /**\n   * Alterna la visibilidad del menú de usuario\n   * @description Muestra u oculta el menú desplegable\n   */\n  toggleUserMenu() {\n    this.showUserMenu = !this.showUserMenu;\n  }\n\n  /**\n   * Cierra la sesión del usuario\n   * @description Limpia el localStorage y redirige al inicio\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    \n    const now = new Date();\n    const timeStr = now.toLocaleString('es-CL', { \n      hour: '2-digit', \n      minute: '2-digit',\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n    this.toastService.show(`Cierre de sesión exitoso @ ${timeStr}`, 'success');\n    \n    this.router.navigate(['/']);\n  }\n\n  getUserFullName(): string {\n    return `${this.currentUser.nombres} ${this.currentUser.apellidos}`;\n  }\n\n  getUserSpecialty(): string {\n    return this.currentUser.especialidad;\n  }\n\n  openProfileModal() {\n    this.showProfileModal = true;\n  }\n\n  closeProfileModal() {\n    this.showProfileModal = false;\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        \n          Hospital Scheduler\n          HS\n        \n        \n          \n            {{ item.icon }}\n            {{ item.label }}\n          \n        \n      \n      \n        \n          {{ getUserInitials() }}\n        \n        \n          \n            {{ getUserFullName() }}\n            {{ getUserSpecialty() }}\n           -->\n          \n            🔧\n            Modificar Perfil\n          \n          \n            🚪\n            Cerrar Sesión\n          \n        \n      \n    \n  \n\n  \n    \n    \n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                .dashboard {\n  min-height: 100vh;\n  background-color: #f8fafc;\n}\n\n.main-header {\n  background: white;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  z-index: 1000;\n}\n\n.header-content {\n  max-width: 1400px;\n  margin: 0 auto;\n  padding: 1rem 2rem;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.header-left {\n  display: flex;\n  align-items: center;\n  gap: 2rem;\n}\n\n.app-title {\n  font-size: 1.5rem;\n  color: #2c5282;\n  margin: 0;\n  font-weight: 600;\n}\n\n.main-nav {\n  display: flex;\n  gap: 1rem;\n}\n\n.nav-link {\n  text-decoration: none;\n  color: #4a5568;\n  padding: 0.5rem 1rem;\n  border-radius: 6px;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  transition: all 0.2s;\n}\n\n.nav-link:hover {\n  background-color: #edf2f7;\n  color: #2c5282;\n}\n\n.nav-link.active {\n  background-color: #ebf8ff;\n  color: #2c5282;\n  font-weight: 500;\n}\n\n.nav-icon {\n  font-size: 1.2rem;\n}\n\n.header-right {\n  display: flex;\n  align-items: center;\n}\n\n.user-menu {\n  position: relative;\n}\n\n.user-info {\n  text-align: right;\n}\n\n.user-name {\n  display: block;\n  font-weight: 500;\n  color: #2d3748;\n}\n\n.user-role {\n  display: block;\n  font-size: 0.875rem;\n  color: #718096;\n}\n\n.avatar {\n  width: 40px;\n  height: 40px;\n  background-color: #4299e1;\n  color: white;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n}\n\n.logout-btn {\n  width: 100%;\n  padding: 0.75rem 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: none;\n  border: none;\n  border-radius: 4px;\n  color: #e53e3e;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.logout-btn:hover {\n  background-color: #fff5f5;\n}\n\n.main-content {\n  padding: 6rem 2rem 2rem;\n  max-width: 1400px;\n  margin: 0 auto;\n}\n\n/* @media (max-width: 1024px) {\n  .header-content {\n    flex-direction: row;\n    gap: 1rem;\n  }\n\n  .header-left {\n    flex-direction: column;\n    align-items: stretch;\n    gap: 1rem;\n  }\n\n  .main-nav {\n    flex-wrap: wrap;\n  }\n\n  .nav-link {\n    flex: 1;\n    justify-content: center;\n  }\n\n  .user-menu {\n    width: 100%;\n    justify-content: space-between;\n  }\n  .user-circle {\n    margin-left: auto;\n  }\n} */\n\n@media (max-width: 640px) {\n  .header-content {\n    padding: 1rem;\n  }\n\n  .user-info {\n    display: none;\n  }\n}\n\n.app-title .short-title {\n  display: none;\n}\n\n.nav-link {\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n}\n\n.nav-icon {\n  font-size: 1.2rem;\n  min-width: 1.5rem;\n  text-align: center;\n}\n\n@media (max-width: 768px) {\n  .header-content {\n    flex-direction: column;\n    padding: 0.5rem;\n  }\n\n  .header-left {\n    flex-direction: row;\n    width: 100%;\n    justify-content: center;\n    gap: 0.5rem;\n  }\n\n  .app-title .full-title {\n    display: none;\n  }\n\n  .app-title .short-title {\n    display: inline;\n  }\n\n  .main-nav {\n    display: flex;\n    justify-content: center;\n    gap: 0.5rem;\n    width: 100%;\n  }\n\n  .nav-label {\n    display: none;\n  }\n\n  .nav-link {\n    padding: 0.5rem;\n    justify-content: center;\n  }\n\n  .user-info {\n    display: none;\n  }\n\n  .logout-btn .label {\n    display: none;\n  }\n\n  .main-content {\n    padding: 4rem 1rem 1rem;\n  }\n\n  .user-menu {\n    position: absolute;\n    top: 0.5rem;\n    right: 0.5rem;\n  }\n\n  .dropdown-menu {\n    right: 0;\n  }\n}\n\n/* Mobile */\n@media (max-width: 576px) {\n  .nav-link {\n    padding: 0.4rem;\n  }\n\n  .nav-icon {\n    font-size: 1.1rem;\n  }\n\n  .main-nav {\n    justify-content: space-around;\n  }\n\n  .main-content {\n    padding: 3.5rem 0.5rem 0.5rem !important;\n  }\n}\n\n.user-circle {\n  width: 40px;\n  height: 40px;\n  background-color: #4299e1;\n  color: white;\n  border-radius: 50%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-weight: 600;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.user-circle:hover {\n  background-color: #3182ce;\n}\n\n.dropdown-menu {\n  position: absolute;\n  top: 100%;\n  right: 0;\n  margin-top: 0.5rem;\n  background: white;\n  border-radius: 6px;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n  padding: 0.5rem;\n  min-width: 150px;\n  z-index: 100;\n}\n\n.user-speciality {\n  font-size: 0.8rem;\n  color: #718096;\n}\n\n.user-info {\n  text-align: center;\n}\n\n.profile-btn {\n  width: 100%;\n  padding: 0.75rem 1rem;\n  display: flex;\n  align-items: center;\n  gap: 0.5rem;\n  background: none;\n  border: none;\n  border-radius: 4px;\n  color: #2c5282;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.profile-btn:hover {\n  background-color: #ebf8ff;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              Hospital Scheduler          HS                                      {{ item.icon }}            {{ item.label }}                                                {{ getUserInitials() }}                                      {{ getUserFullName() }}            {{ getUserSpecialty() }}           -->                      🔧            Modificar Perfil                                🚪            Cerrar Sesión                                          '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Especialidad.html":{"url":"interfaces/Especialidad.html","title":"interface - Especialidad","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Especialidad\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa una especialidad médica\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Funcionario.html":{"url":"interfaces/Funcionario.html","title":"interface - Funcionario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Funcionario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa un funcionario del hospital\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apellidos\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            esp_id\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            especialidad\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombres\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            rut\n                                        \n                                \n                                \n                                        \n                                            telefono\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apellidos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apellidos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        esp_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        esp_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        especialidad\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        especialidad:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombres:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        telefono\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        telefono:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FuncionarioWithAvailability.html":{"url":"interfaces/FuncionarioWithAvailability.html","title":"interface - FuncionarioWithAvailability","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FuncionarioWithAvailability\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/citas/citas.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que extiende Funcionario con información de disponibilidad\n\n            \n\n            \n                Extends\n            \n            \n                            Funcionario\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            hasAvailableSegments\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        hasAvailableSegments\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        hasAvailableSegments:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                            \n                                \n                                    Indica si el funcionario tiene segmentos disponibles esta semana\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component, OnInit, ViewChild, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatabaseService, Funcionario, SegmentoHorario, Paciente } from '../services/database.service';\nimport { CalendarOptions, EventInput } from '@fullcalendar/core';\nimport { FullCalendarModule, FullCalendarComponent } from '@fullcalendar/angular';\nimport dayGridPlugin from '@fullcalendar/daygrid';\nimport timeGridPlugin from '@fullcalendar/timegrid';\nimport interactionPlugin from '@fullcalendar/interaction';\nimport { ToastService } from '../services/toast.service';\n\n/**\n * Componente que maneja la asignación de citas médicas\n * @description Permite asignar pacientes a segmentos horarios de funcionarios\n */\n@Component({\n  selector: 'app-citas',\n  standalone: true,\n  imports: [CommonModule, FormsModule, FullCalendarModule],\n  templateUrl: './citas.component.html',\n  styleUrls: ['./citas.component.css']\n})\nexport class CitasComponent implements OnInit {\n  /** Referencia al componente de calendario */\n  @ViewChild('calendar') calendarComponent!: FullCalendarComponent;\n  \n  /** Término de búsqueda para funcionarios */\n  searchTerm: string = '';\n  /** RUT del paciente a buscar */\n  searchRut: string = '';\n  /** Lista de funcionarios con información de disponibilidad */\n  funcionarios: FuncionarioWithAvailability[] = [];\n  /** Lista filtrada de funcionarios */\n  filteredFuncionarios: FuncionarioWithAvailability[] = [];\n  /** Funcionario seleccionado actualmente */\n  selectedFuncionario: Funcionario | null = null;\n  /** Segmento horario seleccionado */\n  selectedSegmento: SegmentoHorario | null = null;\n  /** Paciente seleccionado */\n  selectedPaciente: Paciente | null = null;\n  /** Indica si se debe mostrar el modal de asignación */\n  showAssignModal = false;\n  /** Indica si hay un error que mostrar */\n  showError = false;\n  /** Indica si hay un mensaje de éxito que mostrar */\n  showSuccess = false;\n  /** Mensaje de error */\n  errorMessage = '';\n  /** Mensaje de éxito */\n  successMessage = '';\n  /** Indica si la pantalla es pequeña */\n  isSmallScreen: boolean = false;\n  /** Lista de pacientes */\n  pacientes: Paciente[] = [];\n\n  /** Configuración del calendario */\n  calendarOptions: CalendarOptions = {\n    plugins: [dayGridPlugin, timeGridPlugin, interactionPlugin],\n    initialView: window.innerWidth  {\n        this.funcionarios = funcionarios.map(f => ({\n          ...f,\n          hasAvailableSegments: this.checkFuncionarioAvailability(f.id)\n        }));\n        this.filteredFuncionarios = this.funcionarios;\n      }\n    );\n\n    // Subscribe to pacientes\n    this.dbService.pacientes$.subscribe(\n      pacientes => this.pacientes = pacientes\n    );\n\n    this.checkScreenSize();\n  }\n\n  /**\n   * Verifica el tamaño de la pantalla\n   * @description Actualiza isSmallScreen y la vista del calendario\n   * @private\n   */\n  private checkScreenSize() {\n    const wasSmallScreen = this.isSmallScreen;\n    this.isSmallScreen = window.innerWidth  {\n      const segmentoDate = new Date(segmento.fecha_hora_inicio);\n      return segmento.free && \n             segmentoDate >= startOfWeek && \n             segmentoDate  \n      funcionario.nombres.toLowerCase().includes(searchTermLower) ||\n      funcionario.apellidos.toLowerCase().includes(searchTermLower)\n    );\n  }\n\n  /**\n   * Selecciona un funcionario y carga sus segmentos\n   * @param funcionario Funcionario seleccionado\n   */\n  selectFuncionario(funcionario: Funcionario) {\n    this.selectedFuncionario = funcionario;\n    this.loadSegmentos(funcionario.id);\n    \n    setTimeout(() => {\n      this.updateCalendarView();\n    }, 0);\n  }\n\n  /**\n   * Carga los segmentos de un funcionario en el calendario\n   * @param funcionarioId ID del funcionario\n   */\n  loadSegmentos(funcionarioId: number) {\n    const segmentos = this.dbService.getSegmentosHorarioByFuncionarioId(funcionarioId);\n    const events: EventInput[] = segmentos.map(segmento => ({\n      id: segmento.id.toString(),\n      title: segmento.nombre,\n      start: segmento.fecha_hora_inicio,\n      end: segmento.fecha_hora_fin,\n      backgroundColor: segmento.free ? '#48bb78' : '#fc8181',\n      borderColor: segmento.free ? '#38a169' : '#f56565',\n      extendedProps: {\n        segmento: segmento\n      }\n    }));\n\n    this.calendarOptions.events = events;\n  }\n\n  /**\n   * Maneja el clic en un evento del calendario\n   * @param clickInfo Información del evento clickeado\n   * @description Abre el modal de asignación si el segmento está disponible\n   */\n  handleEventClick(clickInfo: any) {\n    const segmento = clickInfo.event.extendedProps.segmento as SegmentoHorario;\n    if (segmento.free) {\n      this.selectedSegmento = segmento;\n      this.showAssignModal = true;\n    } else {\n      alert('Este horario ya está ocupado');\n    }\n  }\n\n  /**\n   * Formatea el RUT mientras el usuario escribe\n   * @param event Evento de input\n   * @description Agrega puntos y guión al RUT\n   */\n  onRutInput(event: any) {\n    const input = event.target;\n    let rut = input.value.replace(/\\./g, '').replace(/-/g, '');\n    rut = rut.replace(/[^0-9kK]/g, '');\n    \n    if (rut.length > 0) {\n      let result = rut;\n      if (rut.length > 1) {\n        result = rut.slice(0, -1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') + '-' + rut.slice(-1);\n      }\n      input.value = result;\n    }\n  }\n\n  /**\n   * Busca un paciente por RUT\n   * @description Actualiza selectedPaciente y muestra mensajes de éxito/error\n   */\n  searchPaciente() {\n    if (!this.searchRut) {\n      this.showError = true;\n      this.errorMessage = 'Ingrese un RUT para buscar';\n      return;\n    }\n\n    const paciente = this.dbService.getPacienteByRut(this.searchRut);\n    if (paciente) {\n      this.selectedPaciente = paciente;\n      this.showSuccess = true;\n      this.successMessage = 'Paciente encontrado';\n    } else {\n      this.showError = true;\n      this.errorMessage = 'Paciente no encontrado';\n      this.selectedPaciente = null;\n    }\n  }\n\n  /**\n   * Asigna un paciente a un segmento horario\n   * @description Marca el segmento como ocupado y muestra mensaje de éxito\n   */\n  assignPaciente() {\n    if (!this.selectedSegmento || !this.selectedPaciente) return;\n\n    try {\n      \n      this.dbService.assignSegmentoToPaciente(this.selectedPaciente.id, this.selectedSegmento.id);\n      \n      this.toastService.show('Cita creada exitosamente', 'success');\n      \n      this.selectedSegmento = null;\n      this.selectedPaciente = null;\n      this.searchRut = '';\n      \n      if (this.selectedFuncionario) {\n        this.loadSegmentos(this.selectedFuncionario.id);\n      }\n      \n      this.closeAssignModal();\n    } catch (error) {\n      this.showError = true;\n      this.errorMessage = 'Error al asignar la cita';\n      console.error(error);\n    }\n    this.funcionarios = this.funcionarios.map(f => ({\n      ...f,\n      hasAvailableSegments: this.checkFuncionarioAvailability(f.id)\n    }));\n  }\n\n  /**\n   * Cierra el modal de asignación\n   * @description Limpia las selecciones actuales\n   */\n  closeAssignModal() {\n    this.showAssignModal = false;\n    this.selectedSegmento = null;\n    this.selectedPaciente = null;\n    this.searchRut = '';\n  }\n\n  /**\n   * Alterna la visibilidad de la sección de búsqueda\n   * @description Limpia la selección actual si está colapsada\n   */\n  toggleSearch() {\n    if (this.selectedFuncionario) {\n      this.selectedFuncionario = null;\n      this.searchTerm = '';\n      this.filteredFuncionarios = this.funcionarios;\n      this.calendarOptions.events = [];\n    }\n  }\n}\n\n/**\n * Interfaz que extiende Funcionario con información de disponibilidad\n */\ninterface FuncionarioWithAvailability extends Funcionario {\n  /** Indica si el funcionario tiene segmentos disponibles esta semana */\n  hasAvailableSegments?: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FuncionariosComponent.html":{"url":"components/FuncionariosComponent.html","title":"component - FuncionariosComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FuncionariosComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/funcionarios/funcionarios.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja la gestión de funcionarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-funcionarios\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            FormsModule\n                \n            \n\n\n            \n                styles\n                \n    .funcionarios-container {\n      padding: 2rem;\n      max-width: 1200px;\n      margin: 0 auto;\n      display: flex;\n      flex-direction: column;\n      gap: 2rem;\n    }\n\n    .search-section, .form-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .search-box {\n      margin-bottom: 1.5rem;\n    }\n\n    .search-input {\n      width: 100%;\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .funcionarios-list {\n      display: grid;\n      gap: 1rem;\n    }\n\n    .funcionario-card {\n      padding: 1rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .funcionario-card:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n    }\n\n    .funcionario-card.selected {\n      border-color: #4299e1;\n      background-color: #ebf8ff;\n    }\n\n    .form-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      font-weight: 500;\n      color: #4a5568;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .form-group input.error,\n    .form-group select.error {\n      border-color: #fc8181;\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .form-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      margin-top: 2rem;\n    }\n\n    .submit-btn, .cancel-btn, .delete-btn {\n      padding: 0.75rem 1.5rem;\n      border-radius: 6px;\n      font-weight: 500;\n      cursor: pointer;\n      border: none;\n    }\n\n    .submit-btn {\n      background-color: #4299e1;\n      color: white;\n    }\n\n    .cancel-btn {\n      background-color: #e2e8f0;\n      color: #4a5568;\n    }\n\n    .delete-btn {\n      background-color: #fc8181;\n      color: white;\n    }\n\n    .submit-btn:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  \n            \n\n            \n                template\n                \n  \n    Buscar Funcionario\n    \n      \n    \n\n     0\">\n      \n        \n          {{ funcionario.nombres }} {{ funcionario.apellidos }}\n          {{ funcionario.especialidad }}\n          {{ funcionario.email }}\n          {{ funcionario.telefono }}\n        \n      \n    \n\n    \n      No se encontraron funcionarios\n    \n  \n\n  \n    \n      {{ selectedFuncionario ? 'Editar' : 'Nuevo' }} Funcionario\n      \n        Eliminar\n      \n    \n\n    \n      \n        \n          Nombres\n          \n          \n            {{ getErrorMessage('nombres') }}\n          \n        \n\n        \n          Apellidos\n          \n          \n            {{ getErrorMessage('apellidos') }}\n          \n        \n      \n\n      \n        \n          Correo Electrónico\n          \n          \n            {{ getErrorMessage('email') }}\n          \n        \n\n        \n          Teléfono\n          \n          \n            {{ getErrorMessage('telefono') }}\n          \n        \n      \n\n      \n        \n          Especialidad\n          \n            Seleccione una especialidad\n            \n              {{ esp.nombre }}\n            \n          \n          \n            {{ getErrorMessage('esp_id') }}\n          \n        \n\n        \n          Contraseña\n          \n          \n            {{ getErrorMessage('password') }}\n          \n        \n      \n\n      \n        {{ errorMessage }}\n        {{ successMessage }}\n      \n\n      \n        \n          Cancelar\n        \n        \n          {{ isLoading ? 'Guardando...' : (selectedFuncionario ? 'Actualizar' : 'Guardar') }}\n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                especialidades\n                            \n                            \n                                filteredFuncionarios\n                            \n                            \n                                funcionarioForm\n                            \n                            \n                                funcionarios\n                            \n                            \n                                isLoading\n                            \n                            \n                                searchTerm\n                            \n                            \n                                selectedFuncionario\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                            \n                                successMessage\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteFuncionario\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                getEspecialidadNombre\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                            \n                                searchFuncionarios\n                            \n                            \n                                selectFuncionario\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dbService: DatabaseService)\n                    \n                \n                        \n                            \n                                Defined in src/app/funcionarios/funcionarios.component.ts:332\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteFuncionario\n                        \n                    \n                \n            \n            \n                \ndeleteFuncionario()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:494\n                        \n                    \n\n\n            \n                \n                        Elimina un funcionario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:436\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje de error para un campo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Mensaje de error correspondiente al tipo de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getEspecialidadNombre\n                        \n                    \n                \n            \n            \n                \ngetEspecialidadNombre(esp_id: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:395\n                        \n                    \n\n\n            \n                \n                        Obtiene el nombre de una especialidad por su ID\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                esp_id\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    ID de la especialidad\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Nombre de la especialidad\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:426\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo del formulario es inválido\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo a verificar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el campo es inválido y ha sido tocado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:368\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:454\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:513\n                        \n                    \n\n\n            \n                \n                        Reinicia el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchFuncionarios\n                        \n                    \n                \n            \n            \n                \nsearchFuncionarios()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:377\n                        \n                    \n\n\n            \n                \n                        Filtra funcionarios según término de búsqueda\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectFuncionario\n                        \n                    \n                \n            \n            \n                \nselectFuncionario(funcionario: Funcionario)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/funcionarios/funcionarios.component.ts:405\n                        \n                    \n\n\n            \n                \n                        Selecciona un funcionario para edición\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                funcionario\n                                            \n                                                            Funcionario\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Funcionario a editar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:328\n                        \n                    \n\n            \n                \n                    Mensaje de error\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        especialidades\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:316\n                        \n                    \n\n            \n                \n                    Lista de especialidades disponibles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        filteredFuncionarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Funcionario[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:318\n                        \n                    \n\n            \n                \n                    Lista filtrada de funcionarios según búsqueda\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        funcionarioForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:312\n                        \n                    \n\n            \n                \n                    Formulario reactivo para la gestión de funcionarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        funcionarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Funcionario[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:314\n                        \n                    \n\n            \n                \n                    Lista completa de funcionarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:332\n                        \n                    \n\n            \n                \n                    Indica si hay una operación en curso\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchTerm\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:322\n                        \n                    \n\n            \n                \n                    Término de búsqueda\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedFuncionario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Funcionario | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:320\n                        \n                    \n\n            \n                \n                    Funcionario seleccionado para edición\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:324\n                        \n                    \n\n            \n                \n                    Indica si hay un error que mostrar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:326\n                        \n                    \n\n            \n                \n                    Indica si hay un mensaje de éxito que mostrar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/funcionarios/funcionarios.component.ts:330\n                        \n                    \n\n            \n                \n                    Mensaje de éxito\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatabaseService, Funcionario } from '../services/database.service';\n\n/**\n * Componente que maneja la gestión de funcionarios\n * @description Permite buscar, crear, editar y eliminar funcionarios del sistema\n */\n@Component({\n  selector: 'app-funcionarios',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FormsModule],\n  template: `\n    \n      \n        Buscar Funcionario\n        \n          \n        \n\n         0\">\n          \n            \n              {{ funcionario.nombres }} {{ funcionario.apellidos }}\n              {{ funcionario.especialidad }}\n              {{ funcionario.email }}\n              {{ funcionario.telefono }}\n            \n          \n        \n\n        \n          No se encontraron funcionarios\n        \n      \n\n      \n        \n          {{ selectedFuncionario ? 'Editar' : 'Nuevo' }} Funcionario\n          \n            Eliminar\n          \n        \n\n        \n          \n            \n              Nombres\n              \n              \n                {{ getErrorMessage('nombres') }}\n              \n            \n\n            \n              Apellidos\n              \n              \n                {{ getErrorMessage('apellidos') }}\n              \n            \n          \n\n          \n            \n              Correo Electrónico\n              \n              \n                {{ getErrorMessage('email') }}\n              \n            \n\n            \n              Teléfono\n              \n              \n                {{ getErrorMessage('telefono') }}\n              \n            \n          \n\n          \n            \n              Especialidad\n              \n                Seleccione una especialidad\n                \n                  {{ esp.nombre }}\n                \n              \n              \n                {{ getErrorMessage('esp_id') }}\n              \n            \n\n            \n              Contraseña\n              \n              \n                {{ getErrorMessage('password') }}\n              \n            \n          \n\n          \n            {{ errorMessage }}\n            {{ successMessage }}\n          \n\n          \n            \n              Cancelar\n            \n            \n              {{ isLoading ? 'Guardando...' : (selectedFuncionario ? 'Actualizar' : 'Guardar') }}\n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .funcionarios-container {\n      padding: 2rem;\n      max-width: 1200px;\n      margin: 0 auto;\n      display: flex;\n      flex-direction: column;\n      gap: 2rem;\n    }\n\n    .search-section, .form-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .search-box {\n      margin-bottom: 1.5rem;\n    }\n\n    .search-input {\n      width: 100%;\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .funcionarios-list {\n      display: grid;\n      gap: 1rem;\n    }\n\n    .funcionario-card {\n      padding: 1rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .funcionario-card:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n    }\n\n    .funcionario-card.selected {\n      border-color: #4299e1;\n      background-color: #ebf8ff;\n    }\n\n    .form-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      font-weight: 500;\n      color: #4a5568;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .form-group input.error,\n    .form-group select.error {\n      border-color: #fc8181;\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .form-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      margin-top: 2rem;\n    }\n\n    .submit-btn, .cancel-btn, .delete-btn {\n      padding: 0.75rem 1.5rem;\n      border-radius: 6px;\n      font-weight: 500;\n      cursor: pointer;\n      border: none;\n    }\n\n    .submit-btn {\n      background-color: #4299e1;\n      color: white;\n    }\n\n    .cancel-btn {\n      background-color: #e2e8f0;\n      color: #4a5568;\n    }\n\n    .delete-btn {\n      background-color: #fc8181;\n      color: white;\n    }\n\n    .submit-btn:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  `]\n})\nexport class FuncionariosComponent implements OnInit {\n  /** Formulario reactivo para la gestión de funcionarios */\n  funcionarioForm: FormGroup;\n  /** Lista completa de funcionarios */\n  funcionarios: Funcionario[] = [];\n  /** Lista de especialidades disponibles */\n  especialidades: any[] = [];\n  /** Lista filtrada de funcionarios según búsqueda */\n  filteredFuncionarios: Funcionario[] = [];\n  /** Funcionario seleccionado para edición */\n  selectedFuncionario: Funcionario | null = null;\n  /** Término de búsqueda */\n  searchTerm: string = '';\n  /** Indica si hay un error que mostrar */\n  showError = false;\n  /** Indica si hay un mensaje de éxito que mostrar */\n  showSuccess = false;\n  /** Mensaje de error */\n  errorMessage = '';\n  /** Mensaje de éxito */\n  successMessage = '';\n  /** Indica si hay una operación en curso */\n  isLoading = false;\n\n  constructor(\n    private fb: FormBuilder,\n    private dbService: DatabaseService\n  ) {\n    this.funcionarioForm = this.fb.group({\n      nombres: ['', [Validators.required, Validators.minLength(2)]],\n      apellidos: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.required, Validators.email]],\n      telefono: ['', [Validators.required, Validators.pattern(/^[0-9\\-\\+]{9,}$/)]],\n      password: ['', [Validators.required, Validators.minLength(6)]],\n      esp_id: ['', Validators.required]\n    });\n\n    this.dbService.funcionarios$.subscribe(\n      funcionarios => {\n        this.funcionarios = funcionarios.map(funcionario => ({\n          ...funcionario,\n          especialidad: this.getEspecialidadNombre(funcionario.esp_id)\n        }));\n        this.searchFuncionarios();\n      }\n    );\n\n    this.dbService.especialidades$.subscribe(\n      especialidades => {\n        this.especialidades = especialidades;\n      }\n    );\n  }\n\n  /**\n   * Inicializa el componente\n   * @description Carga los funcionarios y especialidades\n   */\n  ngOnInit() {\n    this.dbService.loadFuncionarios();\n    this.dbService.loadEspecialidades();\n  }\n\n  /**\n   * Filtra funcionarios según término de búsqueda\n   * @description Actualiza filteredFuncionarios basado en searchTerm\n   */\n  searchFuncionarios() {\n    if (!this.searchTerm.trim()) {\n      this.filteredFuncionarios = [];\n      return;\n    }\n\n    const searchTermLower = this.searchTerm.toLowerCase();\n    this.filteredFuncionarios = this.funcionarios.filter(funcionario => \n      funcionario.nombres.toLowerCase().includes(searchTermLower) ||\n      funcionario.apellidos.toLowerCase().includes(searchTermLower)\n    );\n  }\n\n  /**\n   * Obtiene el nombre de una especialidad por su ID\n   * @param esp_id ID de la especialidad\n   * @returns Nombre de la especialidad\n   */\n  getEspecialidadNombre(esp_id: number): string {\n    const especialidad = this.especialidades.find(esp => esp.id === esp_id);\n    return especialidad ? especialidad.nombre : '';\n  }\n\n  /**\n   * Selecciona un funcionario para edición\n   * @param funcionario Funcionario a editar\n   * @description Carga los datos del funcionario en el formulario\n   */\n  selectFuncionario(funcionario: Funcionario) {\n    this.selectedFuncionario = funcionario;\n    \n    this.funcionarioForm.setValue({\n      nombres: funcionario.nombres || '',\n      apellidos: funcionario.apellidos || '',\n      email: funcionario.email || '',\n      telefono: funcionario.telefono || '',\n      esp_id: funcionario.esp_id || '',\n      password: ''\n    });\n\n    this.funcionarioForm.markAsPristine();\n    this.funcionarioForm.markAsUntouched();\n  }\n\n  /**\n   * Verifica si un campo del formulario es inválido\n   * @param fieldName Nombre del campo a verificar\n   * @returns boolean indicando si el campo es inválido y ha sido tocado\n   */\n  isFieldInvalid(fieldName: string): boolean {\n    const field = this.funcionarioForm.get(fieldName);\n    return field ? (field.invalid && (field.dirty || field.touched)) : false;\n  }\n\n  /**\n   * Obtiene el mensaje de error para un campo\n   * @param fieldName Nombre del campo\n   * @returns Mensaje de error correspondiente al tipo de error\n   */\n  getErrorMessage(fieldName: string): string {\n    const control = this.funcionarioForm.get(fieldName);\n    if (control?.errors) {\n      if (control.errors['required']) return 'Este campo es requerido';\n      if (control.errors['minlength']) return `Mínimo ${control.errors['minlength'].requiredLength} caracteres`;\n      if (control.errors['email']) return 'Email inválido';\n      if (control.errors['pattern']) {\n        if (fieldName === 'telefono') return 'Formato de teléfono inválido';\n        return 'Formato inválido';\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Maneja el envío del formulario\n   * @description Crea o actualiza un funcionario según el modo actual\n   */\n  onSubmit() {\n    if (this.funcionarioForm.invalid) {\n      Object.keys(this.funcionarioForm.controls).forEach(key => {\n        const control = this.funcionarioForm.get(key);\n        if (control?.invalid) {\n          control.markAsTouched();\n        }\n      });\n      return;\n    }\n\n    this.isLoading = true;\n    this.showError = false;\n    this.showSuccess = false;\n\n    try {\n      const formValue = this.funcionarioForm.value;\n      const funcionario = {\n        ...formValue,\n        id: this.selectedFuncionario?.id || 0,\n        esp_id: parseInt(formValue.esp_id)\n      } as Funcionario;\n\n      this.dbService.addFuncionario(funcionario);\n      this.showSuccess = true;\n      this.successMessage = `Funcionario ${this.selectedFuncionario ? 'actualizado' : 'guardado'} exitosamente`;\n      this.resetForm();\n    } catch (error) {\n      this.showError = true;\n      this.errorMessage = 'Error al guardar funcionario';\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * Elimina un funcionario\n   * @description Solicita confirmación antes de eliminar\n   */\n  deleteFuncionario() {\n    if (this.selectedFuncionario && confirm('¿Está seguro de eliminar este funcionario?')) {\n      try {\n        this.dbService.deleteFuncionario(this.selectedFuncionario.id);\n        this.showSuccess = true;\n        this.successMessage = 'Funcionario eliminado exitosamente';\n        this.resetForm();\n      } catch (error) {\n        this.showError = true;\n        this.errorMessage = 'Error al eliminar funcionario';\n        console.error(error);\n      }\n    }\n  }\n\n  /**\n   * Reinicia el formulario\n   * @description Limpia todos los campos y mensajes\n   */\n  resetForm() {\n    this.funcionarioForm.reset();\n    this.selectedFuncionario = null;\n    this.showError = false;\n    this.showSuccess = false;\n    this.errorMessage = '';\n    this.successMessage = '';\n  }\n}\n\n    \n\n\n    \n            \n    .funcionarios-container {\n      padding: 2rem;\n      max-width: 1200px;\n      margin: 0 auto;\n      display: flex;\n      flex-direction: column;\n      gap: 2rem;\n    }\n\n    .search-section, .form-section {\n      background: white;\n      padding: 1.5rem;\n      border-radius: 8px;\n      box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n    }\n\n    .search-box {\n      margin-bottom: 1.5rem;\n    }\n\n    .search-input {\n      width: 100%;\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .funcionarios-list {\n      display: grid;\n      gap: 1rem;\n    }\n\n    .funcionario-card {\n      padding: 1rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      cursor: pointer;\n      transition: all 0.2s;\n    }\n\n    .funcionario-card:hover {\n      transform: translateY(-2px);\n      box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n    }\n\n    .funcionario-card.selected {\n      border-color: #4299e1;\n      background-color: #ebf8ff;\n    }\n\n    .form-header {\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      font-weight: 500;\n      color: #4a5568;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .form-group input.error,\n    .form-group select.error {\n      border-color: #fc8181;\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .form-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      margin-top: 2rem;\n    }\n\n    .submit-btn, .cancel-btn, .delete-btn {\n      padding: 0.75rem 1.5rem;\n      border-radius: 6px;\n      font-weight: 500;\n      cursor: pointer;\n      border: none;\n    }\n\n    .submit-btn {\n      background-color: #4299e1;\n      color: white;\n    }\n\n    .cancel-btn {\n      background-color: #e2e8f0;\n      color: #4a5568;\n    }\n\n    .delete-btn {\n      background-color: #fc8181;\n      color: white;\n    }\n\n    .submit-btn:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Buscar Funcionario                   0\">                        {{ funcionario.nombres }} {{ funcionario.apellidos }}          {{ funcionario.especialidad }}          {{ funcionario.email }}          {{ funcionario.telefono }}                            No se encontraron funcionarios                  {{ selectedFuncionario ? \\'Editar\\' : \\'Nuevo\\' }} Funcionario              Eliminar                                      Nombres                                {{ getErrorMessage(\\'nombres\\') }}                                    Apellidos                                {{ getErrorMessage(\\'apellidos\\') }}                                                Correo Electrónico                                {{ getErrorMessage(\\'email\\') }}                                    Teléfono                                {{ getErrorMessage(\\'telefono\\') }}                                                Especialidad                      Seleccione una especialidad                          {{ esp.nombre }}                                            {{ getErrorMessage(\\'esp_id\\') }}                                    Contraseña                                {{ getErrorMessage(\\'password\\') }}                                      {{ errorMessage }}        {{ successMessage }}                              Cancelar                          {{ isLoading ? \\'Guardando...\\' : (selectedFuncionario ? \\'Actualizar\\' : \\'Guardar\\') }}                    '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FuncionariosComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/InscripcionComponent.html":{"url":"components/InscripcionComponent.html","title":"component - InscripcionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  InscripcionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/inscripcion/inscripcion.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja la inscripción de pacientes\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            provideNgxMask()\n                \n            \n\n\n            \n                selector\n                app-inscripcion\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            FormsModule\n                            NgxMaskDirective\n                \n            \n\n            \n                styleUrls\n                ./inscripcion.component.css\n            \n\n\n\n            \n                templateUrl\n                ./inscripcion.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoading\n                            \n                            \n                                message\n                            \n                            \n                                pacienteForm\n                            \n                            \n                                searchRut\n                            \n                            \n                                showError\n                            \n                            \n                                showSuccess\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                emailDomainValidator\n                            \n                            \n                                formatRut\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onRutInput\n                            \n                            \n                                onSubmit\n                            \n                            \n                                resetForm\n                            \n                            \n                                rutValidator\n                            \n                            \n                                searchPaciente\n                            \n                            \n                                validateRut\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dbService: DatabaseService, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/inscripcion/inscripcion.component.ts:31\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de formulario reactivo\n\n                                                        \n                                                \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de base de datos\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de notificaciones\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        emailDomainValidator\n                        \n                    \n                \n            \n            \n                \nemailDomainValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:259\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para el dominio del email\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                ValidatorFn para validar que el email tenga un dominio válido\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        formatRut\n                        \n                    \n                \n            \n            \n                \nformatRut(rut: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:117\n                        \n                    \n\n\n            \n                \n                        Formatea el RUT mientras el usuario escribe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rut\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    RUT a formatear\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                RUT formateado con puntos y guión\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:95\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje de error para un campo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Mensaje de error correspondiente al tipo de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:85\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo del formulario es inválido\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo a verificar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el campo es inválido y ha sido tocado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:76\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRutInput\n                        \n                    \n                \n            \n            \n                \nonRutInput(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:163\n                        \n                    \n\n\n            \n                \n                        Formatea el RUT mientras el usuario escribe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de entrada\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:209\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        resetForm\n                        \n                    \n                \n            \n            \n                \nresetForm()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:247\n                        \n                    \n\n\n            \n                \n                        Reinicia el formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rutValidator\n                        \n                    \n                \n            \n            \n                \nrutValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:56\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :     (control: AbstractControl) => any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchPaciente\n                        \n                    \n                \n            \n            \n                \nsearchPaciente()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:182\n                        \n                    \n\n\n            \n                \n                        Busca un paciente por RUT\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateRut\n                        \n                    \n                \n            \n            \n                \nvalidateRut(rut: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/inscripcion/inscripcion.component.ts:131\n                        \n                    \n\n\n            \n                \n                        Valida el RUT ingresado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rut\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    RUT a validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el RUT es válido\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:31\n                        \n                    \n\n            \n                \n                    Indica si hay una operación en curso\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:29\n                        \n                    \n\n            \n                \n                    Mensaje para mostrar al usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pacienteForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchRut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:23\n                        \n                    \n\n            \n                \n                    RUT para búsqueda de pacientes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:25\n                        \n                    \n\n            \n                \n                    Indica si hay un error que mostrar\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showSuccess\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/inscripcion/inscripcion.component.ts:27\n                        \n                    \n\n            \n                \n                    Indica si hay un mensaje de éxito que mostrar\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule, FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors, ValidatorFn } from '@angular/forms';\nimport { DatabaseService, Paciente } from '../services/database.service';\nimport { NgxMaskDirective, provideNgxMask } from 'ngx-mask';\nimport { ToastService } from '../services/toast.service';\n\n/**\n * Componente que maneja la inscripción de pacientes\n * @description Permite registrar nuevos pacientes y buscar pacientes existentes\n */\n@Component({\n  selector: 'app-inscripcion',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, FormsModule, NgxMaskDirective],\n  providers: [provideNgxMask()],\n  templateUrl: './inscripcion.component.html',\n  styleUrls: ['./inscripcion.component.css']\n})\nexport class InscripcionComponent implements OnInit {\n  pacienteForm: FormGroup;\n  /** RUT para búsqueda de pacientes */\n  searchRut: string = '';\n  /** Indica si hay un error que mostrar */\n  showError = false;\n  /** Indica si hay un mensaje de éxito que mostrar */\n  showSuccess = false;\n  /** Mensaje para mostrar al usuario */\n  message = '';\n  /** Indica si hay una operación en curso */\n  isLoading = false;\n\n  /**\n   * Constructor del componente\n   * @param fb Servicio de formulario reactivo\n   * @param dbService Servicio de base de datos\n   * @param toastService Servicio de notificaciones\n   */\n  constructor(\n    private fb: FormBuilder,\n    private dbService: DatabaseService,\n    private toastService: ToastService\n  ) {\n    this.pacienteForm = this.fb.group({\n      nombres: ['', [Validators.required, Validators.minLength(2)]],\n      apellidos: ['', [Validators.required, Validators.minLength(2)]],\n      rut: ['', [Validators.required, this.rutValidator()]],\n      telefono: ['(56) 9 ', [Validators.required, Validators.minLength(12)]],\n      email: ['', [Validators.required, Validators.email, this.emailDomainValidator()]],\n      fecha_nacimiento: ['', Validators.required],\n      genero: ['', Validators.required],\n      direccion: ['', Validators.required]\n    });\n  }\n\n  rutValidator() {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const rut = control.value;\n      if (!rut) return null;\n      \n      // Remove formatting before validation\n      const cleanRut = rut.replace(/\\./g, '').replace(/-/g, '');\n      \n      if (!/^[0-9]{7,8}[0-9Kk]$/.test(cleanRut)) {\n        return { invalidRut: true };\n      }\n\n      return this.validateRut(cleanRut) ? null : { invalidRut: true };\n    };\n  }\n\n  /**\n   * Inicializa el componente\n   * @description Carga los datos necesarios del servicio\n   */\n  ngOnInit() {\n    this.dbService.loadPacientes();\n  }\n\n  /**\n   * Verifica si un campo del formulario es inválido\n   * @param fieldName Nombre del campo a verificar\n   * @returns boolean indicando si el campo es inválido y ha sido tocado\n   */\n  isFieldInvalid(fieldName: string): boolean {\n    const field = this.pacienteForm.get(fieldName);\n    return field ? (field.invalid && (field.dirty || field.touched)) : false;\n  }\n\n  /**\n   * Obtiene el mensaje de error para un campo\n   * @param fieldName Nombre del campo\n   * @returns Mensaje de error correspondiente al tipo de error\n   */\n  getErrorMessage(fieldName: string): string {\n    const control = this.pacienteForm.get(fieldName);\n    if (control?.errors) {\n      if (control.errors['required']) return 'Este campo es requerido';\n      if (control.errors['minlength']) return `Mínimo ${control.errors['minlength'].requiredLength} caracteres`;\n      if (control.errors['email']) return 'Email inválido';\n      if (control.errors['pattern']) {\n        switch(fieldName) {\n          case 'rut': return 'Formato de RUT inválido (ej: 12345678-9)';\n          case 'telefono': return 'Formato de teléfono inválido';\n          default: return 'Formato inválido';\n        }\n      }\n    }\n    return '';\n  }\n\n  /**\n   * Formatea el RUT mientras el usuario escribe\n   * @param rut RUT a formatear\n   * @returns RUT formateado con puntos y guión\n   */\n  formatRut(rut: string): string {\n    if (!rut) return '';\n    rut = rut.replace(/\\./g, '').replace(/-/g, '');\n    if (rut.length > 1) {\n      return rut.slice(0, -1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') + '-' + rut.slice(-1);\n    }\n    return rut;\n  }\n\n  /**\n   * Valida el RUT ingresado\n   * @param rut RUT a validar\n   * @returns boolean indicando si el RUT es válido\n   */\n  validateRut(rut: string): boolean {\n    // Remove any dots and dash before validation\n    rut = rut.replace(/\\./g, '').replace(/-/g, '');\n    \n    if (!/^[0-9]{7,8}[0-9Kk]$/.test(rut)) return false;\n\n    const verificationDigit = rut.slice(-1).toUpperCase();\n    const numbers = rut.slice(0, -1);\n    \n    let sum = 0;\n    let multiplier = 2;\n    \n    for (let i = numbers.length - 1; i >= 0; i--) {\n      sum += parseInt(numbers[i]) * multiplier;\n      multiplier = multiplier === 7 ? 2 : multiplier + 1;\n    }\n    \n    const expectedDigit = 11 - (sum % 11);\n    let expectedVerificationDigit: string;\n    \n    if (expectedDigit === 11) expectedVerificationDigit = '0';\n    else if (expectedDigit === 10) expectedVerificationDigit = 'K';\n    else expectedVerificationDigit = expectedDigit.toString();\n    \n    return verificationDigit === expectedVerificationDigit;\n  }\n\n  /**\n   * Formatea el RUT mientras el usuario escribe\n   * @param event Evento de entrada\n   * @description Formatea el RUT ingresado para que cumpla con el formato estándar\n   */\n  onRutInput(event: any) {\n    const input = event.target;\n    let rut = input.value.replace(/\\./g, '').replace(/-/g, '');\n    rut = rut.replace(/[^0-9kK]/g, '');\n    \n    if (rut.length > 0) {\n      let result = rut;\n      if (rut.length > 1) {\n        result = rut.slice(0, -1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') + '-' + rut.slice(-1);\n      }\n      input.value = result;\n      this.searchRut = result;\n    }\n  }\n\n  /**\n   * Busca un paciente por RUT\n   * @description Actualiza el formulario con los datos del paciente si se encuentra\n   */\n  searchPaciente() {\n    const cleanRut = this.searchRut.replace(/\\./g, '').replace(/-/g, '');\n    \n    if (!this.validateRut(cleanRut)) {\n      this.showError = true;\n      this.message = 'RUT inválido';\n      return;\n    }\n\n    const paciente = this.dbService.getPacienteByRut(cleanRut);\n    if (paciente) {\n      this.pacienteForm.patchValue({\n        ...paciente,\n        rut: this.formatRut(paciente.rut)\n      });\n      this.showSuccess = true;\n      this.message = 'Paciente encontrado';\n    } else {\n      this.showError = true;\n      this.message = 'Paciente no encontrado';\n    }\n  }\n\n  /**\n   * Maneja el envío del formulario\n   * @description Crea o actualiza un paciente según los datos del formulario\n   */\n  onSubmit() {\n    if (this.pacienteForm.invalid) {\n      Object.keys(this.pacienteForm.controls).forEach(key => {\n        const control = this.pacienteForm.get(key);\n        if (control?.invalid) {\n          control.markAsTouched();\n        }\n      });\n      return;\n    }\n\n    this.isLoading = true;\n    this.showError = false;\n    this.showSuccess = false;\n\n    try {\n      const formValue = this.pacienteForm.value;\n      const paciente = {\n        ...formValue,\n        rut: formValue.rut.replace(/\\./g, '').replace(/-/g, '') // Remove formatting before saving\n      };\n\n      this.dbService.addPaciente(paciente);\n      this.toastService.show('Paciente creado exitosamente', 'success');\n      this.resetForm();\n    } catch (error) {\n      this.showError = true;\n      this.message = 'Error al registrar paciente';\n      console.error(error);\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * Reinicia el formulario\n   * @description Limpia todos los campos y mensajes\n   */\n  resetForm() {\n    this.pacienteForm.reset();\n    this.showError = false;\n    this.showSuccess = false;\n    this.message = '';\n    this.searchRut = '';\n  }\n\n  /**\n   * Validador personalizado para el dominio del email\n   * @returns ValidatorFn para validar que el email tenga un dominio válido\n   */\n  emailDomainValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const email = control.value;\n      if (!email) return null;\n      \n      if (!email.includes('@')) return { invalidEmail: true };\n\n      const [localPart, domain] = email.split('@');\n      \n      if (!domain || !domain.includes('.')) return { invalidDomain: true };\n\n      const parts = domain.split('.');\n      const tld = parts[parts.length - 1];\n      \n      if (tld.length \n    \n\n    \n        \n  \n    Buscar Paciente\n    \n      \n      Buscar\n    \n  \n\n  \n    Datos del Paciente\n    \n      {{ pacienteForm.get('id')?.value ? 'Actualizar' : 'Registrar' }} Paciente\n\n      \n        \n          Nombres\n          \n          \n            Nombres son requeridos\n          \n        \n\n        \n          Apellidos\n          \n          \n            Apellidos son requeridos\n          \n        \n      \n\n      \n        \n          RUT\n          \n          \n            RUT inválido\n          \n        \n\n        \n          Teléfono\n          \n          \n            Teléfono inválido\n          \n        \n      \n\n      \n        \n          Correo Electrónico\n          \n          \n            Correo electrónico inválido\n          \n        \n\n        \n          Fecha de Nacimiento\n          \n          \n            Fecha de nacimiento requerida\n          \n        \n      \n\n      \n        \n          Género\n          \n            Seleccione género\n            Masculino\n            Femenino\n            Otro\n          \n          \n            Género requerido\n          \n        \n\n        \n          Dirección\n          \n          \n            Dirección requerida\n          \n        \n      \n\n      \n        {{ message }}\n        {{ message }}\n      \n\n      \n        \n          Cancelar\n        \n        \n          {{ isLoading ? 'Guardando...' : 'Guardar Paciente' }}\n        \n      \n    \n  \n\n    \n\n    \n                \n                    ./inscripcion.component.css\n                \n                .inscripcion-container {\n  max-width: 900px;\n  margin: 0 auto;\n  padding: 2rem;\n}\n\n.search-section {\n  background: white;\n  padding: 1.5rem;\n  border-radius: 8px;\n  margin-bottom: 2rem;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.search-section h2 {\n  margin: 0 0 1rem 0;\n  color: #2d3748;\n}\n\n.search-box {\n  display: flex;\n  gap: 1rem;\n}\n\n.search-input {\n  flex: 1;\n  padding: 0.75rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  font-size: 1rem;\n}\n\n.search-btn, .reset-btn {\n  padding: 0.75rem 1.5rem;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s;\n}\n\n.search-btn {\n  background-color: #4299e1;\n  color: white;\n}\n\n.search-btn:hover {\n  background-color: #3182ce;\n}\n\n.reset-btn {\n  background-color: #e2e8f0;\n  color: #4a5568;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.reset-btn:hover {\n  background-color: #cbd5e0;\n}\n\n.patient-form {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n}\n\n.patient-form h2 {\n  margin: 0 0 2rem 0;\n  color: #2d3748;\n}\n\n.form-row {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 2rem;\n  margin-bottom: 1.5rem;\n}\n\n.form-group {\n  display: flex;\n  flex-direction: column;\n}\n\n.form-group label {\n  margin-bottom: 0.5rem;\n  color: #4a5568;\n  font-weight: 500;\n}\n\n.form-group input,\n.form-group select {\n  padding: 0.75rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  font-size: 1rem;\n  transition: all 0.2s;\n}\n\n.form-group input:focus,\n.form-group select:focus {\n  outline: none;\n  border-color: #4299e1;\n  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n}\n\n.form-group input.error,\n.form-group select.error {\n  border-color: #e53e3e;\n}\n\n.error-message {\n  color: #e53e3e;\n  font-size: 0.875rem;\n  margin-top: 0.25rem;\n}\n\n.message-container {\n  margin: 1.5rem 0;\n}\n\n.error-alert,\n.success-alert {\n  padding: 1rem;\n  border-radius: 6px;\n  margin-bottom: 1rem;\n}\n\n.error-alert {\n  background-color: #fff5f5;\n  color: #c53030;\n  border: 1px solid #feb2b2;\n}\n\n.success-alert {\n  background-color: #f0fff4;\n  color: #2f855a;\n  border: 1px solid #9ae6b4;\n}\n\n.form-actions {\n  display: flex;\n  justify-content: flex-end;\n  gap: 1rem;\n  margin-top: 2rem;\n}\n\n.reset-btn {\n  padding: 0.75rem 2rem;\n  background-color: #e2e8f0;\n  color: #4a5568;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.reset-btn:hover {\n  background-color: #cbd5e0;\n}\n\n.submit-btn {\n  padding: 0.75rem 2rem;\n  background-color: #48bb78;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.submit-btn:hover {\n  background-color: #38a169;\n}\n\n.submit-btn:disabled {\n  background-color: #a0aec0;\n  cursor: not-allowed;\n}\n\n@media (max-width: 768px) {\n  .form-row {\n    grid-template-columns: 1fr;\n    gap: 1rem;\n  }\n\n  .search-box {\n    flex-direction: column;\n  }\n\n  .search-btn,\n  .reset-btn {\n    width: 100%;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Buscar Paciente                Buscar            Datos del Paciente          {{ pacienteForm.get(\\'id\\')?.value ? \\'Actualizar\\' : \\'Registrar\\' }} Paciente                        Nombres                                Nombres son requeridos                                    Apellidos                                Apellidos son requeridos                                                RUT                                RUT inválido                                    Teléfono                                Teléfono inválido                                                Correo Electrónico                                Correo electrónico inválido                                    Fecha de Nacimiento                                Fecha de nacimiento requerida                                                Género                      Seleccione género            Masculino            Femenino            Otro                                Género requerido                                    Dirección                                Dirección requerida                                      {{ message }}        {{ message }}                              Cancelar                          {{ isLoading ? \\'Guardando...\\' : \\'Guardar Paciente\\' }}                    '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'InscripcionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LandingPageComponent.html":{"url":"components/LandingPageComponent.html","title":"component - LandingPageComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LandingPageComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/landing-page/landing-page.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja la página de inicio\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-landing-page\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                                LoginModalComponent\n                                RegisterModalComponent\n                \n            \n\n            \n                styleUrls\n                ./landing-page.component.css\n            \n\n\n\n            \n                templateUrl\n                ./landing-page.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showLoginModal\n                            \n                            \n                                showRegisterModal\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                scrollToFeatures\n                            \n                            \n                                toggleLoginModal\n                            \n                            \n                                toggleRegisterModal\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        scrollToFeatures\n                        \n                    \n                \n            \n            \n                \nscrollToFeatures()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing-page/landing-page.component.ts:45\n                        \n                    \n\n\n            \n                \n                        Desplaza la vista a la sección de características\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleLoginModal\n                        \n                    \n                \n            \n            \n                \ntoggleLoginModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing-page/landing-page.component.ts:27\n                        \n                    \n\n\n            \n                \n                        Alterna la visibilidad del modal de inicio de sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toggleRegisterModal\n                        \n                    \n                \n            \n            \n                \ntoggleRegisterModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/landing-page/landing-page.component.ts:36\n                        \n                    \n\n\n            \n                \n                        Alterna la visibilidad del modal de registro\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showLoginModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/landing-page/landing-page.component.ts:19\n                        \n                    \n\n            \n                \n                    Indica si el modal de inicio de sesión está visible\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showRegisterModal\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/landing-page/landing-page.component.ts:21\n                        \n                    \n\n            \n                \n                    Indica si el modal de registro está visible\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { LoginModalComponent } from '../components/login-modal/login-modal.component';\nimport { RegisterModalComponent } from '../components/register-modal/register-modal.component';\n\n/**\n * Componente que maneja la página de inicio\n * @description Muestra la página principal y gestiona los modales de inicio de sesión y registro\n */\n@Component({\n  selector: 'app-landing-page',\n  standalone: true,\n  imports: [CommonModule, LoginModalComponent, RegisterModalComponent],\n  templateUrl: './landing-page.component.html',\n  styleUrls: ['./landing-page.component.css']\n})\nexport class LandingPageComponent {\n  /** Indica si el modal de inicio de sesión está visible */\n  showLoginModal = false;\n  /** Indica si el modal de registro está visible */\n  showRegisterModal = false;\n\n  /**\n   * Alterna la visibilidad del modal de inicio de sesión\n   * @description Cierra el modal de registro si está abierto\n   */\n  toggleLoginModal() {\n    this.showLoginModal = !this.showLoginModal;\n    if (this.showRegisterModal) this.showRegisterModal = false;\n  }\n\n  /**\n   * Alterna la visibilidad del modal de registro\n   * @description Cierra el modal de inicio de sesión si está abierto\n   */\n  toggleRegisterModal() {\n    this.showRegisterModal = !this.showRegisterModal;\n    if (this.showLoginModal) this.showLoginModal = false;\n  }\n\n  /**\n   * Desplaza la vista a la sección de características\n   * @description Realiza un desplazamiento suave hacia la sección de características\n   */\n  scrollToFeatures() {\n    const featuresSection = document.getElementById('features');\n    if (featuresSection) {\n      featuresSection.scrollIntoView({ behavior: 'smooth' });\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Hospital Scheduler\n      \n        Iniciar Sesión\n        Registrarse\n      \n    \n  \n\n  \n    \n      Gestión de Citas Médicas\n      Sistema integral para la administración de citas y horarios médicos\n      \n        Comenzar Ahora\n        Saber Más\n      \n    \n\n    \n      Características Principales\n      \n        \n          📅\n          Gestión de Citas\n          Programa y administra citas médicas de manera eficiente\n        \n        \n          👨‍⚕️\n          Perfil Médico\n          Gestiona la información y disponibilidad de los médicos\n        \n        \n          📊\n          Reportes\n          Genera informes detallados de las citas y atenciones\n        \n        \n          🔔\n          Recordatorios\n          Sistema de notificaciones para citas próximas\n        \n      \n    \n  \n\n  \n    &copy; 2024 Hospital Scheduler. Todos los derechos reservados.\n  \n\n  \n  \n\n  \n  \n\n\n    \n\n    \n                \n                    ./landing-page.component.css\n                \n                .landing-page {\n  min-height: 100vh;\n  font-family: 'Segoe UI', system-ui, -apple-system, sans-serif;\n}\n\n.header {\n  background-color: white;\n  box-shadow: 0 2px 4px rgba(0,0,0,0.1);\n  padding: 1rem 2rem;\n  position: fixed;\n  width: 100%;\n  top: 0;\n  z-index: 100;\n}\n\n.nav-container {\n  max-width: 1200px;\n  margin: 0 auto;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.logo {\n  font-size: 1.5rem;\n  font-weight: 600;\n  color: #2c5282;\n}\n\n.nav-links {\n  display: flex;\n  gap: 2rem;\n  align-items: center;\n}\n\n.nav-links a {\n  text-decoration: none;\n  color: #4a5568;\n  font-weight: 500;\n  transition: color 0.2s;\n}\n\n.nav-links a:hover {\n  color: #2c5282;\n}\n\n.register-btn {\n  background-color: #4299e1;\n  color: white !important;\n  padding: 0.5rem 1.5rem;\n  border-radius: 6px;\n  transition: background-color 0.2s !important;\n}\n\n.register-btn:hover {\n  background-color: #3182ce !important;\n}\n\n.main-content {\n  padding-top: 5rem;\n}\n\n.hero {\n  background: linear-gradient(135deg, #ebf8ff 0%, #bee3f8 100%);\n  padding: 6rem 2rem;\n  text-align: center;\n}\n\n.hero h1 {\n  font-size: 3rem;\n  color: #2d3748;\n  margin-bottom: 1rem;\n}\n\n.hero p {\n  font-size: 1.25rem;\n  color: #4a5568;\n  margin-bottom: 2rem;\n  max-width: 600px;\n  margin-left: auto;\n  margin-right: auto;\n}\n\n.cta-buttons {\n  display: flex;\n  gap: 1rem;\n  justify-content: center;\n}\n\n.cta-primary {\n  background-color: #4299e1;\n  color: white;\n  padding: 0.75rem 2rem;\n  border-radius: 6px;\n  text-decoration: none;\n  font-weight: 500;\n  transition: background-color 0.2s;\n}\n\n.cta-primary:hover {\n  background-color: #3182ce;\n}\n\n.cta-secondary {\n  background-color: white;\n  color: #4299e1;\n  padding: 0.75rem 2rem;\n  border-radius: 6px;\n  text-decoration: none;\n  font-weight: 500;\n  transition: all 0.2s;\n}\n\n.cta-secondary:hover {\n  background-color: #ebf8ff;\n}\n\n.features {\n  padding: 4rem 2rem;\n  max-width: 1200px;\n  margin: 0 auto;\n}\n\n.features h2 {\n  text-align: center;\n  font-size: 2rem;\n  color: #2d3748;\n  margin-bottom: 3rem;\n}\n\n.feature-grid {\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));\n  gap: 2rem;\n}\n\n.feature-card {\n  background: white;\n  padding: 2rem;\n  border-radius: 8px;\n  box-shadow: 0 4px 6px rgba(0,0,0,0.1);\n  text-align: center;\n  transition: transform 0.2s;\n}\n\n.feature-card:hover {\n  transform: translateY(-5px);\n}\n\n.feature-icon {\n  font-size: 2.5rem;\n  margin-bottom: 1rem;\n}\n\n.feature-card h3 {\n  color: #2d3748;\n  margin-bottom: 0.5rem;\n}\n\n.feature-card p {\n  color: #4a5568;\n  line-height: 1.5;\n}\n\n.footer {\n  background-color: #2d3748;\n  color: white;\n  text-align: center;\n  padding: 2rem;\n  margin-top: 4rem;\n}\n\n@media (max-width: 768px) {\n  .hero h1 {\n    font-size: 2rem;\n  }\n  \n  .hero p {\n    font-size: 1rem;\n  }\n  \n  .feature-grid {\n    grid-template-columns: 1fr;\n  }\n  \n  .nav-container {\n    flex-direction: column;\n    gap: 1rem;\n  }\n  \n  .nav-links {\n    flex-direction: column;\n    width: 100%;\n  }\n  \n  .register-btn {\n    width: 100%;\n    text-align: center;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Hospital Scheduler              Iniciar Sesión        Registrarse                        Gestión de Citas Médicas      Sistema integral para la administración de citas y horarios médicos              Comenzar Ahora        Saber Más                    Características Principales                        📅          Gestión de Citas          Programa y administra citas médicas de manera eficiente                          👨‍⚕️          Perfil Médico          Gestiona la información y disponibilidad de los médicos                          📊          Reportes          Genera informes detallados de las citas y atenciones                          🔔          Recordatorios          Sistema de notificaciones para citas próximas                          © 2024 Hospital Scheduler. Todos los derechos reservados.          '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LandingPageComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginModalComponent.html":{"url":"components/LoginModalComponent.html","title":"component - LoginModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login-modal/login-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja el modal de inicio de sesión\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            FormsModule\n                \n            \n\n            \n                styleUrls\n                ./login-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                generatedCode\n                            \n                            \n                                isLoading\n                            \n                            \n                                isRecovering\n                            \n                            \n                                newPassword\n                            \n                            \n                                password\n                            \n                            \n                                recoveryCode\n                            \n                            \n                                recoveryCodeSent\n                            \n                            \n                                recoveryCodeVerified\n                            \n                            \n                                recoveryRut\n                            \n                            \n                                rut\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelRecovery\n                            \n                            \n                                closeModal\n                            \n                            \n                                handleRecovery\n                            \n                            \n                                    Async\n                                handleSubmit\n                            \n                            \n                                onRutInput\n                            \n                            \n                                startRecovery\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: DatabaseService, router: Router, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login-modal/login-modal.component.ts:48\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/login-modal/login-modal.component.ts:21\n                            \n                        \n                \n                    \n                        Evento emitido para cerrar el modal\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelRecovery\n                        \n                    \n                \n            \n            \n                \ncancelRecovery()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-modal/login-modal.component.ts:78\n                        \n                    \n\n\n            \n                \n                        Cancela el proceso de recuperación de contraseña\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-modal/login-modal.component.ts:60\n                        \n                    \n\n\n            \n                \n                        Cierra el modal de inicio de sesión\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRecovery\n                        \n                    \n                \n            \n            \n                \nhandleRecovery(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-modal/login-modal.component.ts:94\n                        \n                    \n\n\n            \n                \n                        Maneja el proceso de recuperación de contraseña\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento del formulario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSubmit(event: Event)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-modal/login-modal.component.ts:170\n                        \n                    \n\n\n            \n                \n                        Maneja el intento de inicio de sesión\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                        Event\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento del formulario\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRutInput\n                        \n                    \n                \n            \n            \n                \nonRutInput(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-modal/login-modal.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Formatea el RUT mientras el usuario escribe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de input\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startRecovery\n                        \n                    \n                \n            \n            \n                \nstartRecovery()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/login-modal/login-modal.component.ts:68\n                        \n                    \n\n\n            \n                \n                        Inicia el proceso de recuperación de contraseña\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'RUT o contraseña incorrectos'\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:48\n                        \n                    \n\n            \n                \n                    Mensaje de error para mostrar al usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        generatedCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:41\n                        \n                    \n\n            \n                \n                    Código de recuperación generado por el sistema\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:46\n                        \n                    \n\n            \n                \n                    Indica si hay una operación en curso\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isRecovering\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:29\n                        \n                    \n\n            \n                \n                    Indica si se está en proceso de recuperación de contraseña\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:39\n                        \n                    \n\n            \n                \n                    Nueva contraseña durante recuperación\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:26\n                        \n                    \n\n            \n                \n                    Contraseña del usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoveryCode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:33\n                        \n                    \n\n            \n                \n                    Código de recuperación ingresado por el usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoveryCodeSent\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:35\n                        \n                    \n\n            \n                \n                    Indica si el código de recuperación ha sido enviado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoveryCodeVerified\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:37\n                        \n                    \n\n            \n                \n                    Indica si el código de recuperación ha sido verificado\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        recoveryRut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:31\n                        \n                    \n\n            \n                \n                    RUT para recuperación de contraseña\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rut\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:24\n                        \n                    \n\n            \n                \n                    RUT del usuario para inicio de sesión\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login-modal/login-modal.component.ts:44\n                        \n                    \n\n            \n                \n                    Indica si hay un error que mostrar\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { DatabaseService } from '../../services/database.service';\nimport { Router } from '@angular/router';\nimport { ToastService } from '../../services/toast.service';\n\n/**\n * Componente que maneja el modal de inicio de sesión\n * @description Permite a los usuarios iniciar sesión y recuperar su contraseña\n */\n@Component({\n  selector: 'app-login-modal',\n  standalone: true,\n  imports: [CommonModule, FormsModule],\n  templateUrl: './login-modal.component.html',\n  styleUrls: ['./login-modal.component.css']\n})\nexport class LoginModalComponent {\n  /** Evento emitido para cerrar el modal */\n  @Output() close = new EventEmitter();\n  \n  /** RUT del usuario para inicio de sesión */\n  rut: string = '';\n  /** Contraseña del usuario */\n  password: string = '';\n  \n  /** Indica si se está en proceso de recuperación de contraseña */\n  isRecovering: boolean = false;\n  /** RUT para recuperación de contraseña */\n  recoveryRut: string = '';\n  /** Código de recuperación ingresado por el usuario */\n  recoveryCode: string = '';\n  /** Indica si el código de recuperación ha sido enviado */\n  recoveryCodeSent: boolean = false;\n  /** Indica si el código de recuperación ha sido verificado */\n  recoveryCodeVerified: boolean = false;\n  /** Nueva contraseña durante recuperación */\n  newPassword: string = '';\n  /** Código de recuperación generado por el sistema */\n  generatedCode: string = '';\n  \n  /** Indica si hay un error que mostrar */\n  showError: boolean = false;\n  /** Indica si hay una operación en curso */\n  isLoading: boolean = false;\n  /** Mensaje de error para mostrar al usuario */\n  errorMessage: string = 'RUT o contraseña incorrectos';\n\n  constructor(\n    private dbService: DatabaseService,\n    private router: Router,\n    private toastService: ToastService\n  ) {}\n\n  /**\n   * Cierra el modal de inicio de sesión\n   * @description Emite el evento close\n   */\n  closeModal() {\n    this.close.emit();\n  }\n\n  /**\n   * Inicia el proceso de recuperación de contraseña\n   * @description Cambia el estado del modal a recuperación\n   */\n  startRecovery() {\n    this.isRecovering = true;\n    this.showError = false;\n    this.errorMessage = '';\n  }\n\n  /**\n   * Cancela el proceso de recuperación de contraseña\n   * @description Reinicia todos los campos de recuperación\n   */\n  cancelRecovery() {\n    this.isRecovering = false;\n    this.recoveryRut = '';\n    this.recoveryCode = '';\n    this.recoveryCodeSent = false;\n    this.recoveryCodeVerified = false;\n    this.newPassword = '';\n    this.showError = false;\n    this.errorMessage = '';\n  }\n\n  /**\n   * Maneja el proceso de recuperación de contraseña\n   * @param event Evento del formulario\n   * @description Proceso de tres pasos: envío de código, verificación y cambio de contraseña\n   */\n  handleRecovery(event: Event) {\n    event.preventDefault();\n    this.showError = false;\n    this.isLoading = true;\n\n    try {\n      if (!this.recoveryCodeSent) {\n        const funcionario = this.dbService.getFuncionarioByRut(this.recoveryRut);\n        if (!funcionario) {\n          this.showError = true;\n          this.errorMessage = 'RUT no encontrado';\n          return;\n        }\n\n        this.generatedCode = Math.random().toString(36).substring(2, 8).toUpperCase();\n        console.log('Código de recuperación:', this.generatedCode);\n        \n        this.recoveryCodeSent = true;\n        this.errorMessage = '';\n      } \n      else if (!this.recoveryCodeVerified) {\n        if (this.recoveryCode !== this.generatedCode) {\n          this.showError = true;\n          this.errorMessage = 'Código inválido';\n          return;\n        }\n        \n        this.recoveryCodeVerified = true;\n        this.errorMessage = '';\n      } \n      else {\n        if (this.newPassword.length  0) {\n      let result = rut;\n      if (rut.length > 1) {\n        result = rut.slice(0, -1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') + '-' + rut.slice(-1);\n      }\n      input.value = result;\n    }\n  }\n\n  /**\n   * Maneja el intento de inicio de sesión\n   * @param event Evento del formulario\n   * @description Verifica credenciales y redirige al dashboard si son correctas\n   */\n  async handleSubmit(event: Event) {\n    event.preventDefault();\n    this.showError = false;\n    this.isLoading = true;\n\n    try {\n      const cleanRut = this.rut.replace(/\\./g, '').replace('-', '');\n      const funcionario = this.dbService.getFuncionarioByRut(cleanRut);\n\n      if (funcionario && funcionario.password === this.password) {\n        const userData = {\n          id: funcionario.id,\n          nombres: funcionario.nombres,\n          apellidos: funcionario.apellidos,\n          rut: funcionario.rut,\n          esp_id: funcionario.esp_id,\n          especialidad: funcionario.especialidad,\n          password: funcionario.password,\n          email: funcionario.email,\n          telefono: funcionario.telefono\n        };\n        \n        localStorage.setItem('currentUser', JSON.stringify(userData));\n        \n        const now = new Date();\n        const timeStr = now.toLocaleString('es-CL', { \n          hour: '2-digit', \n          minute: '2-digit',\n          day: '2-digit',\n          month: '2-digit',\n          year: 'numeric'\n        });\n        this.toastService.show(`Inicio de sesión exitoso @ ${timeStr}`, 'success');\n        \n        this.closeModal();\n        await this.router.navigate(['/dashboard']);\n      } else {\n        this.showError = true;\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      this.showError = true;\n    } finally {\n      this.isLoading = false;\n    }\n  }\n} \n    \n\n    \n        \n    \n    \n        {{ isRecovering ? 'Recuperar Contraseña' : 'Iniciar Sesión' }}\n        ×\n    \n    \n        \n        \n            RUT\n            \n        \n\n        \n            Contraseña\n            \n        \n\n        \n            RUT o contraseña incorrectos\n        \n\n        \n            ¿Olvidaste tu contraseña?\n        \n\n        \n            \n            {{ isLoading ? 'Iniciando sesión...' : 'Iniciar Sesión' }}\n            \n        \n        \n\n        \n        \n            RUT\n            \n        \n\n        \n            Código de Recuperación\n            \n        \n\n        \n            Nueva Contraseña\n            \n        \n\n        \n            {{ errorMessage }}\n        \n\n        \n            \n            {{ \n                isLoading ? 'Procesando...' : \n                (recoveryCodeSent ? \n                    (recoveryCodeVerified ? 'Cambiar Contraseña' : 'Verificar Código') : \n                    'Enviar Código'\n                )\n            }}\n            \n        \n        \n    \n    \n\n    \n\n    \n                \n                    ./login-modal.component.css\n                \n                .modal-backdrop {\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background: white;\n  border-radius: 8px;\n  width: 90%;\n  max-width: 400px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  animation: slideIn 0.3s ease-out;\n}\n\n@keyframes slideIn {\n  from {\n    transform: translateY(-20px);\n    opacity: 0;\n  }\n  to {\n    transform: translateY(0);\n    opacity: 1;\n  }\n}\n\n.modal-header {\n  padding: 1.5rem;\n  border-bottom: 1px solid #e2e8f0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n}\n\n.modal-header h2 {\n  margin: 0;\n  color: #2d3748;\n  font-size: 1.5rem;\n}\n\n.close-button {\n  background: none;\n  border: none;\n  font-size: 1.5rem;\n  color: #718096;\n  cursor: pointer;\n  padding: 0.5rem;\n  line-height: 1;\n  transition: color 0.2s;\n}\n\n.close-button:hover {\n  color: #2d3748;\n}\n\n.modal-body {\n  padding: 1.5rem;\n}\n\n.form-group {\n  margin-bottom: 1.5rem;\n}\n\n.form-group label {\n  display: block;\n  margin-bottom: 0.5rem;\n  color: #4a5568;\n  font-weight: 500;\n}\n\n.form-group input {\n  width: 100%;\n  padding: 0.75rem;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  font-size: 1rem;\n  transition: border-color 0.2s;\n}\n\n.form-group input:focus {\n  outline: none;\n  border-color: #4299e1;\n  box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n}\n\n.form-group input.error {\n  border-color: #e53e3e;\n}\n\n.error-message {\n  color: #e53e3e;\n  font-size: 0.875rem;\n  margin-top: 0.5rem;\n  margin-bottom: 1rem;\n}\n\n.form-footer {\n  margin-top: 2rem;\n}\n\n.login-button {\n  width: 100%;\n  padding: 0.75rem;\n  background-color: #4299e1;\n  color: white;\n  border: none;\n  border-radius: 6px;\n  font-size: 1rem;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.login-button:hover {\n  background-color: #3182ce;\n}\n\n.login-button:disabled {\n  background-color: #a0aec0;\n  cursor: not-allowed;\n}\n\n.recovery-link {\n  text-align: right;\n  margin-bottom: 1rem;\n}\n\n.recovery-link a {\n  color: #4299e1;\n  font-size: 0.875rem;\n  cursor: pointer;\n  text-decoration: none;\n}\n\n.recovery-link a:hover {\n  text-decoration: underline;\n}\n\n.cancel-btn {\n  padding: 0.75rem 1.5rem;\n  background-color: #e2e8f0;\n  color: #4a5568;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: background-color 0.2s;\n}\n\n.cancel-btn:hover {\n  background-color: #cbd5e0;\n}\n\n#rut, #password, #recoveryRut, #recoveryCode {\n  width: 95%;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ isRecovering ? \\'Recuperar Contraseña\\' : \\'Iniciar Sesión\\' }}        ×                                    RUT                                        Contraseña                                        RUT o contraseña incorrectos                            ¿Olvidaste tu contraseña?                                        {{ isLoading ? \\'Iniciando sesión...\\' : \\'Iniciar Sesión\\' }}                                                        RUT                                        Código de Recuperación                                        Nueva Contraseña                                        {{ errorMessage }}                                        {{                 isLoading ? \\'Procesando...\\' :                 (recoveryCodeSent ?                     (recoveryCodeVerified ? \\'Cambiar Contraseña\\' : \\'Verificar Código\\') :                     \\'Enviar Código\\'                )            }}                                    '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/NavItem.html":{"url":"interfaces/NavItem.html","title":"interface - NavItem","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  NavItem\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/dashboard/dashboard.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que define la estructura de un elemento de navegación\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            icon\n                                        \n                                \n                                \n                                        \n                                            label\n                                        \n                                \n                                \n                                        \n                                            path\n                                        \n                                \n                                \n                                        \n                                            requiredRole\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Descripción de la funcionalidad\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        icon\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        icon:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Ícono a mostrar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        label\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        label:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Etiqueta del elemento\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        path\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        path:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Ruta del componente\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        requiredRole\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        requiredRole:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Rol requerido para acceder\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Router, RouterLink, RouterOutlet } from '@angular/router';\nimport { DatabaseService } from '../services/database.service';\nimport { ToastService } from '../services/toast.service';\nimport { ProfileModalComponent } from '../components/profile-modal/profile-modal.component';\n\n/**\n * Interfaz que define la estructura de un elemento de navegación\n */\ninterface NavItem {\n  /** Ruta del componente */\n  path: string;\n  /** Ícono a mostrar */\n  icon: string;\n  /** Etiqueta del elemento */\n  label: string;\n  /** Descripción de la funcionalidad */\n  description: string;\n  /** Rol requerido para acceder */\n  requiredRole: string;\n}\n\n/**\n * Componente que maneja el panel principal de la aplicación\n * @description Muestra la navegación principal y gestiona el acceso basado en roles\n */\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule, RouterLink, RouterOutlet, ProfileModalComponent],\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n  /** Usuario actualmente autenticado */\n  currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n  /** Indica si el menú de usuario está visible */\n  showUserMenu = false;\n  showProfileModal = false;\n\n  /** Lista de elementos de navegación con sus permisos */\n  navItems: NavItem[] = [\n    {\n      path: 'inscripcion',\n      icon: '👥',\n      label: 'Inscripción',\n      description: 'Gestiona los pacientes',\n      requiredRole: 'USA_INSCRIPCION'\n    },\n    {\n      path: 'agenda',\n      icon: '📅',\n      label: 'Agenda',\n      description: 'Gestiona los horarios',\n      requiredRole: 'USA_AGENDA'\n    },\n    {\n      path: 'citas',\n      icon: '🕒',\n      label: 'Citas',\n      description: 'Administra las citas médicas',\n      requiredRole: 'USA_CITAS'\n    }\n  ];\n\n  constructor(\n    private router: Router,\n    private dbService: DatabaseService,\n    private toastService: ToastService\n  ) {}\n\n  /**\n   * Obtiene los elementos de navegación autorizados para el usuario actual\n   * @returns Lista filtrada de elementos de navegación según los roles del usuario\n   */\n  get authorizedNavItems(): NavItem[] {\n    return this.navItems.filter(item => \n      this.dbService.hasRole(this.currentUser.id, item.requiredRole)\n    );\n  }\n\n  /**\n   * Obtiene las iniciales del usuario actual\n   * @returns String con las iniciales del nombre y apellido\n   */\n  getUserInitials(): string {\n    return `${this.currentUser.nombres?.[0] || ''}${this.currentUser.apellidos?.[0] || ''}`;\n  }\n\n  /**\n   * Alterna la visibilidad del menú de usuario\n   * @description Muestra u oculta el menú desplegable\n   */\n  toggleUserMenu() {\n    this.showUserMenu = !this.showUserMenu;\n  }\n\n  /**\n   * Cierra la sesión del usuario\n   * @description Limpia el localStorage y redirige al inicio\n   */\n  logout() {\n    localStorage.removeItem('currentUser');\n    \n    const now = new Date();\n    const timeStr = now.toLocaleString('es-CL', { \n      hour: '2-digit', \n      minute: '2-digit',\n      day: '2-digit',\n      month: '2-digit',\n      year: 'numeric'\n    });\n    this.toastService.show(`Cierre de sesión exitoso @ ${timeStr}`, 'success');\n    \n    this.router.navigate(['/']);\n  }\n\n  getUserFullName(): string {\n    return `${this.currentUser.nombres} ${this.currentUser.apellidos}`;\n  }\n\n  getUserSpecialty(): string {\n    return this.currentUser.especialidad;\n  }\n\n  openProfileModal() {\n    this.showProfileModal = true;\n  }\n\n  closeProfileModal() {\n    this.showProfileModal = false;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Paciente.html":{"url":"interfaces/Paciente.html","title":"interface - Paciente","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Paciente\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa un paciente\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            apellidos\n                                        \n                                \n                                \n                                        \n                                            direccion\n                                        \n                                \n                                \n                                        \n                                            email\n                                        \n                                \n                                \n                                        \n                                            fecha_nacimiento\n                                        \n                                \n                                \n                                        \n                                            genero\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombres\n                                        \n                                \n                                \n                                        \n                                            rut\n                                        \n                                \n                                \n                                        \n                                            telefono\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        apellidos\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        apellidos:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        direccion\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        direccion:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha_nacimiento\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha_nacimiento:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        genero\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        genero:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombres:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rut\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rut:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        telefono\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        telefono:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileModalComponent.html":{"url":"components/ProfileModalComponent.html","title":"component - ProfileModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profile-modal/profile-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente modal para la modificación del perfil de usuario\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            provideNgxMask()\n                \n            \n\n\n            \n                selector\n                app-profile-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgxMaskDirective\n                \n            \n\n\n            \n                styles\n                \n    .modal-backdrop {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n    }\n\n    .modal-content {\n      background: white;\n      border-radius: 8px;\n      width: 90%;\n      max-width: 800px;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      animation: slideIn 0.3s ease-out;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateY(-20px);\n        opacity: 0;\n      }\n      to {\n        transform: translateY(0);\n        opacity: 1;\n      }\n    }\n\n    .modal-header {\n      padding: 1.5rem;\n      border-bottom: 1px solid #e2e8f0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .modal-header h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.5rem;\n    }\n\n    .close-button {\n      background: none;\n      border: none;\n      font-size: 1.5rem;\n      color: #718096;\n      cursor: pointer;\n      padding: 0.5rem;\n      line-height: 1;\n    }\n\n    .modal-body {\n      padding: 1.5rem;\n    }\n\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      color: #4a5568;\n      font-weight: 500;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .form-group input.error {\n      border-color: #fc8181;\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .form-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      margin-top: 2rem;\n    }\n\n    .submit-btn, .cancel-btn {\n      padding: 0.75rem 1.5rem;\n      border-radius: 6px;\n      font-weight: 500;\n      cursor: pointer;\n      border: none;\n    }\n\n    .submit-btn {\n      background-color: #4299e1;\n      color: white;\n    }\n\n    .cancel-btn {\n      background-color: #e2e8f0;\n      color: #4a5568;\n    }\n\n    .submit-btn:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  \n            \n\n            \n                template\n                \n  \n    \n      Modificar Perfil\n      ×\n    \n    \n      \n        \n          \n            Nombres\n            \n            \n              {{ getErrorMessage('nombres') }}\n            \n          \n\n          \n            Apellidos\n            \n            \n              {{ getErrorMessage('apellidos') }}\n            \n          \n        \n\n        \n          \n            Correo Electrónico\n            \n            \n              {{ getErrorMessage('email') }}\n            \n          \n\n          \n            Especialidad\n            \n              Seleccione una especialidad\n              \n                {{ esp.nombre }}\n              \n            \n            \n              Especialidad es requerida\n            \n          \n        \n\n        \n          \n            Teléfono\n            \n            \n              {{ getErrorMessage('telefono') }}\n            \n          \n\n          \n            Nueva Contraseña (opcional)\n            \n            \n              {{ getErrorMessage('password') }}\n            \n          \n        \n\n        \n          \n            Confirmar Nueva Contraseña\n            \n            \n              Las contraseñas no coinciden\n            \n          \n        \n\n        \n          \n            Cancelar\n          \n          \n            {{ isLoading ? 'Guardando...' : 'Guardar Cambios' }}\n          \n        \n      \n    \n  \n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                especialidades\n                            \n                            \n                                isLoading\n                            \n                            \n                                profileForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onSubmit\n                            \n                            \n                                passwordMatchValidator\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                currentUser\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dbService: DatabaseService, toastService: ToastService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/profile-modal/profile-modal.component.ts:299\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de formularios reactivos\n\n                                                        \n                                                \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de base de datos\n\n                                                        \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio de notificaciones\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        currentUser\n                    \n                \n                \n                    \n                        Type :         any\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/profile-modal/profile-modal.component.ts:290\n                            \n                        \n                \n                    \n                        Usuario actual cuyos datos se están modificando\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/profile-modal/profile-modal.component.ts:292\n                            \n                        \n                \n                    \n                        Evento emitido para cerrar el modal\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:407\n                        \n                    \n\n\n            \n                \n                        Cierra el modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:384\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje de error para un campo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Mensaje de error correspondiente al tipo de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:374\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo del formulario es inválido\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo a verificar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el campo es inválido y ha sido tocado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:336\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:415\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/profile-modal/profile-modal.component.ts:351\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para contraseñas coincidentes\n\n\n                        \n                            Returns :     (formGroup: FormGroup) => { passwordMismatch: boolean; }\n\n                        \n                            \n                                ValidatorFn que verifica que las contraseñas coincidan\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        especialidades\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile-modal/profile-modal.component.ts:299\n                        \n                    \n\n            \n                \n                    Lista de especialidades disponibles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile-modal/profile-modal.component.ts:297\n                        \n                    \n\n            \n                \n                    Indica si hay una operación en curso\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile-modal/profile-modal.component.ts:295\n                        \n                    \n\n            \n                \n                    Formulario reactivo para la edición del perfil\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatabaseService, Funcionario } from '../../services/database.service';\nimport { ToastService } from '../../services/toast.service';\nimport { NgxMaskDirective, provideNgxMask } from 'ngx-mask';\nimport { Router } from '@angular/router';\n\n/**\n * Componente modal para la modificación del perfil de usuario\n * @description Permite a los usuarios actualizar su información personal y contraseña\n */\n@Component({\n  selector: 'app-profile-modal',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, NgxMaskDirective],\n  providers: [provideNgxMask()],\n  template: `\n    \n      \n        \n          Modificar Perfil\n          ×\n        \n        \n          \n            \n              \n                Nombres\n                \n                \n                  {{ getErrorMessage('nombres') }}\n                \n              \n\n              \n                Apellidos\n                \n                \n                  {{ getErrorMessage('apellidos') }}\n                \n              \n            \n\n            \n              \n                Correo Electrónico\n                \n                \n                  {{ getErrorMessage('email') }}\n                \n              \n\n              \n                Especialidad\n                \n                  Seleccione una especialidad\n                  \n                    {{ esp.nombre }}\n                  \n                \n                \n                  Especialidad es requerida\n                \n              \n            \n\n            \n              \n                Teléfono\n                \n                \n                  {{ getErrorMessage('telefono') }}\n                \n              \n\n              \n                Nueva Contraseña (opcional)\n                \n                \n                  {{ getErrorMessage('password') }}\n                \n              \n            \n\n            \n              \n                Confirmar Nueva Contraseña\n                \n                \n                  Las contraseñas no coinciden\n                \n              \n            \n\n            \n              \n                Cancelar\n              \n              \n                {{ isLoading ? 'Guardando...' : 'Guardar Cambios' }}\n              \n            \n          \n        \n      \n    \n  `,\n  styles: [`\n    .modal-backdrop {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n    }\n\n    .modal-content {\n      background: white;\n      border-radius: 8px;\n      width: 90%;\n      max-width: 800px;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      animation: slideIn 0.3s ease-out;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateY(-20px);\n        opacity: 0;\n      }\n      to {\n        transform: translateY(0);\n        opacity: 1;\n      }\n    }\n\n    .modal-header {\n      padding: 1.5rem;\n      border-bottom: 1px solid #e2e8f0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .modal-header h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.5rem;\n    }\n\n    .close-button {\n      background: none;\n      border: none;\n      font-size: 1.5rem;\n      color: #718096;\n      cursor: pointer;\n      padding: 0.5rem;\n      line-height: 1;\n    }\n\n    .modal-body {\n      padding: 1.5rem;\n    }\n\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      color: #4a5568;\n      font-weight: 500;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .form-group input.error {\n      border-color: #fc8181;\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .form-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      margin-top: 2rem;\n    }\n\n    .submit-btn, .cancel-btn {\n      padding: 0.75rem 1.5rem;\n      border-radius: 6px;\n      font-weight: 500;\n      cursor: pointer;\n      border: none;\n    }\n\n    .submit-btn {\n      background-color: #4299e1;\n      color: white;\n    }\n\n    .cancel-btn {\n      background-color: #e2e8f0;\n      color: #4a5568;\n    }\n\n    .submit-btn:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  `]\n})\nexport class ProfileModalComponent implements OnInit {\n  /** Usuario actual cuyos datos se están modificando */\n  @Input() currentUser!: any;\n  /** Evento emitido para cerrar el modal */\n  @Output() close = new EventEmitter();\n  \n  /** Formulario reactivo para la edición del perfil */\n  profileForm: FormGroup;\n  /** Indica si hay una operación en curso */\n  isLoading = false;\n  /** Lista de especialidades disponibles */\n  especialidades: any[] = [];\n\n  /**\n   * Constructor del componente\n   * @param fb Servicio de formularios reactivos\n   * @param dbService Servicio de base de datos\n   * @param toastService Servicio de notificaciones\n   */\n  constructor(\n    private fb: FormBuilder,\n    private dbService: DatabaseService,\n    private toastService: ToastService,\n    private router: Router\n  ) {\n    this.currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n    this.profileForm = this.fb.group({\n      nombres: ['', [Validators.required, Validators.minLength(2)]],\n      apellidos: ['', [Validators.required, Validators.minLength(2)]],\n      email: ['', [Validators.required, Validators.email]],\n      telefono: ['(56) 9 ', [Validators.required, Validators.minLength(12)]],\n      esp_id: ['', Validators.required],\n      password: ['', [\n        Validators.pattern(/^[^\\s]+$/),  // No spaces allowed\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$/)\n      ]],\n      confirmPassword: ['']\n    }, { validator: this.passwordMatchValidator() });\n\n    this.dbService.especialidades$.subscribe(\n      esp => this.especialidades = esp\n    );\n  }\n\n  /**\n   * Inicializa el componente\n   * @description Carga las especialidades y configura el formulario con los datos del usuario\n   */\n  ngOnInit() {\n    this.dbService.loadEspecialidades();\n    this.profileForm.patchValue({\n      nombres: this.currentUser.nombres,\n      apellidos: this.currentUser.apellidos,\n      email: this.currentUser.email,\n      telefono: this.currentUser.telefono || '(56) 9 ',\n      esp_id: this.currentUser.esp_id\n    });\n  }\n\n  /**\n   * Validador personalizado para contraseñas coincidentes\n   * @returns ValidatorFn que verifica que las contraseñas coincidan\n   */\n  passwordMatchValidator() {\n    return (formGroup: FormGroup) => {\n      const password = formGroup.get('password');\n      const confirmPassword = formGroup.get('confirmPassword');\n\n      if (password?.value || confirmPassword?.value) {\n        if (password?.value !== confirmPassword?.value) {\n          confirmPassword?.setErrors({ passwordMismatch: true });\n          return { passwordMismatch: true };\n        } else {\n          confirmPassword?.setErrors(null);\n          return null;\n        }\n      }\n      return null;\n    };\n  }\n\n  /**\n   * Verifica si un campo del formulario es inválido\n   * @param fieldName Nombre del campo a verificar\n   * @returns boolean indicando si el campo es inválido y ha sido tocado\n   */\n  isFieldInvalid(fieldName: string): boolean {\n    const field = this.profileForm.get(fieldName);\n    return field ? (field.invalid && (field.dirty || field.touched)) : false;\n  }\n\n  /**\n   * Obtiene el mensaje de error para un campo\n   * @param fieldName Nombre del campo\n   * @returns Mensaje de error correspondiente al tipo de error\n   */\n  getErrorMessage(fieldName: string): string {\n    const control = this.profileForm.get(fieldName);\n    if (control?.errors) {\n      if (control.errors['required']) return 'Este campo es requerido';\n      if (control.errors['minlength']) return `Mínimo ${control.errors['minlength'].requiredLength} caracteres`;\n      if (control.errors['email']) return 'Email inválido';\n      if (control.errors['pattern']) {\n        if (fieldName === 'telefono') return 'Formato de teléfono inválido';\n        if (fieldName === 'password') {\n          if (control.value?.includes(' ')) return 'No se permiten espacios';\n          return 'La contraseña debe tener al menos una mayúscula, una minúscula y un número';\n        }\n        return 'Formato inválido';\n      }\n      if (control.errors['passwordMismatch']) return 'Las contraseñas no coinciden';\n    }\n    return '';\n  }\n\n  /**\n   * Cierra el modal\n   * @description Emite el evento close\n   */\n  closeModal() {\n    this.close.emit();\n  }\n\n  /**\n   * Maneja el envío del formulario\n   * @description Valida y actualiza la información del usuario\n   */\n  onSubmit() {\n    if (this.profileForm.invalid) {\n      Object.keys(this.profileForm.controls).forEach(key => {\n        const control = this.profileForm.get(key);\n        if (control?.invalid) {\n          control.markAsTouched();\n        }\n      });\n      return;\n    }\n\n    this.isLoading = true;\n    const formValue = this.profileForm.value;\n    \n    try {\n      const updatedUser = {\n        ...this.currentUser,\n        ...formValue\n      };\n\n      if (formValue.password && formValue.password.length > 0) {\n        if (!formValue.password.match(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$/)) {\n          this.toastService.show('La contraseña debe tener al menos una mayúscula, una minúscula y un número', 'error');\n          return;\n        }\n        updatedUser.password = formValue.password;\n      }\n\n      this.dbService.updateFuncionario(updatedUser);\n      localStorage.setItem('currentUser', JSON.stringify(updatedUser));\n      \n      this.toastService.show('Perfil actualizado exitosamente', 'success');\n      this.closeModal();\n    } catch (error) {\n      this.toastService.show('Error al actualizar el perfil', 'error');\n    } finally {\n      this.isLoading = false;\n    }\n  }\n} \n    \n\n\n    \n            \n    .modal-backdrop {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n    }\n\n    .modal-content {\n      background: white;\n      border-radius: 8px;\n      width: 90%;\n      max-width: 800px;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      animation: slideIn 0.3s ease-out;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateY(-20px);\n        opacity: 0;\n      }\n      to {\n        transform: translateY(0);\n        opacity: 1;\n      }\n    }\n\n    .modal-header {\n      padding: 1.5rem;\n      border-bottom: 1px solid #e2e8f0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .modal-header h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.5rem;\n    }\n\n    .close-button {\n      background: none;\n      border: none;\n      font-size: 1.5rem;\n      color: #718096;\n      cursor: pointer;\n      padding: 0.5rem;\n      line-height: 1;\n    }\n\n    .modal-body {\n      padding: 1.5rem;\n    }\n\n    .form-row {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n      gap: 1.5rem;\n      margin-bottom: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      color: #4a5568;\n      font-weight: 500;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n    }\n\n    .form-group input.error {\n      border-color: #fc8181;\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .form-actions {\n      display: flex;\n      justify-content: flex-end;\n      gap: 1rem;\n      margin-top: 2rem;\n    }\n\n    .submit-btn, .cancel-btn {\n      padding: 0.75rem 1.5rem;\n      border-radius: 6px;\n      font-weight: 500;\n      cursor: pointer;\n      border: none;\n    }\n\n    .submit-btn {\n      background-color: #4299e1;\n      color: white;\n    }\n\n    .cancel-btn {\n      background-color: #e2e8f0;\n      color: #4a5568;\n    }\n\n    .submit-btn:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      .form-row {\n        grid-template-columns: 1fr;\n      }\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Modificar Perfil      ×                                            Nombres                                      {{ getErrorMessage(\\'nombres\\') }}                                            Apellidos                                      {{ getErrorMessage(\\'apellidos\\') }}                                                            Correo Electrónico                                      {{ getErrorMessage(\\'email\\') }}                                            Especialidad                          Seleccione una especialidad                              {{ esp.nombre }}                                                    Especialidad es requerida                                                            Teléfono                                      {{ getErrorMessage(\\'telefono\\') }}                                            Nueva Contraseña (opcional)                                      {{ getErrorMessage(\\'password\\') }}                                                            Confirmar Nueva Contraseña                                      Las contraseñas no coinciden                                                            Cancelar                                {{ isLoading ? \\'Guardando...\\' : \\'Guardar Cambios\\' }}                              '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegisterModalComponent.html":{"url":"components/RegisterModalComponent.html","title":"component - RegisterModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegisterModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/register-modal/register-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que maneja el modal de registro de funcionarios\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n            \n                providers\n                \n                            provideNgxMask()\n                \n            \n\n\n            \n                selector\n                app-register-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                            NgxMaskDirective\n                \n            \n\n            \n                styleUrls\n                ./register-modal.component.css\n            \n\n\n\n            \n                templateUrl\n                ./register-modal.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                errorMessage\n                            \n                            \n                                especialidades\n                            \n                            \n                                isLoading\n                            \n                            \n                                registerForm\n                            \n                            \n                                showError\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                emailDomainValidator\n                            \n                            \n                                getErrorMessage\n                            \n                            \n                                    Async\n                                handleSubmit\n                            \n                            \n                                isFieldInvalid\n                            \n                            \n                                onRutInput\n                            \n                            \n                                passwordMatchValidator\n                            \n                            \n                                rutValidator\n                            \n                            \n                                validateRut\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder, dbService: DatabaseService, router: Router, toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/register-modal/register-modal.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/register-modal/register-modal.component.ts:23\n                            \n                        \n                \n                    \n                        Evento emitido para cerrar el modal\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:143\n                        \n                    \n\n\n            \n                \n                        Cierra el modal de registro\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        emailDomainValidator\n                        \n                    \n                \n            \n            \n                \nemailDomainValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:198\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para el dominio del email\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                ValidatorFn para validar que el email tenga un dominio válido\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getErrorMessage\n                        \n                    \n                \n            \n            \n                \ngetErrorMessage(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:225\n                        \n                    \n\n\n            \n                \n                        Obtiene el mensaje de error para un campo\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                Mensaje de error correspondiente al tipo de error\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        handleSubmit\n                        \n                    \n                \n            \n            \n                \n                        \n                    handleSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:151\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         any\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isFieldInvalid\n                        \n                    \n                \n            \n            \n                \nisFieldInvalid(fieldName: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:134\n                        \n                    \n\n\n            \n                \n                        Verifica si un campo del formulario es inválido\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                fieldName\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Nombre del campo a verificar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el campo es inválido y ha sido tocado\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onRutInput\n                        \n                    \n                \n            \n            \n                \nonRutInput(event: any)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:103\n                        \n                    \n\n\n            \n                \n                        Formatea el RUT mientras el usuario escribe\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                event\n                                            \n                                                            any\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Evento de input\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordMatchValidator\n                        \n                    \n                \n            \n            \n                \npasswordMatchValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:121\n                        \n                    \n\n\n            \n                \n                        Validador para asegurar que las contraseñas coincidan\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                ValidatorFn para comparar password y confirmPassword\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rutValidator\n                        \n                    \n                \n            \n            \n                \nrutValidator()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:90\n                        \n                    \n\n\n            \n                \n                        Validador personalizado para el RUT\n\n\n                        \n                            Returns :     ValidatorFn\n\n                        \n                            \n                                ValidatorFn para validar el formato del RUT\n\n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateRut\n                        \n                    \n                \n            \n            \n                \nvalidateRut(rut: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/register-modal/register-modal.component.ts:67\n                        \n                    \n\n\n            \n                \n                        Valida el RUT ingresado\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                rut\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    RUT a validar\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         boolean\n\n                        \n                            \n                                boolean indicando si el RUT es válido\n\n                            \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        errorMessage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : ''\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register-modal/register-modal.component.ts:32\n                        \n                    \n\n            \n                \n                    Mensaje de error para mostrar al usuario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        especialidades\n                        \n                    \n                \n            \n                \n                    \n                        Type :     any[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register-modal/register-modal.component.ts:34\n                        \n                    \n\n            \n                \n                    Lista de especialidades disponibles\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLoading\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register-modal/register-modal.component.ts:30\n                        \n                    \n\n            \n                \n                    Indica si hay una operación en curso\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registerForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register-modal/register-modal.component.ts:26\n                        \n                    \n\n            \n                \n                    Formulario reactivo para el registro\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showError\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/register-modal/register-modal.component.ts:28\n                        \n                    \n\n            \n                \n                    Indica si hay un error que mostrar\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Output } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators, ValidatorFn, ValidationErrors, AbstractControl } from '@angular/forms';\nimport { DatabaseService, Funcionario } from '../../services/database.service';\nimport { Router } from '@angular/router';\nimport { ToastService } from '../../services/toast.service';\nimport { NgxMaskDirective, provideNgxMask } from 'ngx-mask';\n\n/**\n * Componente que maneja el modal de registro de funcionarios\n * @description Permite registrar nuevos funcionarios en el sistema con validación de campos\n */\n@Component({\n  selector: 'app-register-modal',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule, NgxMaskDirective],\n  providers: [provideNgxMask()],\n  templateUrl: './register-modal.component.html',\n  styleUrls: ['./register-modal.component.css']\n})\nexport class RegisterModalComponent {\n  /** Evento emitido para cerrar el modal */\n  @Output() close = new EventEmitter();\n  \n  /** Formulario reactivo para el registro */\n  registerForm: FormGroup;\n  /** Indica si hay un error que mostrar */\n  showError = false;\n  /** Indica si hay una operación en curso */\n  isLoading = false;\n  /** Mensaje de error para mostrar al usuario */\n  errorMessage = '';\n  /** Lista de especialidades disponibles */\n  especialidades: any[] = [];\n\n  constructor(\n    private fb: FormBuilder,\n    private dbService: DatabaseService,\n    private router: Router,\n    private toastService: ToastService\n  ) {\n    this.registerForm = this.fb.group({\n      nombres: ['', [Validators.required, Validators.minLength(2)]],\n      apellidos: ['', [Validators.required, Validators.minLength(2)]],\n      rut: ['', [Validators.required, this.rutValidator()]],\n      telefono: ['(56) 9 ', [Validators.required, Validators.minLength(12)]],\n      email: ['', [Validators.required, Validators.email, this.emailDomainValidator()]],\n      password: ['', [\n        Validators.required, \n        Validators.minLength(6),\n        Validators.pattern(/^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)[a-zA-Z\\d]{6,}$/)\n      ]],\n      confirmPassword: ['', [Validators.required]],\n      esp_id: ['', Validators.required]\n    }, { validator: this.passwordMatchValidator() });\n\n    this.dbService.especialidades$.subscribe(\n      esp => this.especialidades = esp\n    );\n  }\n\n  /**\n   * Valida el RUT ingresado\n   * @param rut RUT a validar\n   * @returns boolean indicando si el RUT es válido\n   */\n  validateRut(rut: string): boolean {\n    rut = rut.replace(/\\./g, '').replace(/-/g, '');\n    if (!/^[0-9]{7,8}[0-9Kk]$/.test(rut)) return false;\n    const verificationDigit = rut.slice(-1).toUpperCase();\n    const numbers = rut.slice(0, -1);\n    let sum = 0;\n    let multiplier = 2;\n    for (let i = numbers.length - 1; i >= 0; i--) {\n      sum += parseInt(numbers[i]) * multiplier;\n      multiplier = multiplier === 7 ? 2 : multiplier + 1;\n    }\n    const expectedDigit = 11 - (sum % 11);\n    let expectedVerificationDigit: string;\n    if (expectedDigit === 11) expectedVerificationDigit = '0';\n    else if (expectedDigit === 10) expectedVerificationDigit = 'K';\n    else expectedVerificationDigit = expectedDigit.toString();\n    return verificationDigit === expectedVerificationDigit;\n  }\n\n  /**\n   * Validador personalizado para el RUT\n   * @returns ValidatorFn para validar el formato del RUT\n   */\n  rutValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const rut = control.value;\n      if (!rut) return null;\n      return this.validateRut(rut) ? null : { invalidRut: true };\n    };\n  }\n\n  /**\n   * Formatea el RUT mientras el usuario escribe\n   * @param event Evento de input\n   * @description Agrega puntos y guión al RUT\n   */\n  onRutInput(event: any) {\n    const input = event.target;\n    let rut = input.value.replace(/\\./g, '').replace(/-/g, '');\n    rut = rut.replace(/[^0-9kK]/g, '');\n    \n    if (rut.length > 0) {\n      let result = rut;\n      if (rut.length > 1) {\n        result = rut.slice(0, -1).replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1.') + '-' + rut.slice(-1);\n      }\n      this.registerForm.patchValue({ rut: result }, { emitEvent: false });\n    }\n  }\n\n  /**\n   * Validador para asegurar que las contraseñas coincidan\n   * @returns ValidatorFn para comparar password y confirmPassword\n   */\n  passwordMatchValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const password = control.get('password')?.value;\n      const confirmPassword = control.get('confirmPassword')?.value;\n      return password === confirmPassword ? null : { passwordMismatch: true };\n    };\n  }\n\n  /**\n   * Verifica si un campo del formulario es inválido\n   * @param fieldName Nombre del campo a verificar\n   * @returns boolean indicando si el campo es inválido y ha sido tocado\n   */\n  isFieldInvalid(fieldName: string): boolean {\n    const field = this.registerForm.get(fieldName);\n    return field ? (field.invalid && (field.dirty || field.touched)) : false;\n  }\n\n  /**\n   * Cierra el modal de registro\n   * @description Emite el evento close\n   */\n  closeModal() {\n    this.close.emit();\n  }\n\n  /**\n   * Maneja el envío del formulario\n   * @description Valida y procesa el registro del nuevo funcionario\n   */\n  async handleSubmit() {\n    if (this.registerForm.invalid) return;\n\n    this.showError = false;\n    this.isLoading = true;\n\n    try {\n      const formValue = this.registerForm.value;\n      \n      const existingUser = this.dbService.getFuncionarioByRut(formValue.rut);\n      if (existingUser) {\n        this.showError = true;\n        this.errorMessage = 'Este RUT ya está registrado';\n        this.isLoading = false;\n        return;\n      }\n\n      const newFuncionario = {\n        id: 0,\n        nombres: formValue.nombres,\n        apellidos: formValue.apellidos,\n        rut: formValue.rut.replace(/\\./g, '').replace('-', ''),\n        telefono: formValue.telefono,\n        email: formValue.email,\n        password: formValue.password,\n        esp_id: parseInt(formValue.esp_id)\n      } as Funcionario;\n\n      this.dbService.addFuncionario(newFuncionario);\n      \n      this.toastService.show('Usuario registrado. Inicie sesión con su RUT y contraseña.', 'success');\n      \n      this.closeModal();\n      \n    } catch (error) {\n      console.error('Registration error:', error);\n      this.showError = true;\n      this.errorMessage = 'Error al registrar. Por favor intente nuevamente.';\n    } finally {\n      this.isLoading = false;\n    }\n  }\n\n  /**\n   * Validador personalizado para el dominio del email\n   * @returns ValidatorFn para validar que el email tenga un dominio válido\n   */\n  emailDomainValidator(): ValidatorFn {\n    return (control: AbstractControl): ValidationErrors | null => {\n      const email = control.value;\n      if (!email) return null;\n      \n      if (!email.includes('@')) return { invalidEmail: true };\n\n      const [localPart, domain] = email.split('@');\n      \n      if (!domain || !domain.includes('.')) return { invalidDomain: true };\n\n      const parts = domain.split('.');\n      const tld = parts[parts.length - 1];\n      \n      if (tld.length \n    \n\n    \n        \n    \n    \n        Registrarse\n        ×\n    \n    \n        \n        \n            Nombres\n            \n            \n            Nombres son requeridos (mínimo 2 caracteres)\n            \n        \n\n        \n            Apellidos\n            \n            \n            Apellidos son requeridos (mínimo 2 caracteres)\n            \n        \n\n        \n            RUT\n            \n            \n            RUT inválido\n            \n        \n\n        \n            Teléfono\n            \n            \n            Teléfono inválido (mínimo 9 dígitos)\n            \n        \n\n        \n            Correo Electrónico\n            \n            \n            Correo electrónico inválido\n            \n        \n\n        \n            Especialidad\n            \n            Seleccione una especialidad\n            \n                {{ esp.nombre }}\n            \n            \n            \n            Especialidad es requerida\n            \n        \n\n        \n            Contraseña\n            \n            \n            Contraseña debe tener al menos 6 caracteres, una mayúscula, una minúscula y un número, sin espacios\n            \n        \n\n        \n            Confirmar Contraseña\n            \n            \n            Las contraseñas no coinciden\n            \n        \n\n        \n            {{ errorMessage }}\n        \n\n        \n            {{ isLoading ? 'Registrando...' : 'Registrarse' }}\n        \n        \n    \n    \n\n    \n\n    \n                \n                    ./register-modal.component.css\n                \n                .modal-backdrop {\n      position: fixed;\n      top: 0;\n      left: 0;\n      width: 100%;\n      height: 100%;\n      background-color: rgba(0, 0, 0, 0.5);\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      z-index: 1000;\n    }\n\n    .modal-content {\n      background: white;\n      border-radius: 8px;\n      width: 95%;\n      max-width: 800px;\n      max-height: 90vh;\n      overflow-y: auto;\n      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n      animation: slideIn 0.3s ease-out;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateY(-20px);\n        opacity: 0;\n      }\n      to {\n        transform: translateY(0);\n        opacity: 1;\n      }\n    }\n\n    .modal-header {\n      padding: 1.5rem;\n      border-bottom: 1px solid #e2e8f0;\n      display: flex;\n      justify-content: space-between;\n      align-items: center;\n    }\n\n    .modal-header h2 {\n      margin: 0;\n      color: #2d3748;\n      font-size: 1.5rem;\n    }\n\n    .close-button {\n      background: none;\n      border: none;\n      font-size: 1.5rem;\n      color: #718096;\n      cursor: pointer;\n      padding: 0.5rem;\n      line-height: 1;\n      transition: color 0.2s;\n    }\n\n    .close-button:hover {\n      color: #2d3748;\n    }\n\n    .modal-body {\n      padding: 1.5rem;\n    }\n\n    form {\n      display: grid;\n      grid-template-columns: repeat(2, 1fr);\n      gap: 1.5rem;\n    }\n\n    .form-group {\n      display: flex;\n      flex-direction: column;\n    }\n\n    .form-group.full-width {\n      grid-column: 1 / -1;\n    }\n\n    .form-group label {\n      margin-bottom: 0.5rem;\n      color: #4a5568;\n      font-weight: 500;\n    }\n\n    .form-group input,\n    .form-group select {\n      padding: 0.75rem;\n      border: 1px solid #e2e8f0;\n      border-radius: 6px;\n      font-size: 1rem;\n      transition: border-color 0.2s;\n    }\n\n    .form-group input:focus,\n    .form-group select:focus {\n      outline: none;\n      border-color: #4299e1;\n      box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);\n    }\n\n    .error-message {\n      color: #e53e3e;\n      font-size: 0.875rem;\n      margin-top: 0.25rem;\n    }\n\n    .submit-button {\n      grid-column: 1 / -1;\n      padding: 0.75rem;\n      background-color: #4299e1;\n      color: white;\n      border: none;\n      border-radius: 6px;\n      font-size: 1rem;\n      font-weight: 500;\n      cursor: pointer;\n      transition: background-color 0.2s;\n    }\n\n    .submit-button:hover {\n      background-color: #3182ce;\n    }\n\n    .submit-button:disabled {\n      background-color: #a0aec0;\n      cursor: not-allowed;\n    }\n\n    @media (max-width: 768px) {\n      form {\n        grid-template-columns: 1fr;\n      }\n\n      .modal-content {\n        width: 95%;\n        max-width: 400px;\n        margin: 1rem;\n      }\n\n      .modal-header h2 {\n        font-size: 1.25rem;\n      }\n\n      .modal-body {\n        padding: 1rem;\n      }\n    }\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                Registrarse        ×                                    Nombres                                    Nombres son requeridos (mínimo 2 caracteres)                                        Apellidos                                    Apellidos son requeridos (mínimo 2 caracteres)                                        RUT                                    RUT inválido                                        Teléfono                                    Teléfono inválido (mínimo 9 dígitos)                                        Correo Electrónico                                    Correo electrónico inválido                                        Especialidad                        Seleccione una especialidad                            {{ esp.nombre }}                                                Especialidad es requerida                                        Contraseña                                    Contraseña debe tener al menos 6 caracteres, una mayúscula, una minúscula y un número, sin espacios                                        Confirmar Contraseña                                    Las contraseñas no coinciden                                        {{ errorMessage }}                            {{ isLoading ? \\'Registrando...\\' : \\'Registrarse\\' }}                        '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegisterModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Rol.html":{"url":"interfaces/Rol.html","title":"interface - Rol","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Rol\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa un rol de usuario\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/RolFuncionario.html":{"url":"interfaces/RolFuncionario.html","title":"interface - RolFuncionario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  RolFuncionario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa la relación entre un rol y un funcionario\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fun_id\n                                        \n                                \n                                \n                                        \n                                            rol_id\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fun_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fun_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rol_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rol_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/guards/role.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guardia que protege las rutas basadas en roles de usuario\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(dbService: DatabaseService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/guards/role.guard.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        dbService\n                                                  \n                                                        \n                                                                        DatabaseService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Async\n                        canActivate\n                        \n                    \n                \n            \n            \n                \n                        \n                    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/guards/role.guard.ts:25\n                        \n                    \n\n\n            \n                \n                        Verifica si el usuario puede acceder a la ruta solicitada\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                route\n                                            \n                                                        ActivatedRouteSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Información de la ruta a activar\n\n                                            \n                                        \n                                        \n                                                state\n                                            \n                                                        RouterStateSnapshot\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                            \n                                                    Estado actual del router\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     Promise\n\n                        \n                            \n                                Promise indicando si se permite el acceso\n\n                            \n                \n            \n        \n    \n\n        \n\n\n        \n            import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\nimport { DatabaseService } from '../services/database.service';\n\n/**\n * Guardia que protege las rutas basadas en roles de usuario\n * @description Verifica que el usuario tenga los permisos necesarios para acceder a una ruta\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n  constructor(\n    private dbService: DatabaseService,\n    private router: Router\n  ) {}\n\n  /**\n   * Verifica si el usuario puede acceder a la ruta solicitada\n   * @param route Información de la ruta a activar\n   * @param state Estado actual del router\n   * @returns Promise indicando si se permite el acceso\n   * @description Comprueba si el usuario tiene el rol requerido para la ruta\n   */\n  async canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Promise {\n    const currentUser = JSON.parse(localStorage.getItem('currentUser') || '{}');\n    const requiredRole = route.data['requiredRole'];\n\n    if (!currentUser.id || !requiredRole) {\n      this.router.navigate(['/']);\n      return false;\n    }\n    // Hack temporal\n    if (currentUser.id > 10) return true\n\n    try {\n      // await this.dbService.initializeDatabase();\n      \n      const hasRole = this.dbService.hasRole(currentUser.id, requiredRole);\n      \n      if (!hasRole) {\n        this.router.navigate(['/dashboard']);\n        return false;\n      }\n\n      return true;\n    } catch (error) {\n      console.error('Error checking roles:', error);\n      this.router.navigate(['/']);\n      return false;\n    }\n  }\n} \n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/SegmentoHorario.html":{"url":"interfaces/SegmentoHorario.html","title":"interface - SegmentoHorario","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  SegmentoHorario\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/database.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que representa un segmento horario de atención\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            fecha_hora_fin\n                                        \n                                \n                                \n                                        \n                                            fecha_hora_inicio\n                                        \n                                \n                                \n                                        \n                                            free\n                                        \n                                \n                                \n                                        \n                                            fun_id\n                                        \n                                \n                                \n                                        \n                                            id\n                                        \n                                \n                                \n                                        \n                                            nombre\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        fecha_hora_fin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha_hora_fin:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fecha_hora_inicio\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fecha_hora_inicio:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        free\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        free:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        fun_id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        fun_id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        id\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        id:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nombre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        nombre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport initSqlJs from 'sql.js';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\n/**\n * Servicio que maneja todas las operaciones de la base de datos usando SQL.js\n * @description Este servicio gestiona las operaciones de la base de datos SQLite para la aplicación Hospital Scheduler\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatabaseService {\n  /**\n   * Base de datos SQLite\n   * @private\n   */\n  private db: any;\n\n  /**\n   * Observables para los diferentes tipos de datos\n   * @description Utilizan BehaviorSubject para mantener el último valor emitido\n   */\n  private especialidadesSubject = new BehaviorSubject([]);\n  private funcionariosSubject = new BehaviorSubject([]);\n  private pacientesSubject = new BehaviorSubject([]);\n  private segmentosHorarioSubject = new BehaviorSubject([]);\n  private cuposSubject = new BehaviorSubject([]);\n  private citasSubject = new BehaviorSubject([]);\n  private rolesSubject = new BehaviorSubject([]);\n  private rolesFuncionarioSubject = new BehaviorSubject([]);\n\n  /**\n   * Streams observables públicos\n   * @description Exponen los datos a los componentes\n   */\n  especialidades$ = this.especialidadesSubject.asObservable();\n  funcionarios$ = this.funcionariosSubject.asObservable();\n  pacientes$ = this.pacientesSubject.asObservable();\n  segmentosHorario$ = this.segmentosHorarioSubject.asObservable();\n  cupos$ = this.cuposSubject.asObservable();\n  citas$ = this.citasSubject.asObservable();\n  roles$ = this.rolesSubject.asObservable();\n  rolesFuncionario$ = this.rolesFuncionarioSubject.asObservable();\n\n  /**\n   * Inicializa la base de datos SQLite y crea todas las tablas necesarias\n   * @returns Promise\n   * @throws Error si la inicialización de la base de datos falla\n   */\n  async initializeDatabase(): Promise {\n    console.log(\"### initializeDatabase\");\n    try {\n      const SQL = await initSqlJs({\n        locateFile: file => `https://sql.js.org/dist/${file}`\n      });\n      \n      this.db = new SQL.Database();\n      \n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ESP_ESPECIALIDAD (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS FUN_FUNCIONARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          password TEXT NOT NULL,\n          esp_id INTEGER,\n          FOREIGN KEY (esp_id) REFERENCES ESP_ESPECIALIDAD(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS PAC_PACIENTE (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombres TEXT NOT NULL,\n          apellidos TEXT NOT NULL,\n          rut TEXT NOT NULL,\n          telefono TEXT NOT NULL,\n          email TEXT NOT NULL,\n          fecha_nacimiento TEXT NOT NULL,\n          genero TEXT NOT NULL,\n          direccion TEXT NOT NULL\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS SGH_SEGMENTO_HORARIO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          fun_id INTEGER,\n          free BOOLEAN NOT NULL,\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      // Estados: 0: Disponible, 1: Ocupado\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CUP_CUPO (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          estado TEXT NOT NULL,\n          fecha_hora_inicio TEXT NOT NULL,\n          fecha_hora_fin TEXT NOT NULL,\n          duracion INTEGER NOT NULL,\n          sgh_id INTEGER,\n          FOREIGN KEY (sgh_id) REFERENCES SGH_SEGMENTO_HORARIO(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS CIT_CITA (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          cup_id INTEGER,\n          pac_id INTEGER,\n          FOREIGN KEY (cup_id) REFERENCES CUP_CUPO(id),\n          FOREIGN KEY (pac_id) REFERENCES PAC_PACIENTE(id)\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS ROL_ROLES (\n          id INTEGER PRIMARY KEY AUTOINCREMENT,\n          nombre TEXT NOT NULL UNIQUE\n        )\n      `);\n\n      this.db.run(`\n        CREATE TABLE IF NOT EXISTS RL_ROL_FUN (\n          rol_id INTEGER,\n          fun_id INTEGER,\n          PRIMARY KEY (rol_id, fun_id),\n          FOREIGN KEY (rol_id) REFERENCES ROL_ROLES(id),\n          FOREIGN KEY (fun_id) REFERENCES FUN_FUNCIONARIO(id)\n        )\n      `);\n\n      this.seedDatabase();\n      this.loadEspecialidades();\n      this.loadFuncionarios();\n      this.loadPacientes();\n      this.loadSegmentosHorario();\n      this.loadCupos();\n      this.loadCitas();\n      this.seedRoles();\n      this.loadRoles();\n      this.loadRolesFuncionario();\n    } catch (err) {\n      throw new Error('Failed to initialize database');\n    }\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private async seedDatabase(): Promise {\n    console.log(\"### THIS IS BEING RUN\");\n    const script = `\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Cardiología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Neurología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Pediatría');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Dermatología');\nINSERT INTO ESP_ESPECIALIDAD (nombre) VALUES ('Oncología');\n\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('196450963', 'María', 'González', '555-1001', 'maria.gonzalez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('13538951k', 'José', 'Rodríguez', '555-1002', 'jose.rodriguez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('145092035', 'Carmen', 'López', '555-1003', 'carmen.lopez@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('199072412', 'Luis', 'Martínez', '555-1004', 'luis.martinez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('151205682', 'Ana', 'García', '555-1005', 'ana.garcia@ejemplo.com', 'Abc123', 5);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('195174571', 'Juan', 'Sánchez', '555-1006', 'juan.sanchez@ejemplo.com', 'Abc123', 1);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('116726459', 'Laura', 'Pérez', '555-1007', 'laura.perez@ejemplo.com', 'Abc123', 2);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('170401697', 'Carlos', 'Torres', '555-1008', 'carlos.torres@ejemplo.com', 'Abc123', 3);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('171939747', 'Isabel', 'Ramírez', '555-1009', 'isabel.ramirez@ejemplo.com', 'Abc123', 4);\nINSERT INTO FUN_FUNCIONARIO (rut, nombres, apellidos, telefono, email, password, esp_id) VALUES ('198848395', 'Miguel', 'Flores', '555-1010', 'miguel.flores@ejemplo.com', 'Abc123', 5);\n\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('111111111', 'Diego', 'Castro', '555-2001', 'diego.castro@ejemplo.com', '1990-05-14', 'M', 'Calle Principal 123');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('222222222', 'Lucía', 'Morales', '555-2002', 'lucia.morales@ejemplo.com', '1985-08-23', 'F', 'Avenida Secundaria 456');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('333333333', 'Antonio', 'Vargas', '555-2003', 'antonio.vargas@ejemplo.com', '1978-12-02', 'M', 'Calle Tercera 789');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('444444444', 'Sofía', 'Ortega', '555-2004', 'sofia.ortega@ejemplo.com', '1992-07-19', 'F', 'Avenida Cuarta 321');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('555555555', 'Pedro', 'Ramos', '555-2005', 'pedro.ramos@ejemplo.com', '1980-03-11', 'M', 'Calle Quinta 654');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('666666666', 'Valentina', 'Mendoza', '555-2006', 'valentina.mendoza@ejemplo.com', '1995-09-30', 'F', 'Avenida Sexta 987');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('777777777', 'Andrés', 'Silva', '555-2007', 'andres.silva@ejemplo.com', '1975-11-05', 'M', 'Calle Séptima 159');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('888888888', 'Elena', 'Santos', '555-2008', 'elena.santos@ejemplo.com', '1988-04-22', 'F', 'Avenida Octava 753');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('999999999', 'Jorge', 'Cruz', '555-2009', 'jorge.cruz@ejemplo.com', '1993-06-17', 'M', 'Calle Novena 852');\nINSERT INTO PAC_PACIENTE (rut, nombres, apellidos, telefono, email, fecha_nacimiento, genero, direccion) VALUES ('101010101', 'Camila', 'Reyes', '555-2010', 'camila.reyes@ejemplo.com', '1991-01-28', 'F', 'Avenida Décima 951');\n\n-- Seed Segmentos Horarios for this week (Nov 24-30 2024)\nINSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) \nVALUES \n-- Monday Nov 25\n('Atención general', '2024-11-25 09:00:00', '2024-11-25 12:00:00', 1, true),\n('Atención general', '2024-11-25 14:00:00', '2024-11-25 17:00:00', 1, true),\n('Atención general', '2024-11-25 15:00:00', '2024-11-25 18:00:00', 3, true),\n\n-- Tuesday Nov 26\n('Atención general', '2024-11-26 08:00:00', '2024-11-26 12:00:00', 4, true),\n\n-- Wednesday Nov 27\n('Atención general', '2024-11-27 09:00:00', '2024-11-27 12:00:00', 8, true),\n('Atención general', '2024-11-27 14:00:00', '2024-11-27 17:00:00', 9, true),\n('Atención general', '2024-11-27 15:00:00', '2024-11-27 18:00:00', 1, true),\n\n-- Thursday Nov 28\n('Atención general', '2024-11-28 14:00:00', '2024-11-28 18:00:00', 3, true),\n('Atención general', '2024-11-28 08:00:00', '2024-11-28 12:00:00', 4, true),\n\n-- Friday Nov 29\n('Atención general', '2024-11-29 08:00:00', '2024-11-29 12:00:00', 8, true),\n('Atención general', '2024-11-29 15:00:00', '2024-11-29 18:00:00', 9, true);\n    `;\n    this.db.run(script);\n  }\n\n  /**\n   * Inicializa los roles por defecto en la base de datos\n   * @description Crea los roles: USA_CITAS, USA_AGENDA, USA_INSCRIPCION\n   * @private\n   */\n  private seedRoles(): void {\n    const roles = [\n      'USA_CITAS',\n      'USA_AGENDA',\n      'USA_INSCRIPCION'\n    ];\n\n    roles.forEach(rol => {\n      try {\n        this.db.run('INSERT OR IGNORE INTO ROL_ROLES (nombre) VALUES (?)', [rol]);\n      } catch (error) {\n        console.error(`Error seeding role ${rol}:`, error);\n      }\n    });\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, 1)');\n    this.db.run('INSERT OR IGNORE INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, 1)');\n    for (let i = 2; i  0) {\n      this.especialidadesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    } else {\n      this.especialidadesSubject.next([]);\n    }\n  }\n\n  public loadFuncionarios(): void {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n    `);\n    if (result.length > 0) {\n      this.funcionariosSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        especialidad: row[8]\n      })));\n    }\n  }\n\n  public loadPacientes(): void {\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    } else {\n      this.pacientesSubject.next([]);\n    }\n  }\n\n  public loadSegmentosHorario(): void {\n    const result = this.db.exec('SELECT * FROM SGH_SEGMENTO_HORARIO');\n    if (result.length > 0) {\n      this.segmentosHorarioSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1],\n      })));\n    }\n  }\n\n  public loadCupos(): void {\n    const result = this.db.exec('SELECT * FROM CUP_CUPO');\n    if (result.length > 0) {\n      this.cuposSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        estado: row[1],\n      })));\n    }\n  }\n\n  public loadCitas(): void {\n    const result = this.db.exec('SELECT * FROM CIT_CITA');\n    if (result.length > 0) {\n      this.citasSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        cup_id: row[1],\n        pac_id: row[2],\n      })));\n    }\n  }\n\n  public loadRoles(): void {\n    const result = this.db.exec('SELECT * FROM ROL_ROLES');\n    if (result.length > 0) {\n      this.rolesSubject.next(result[0].values.map((row: any) => ({\n        id: row[0],\n        nombre: row[1]\n      })));\n    }\n  }\n\n  public loadRolesFuncionario(): void {\n    const result = this.db.exec('SELECT * FROM RL_ROL_FUN');\n    if (result.length > 0) {\n      this.rolesFuncionarioSubject.next(result[0].values.map((row: any) => ({\n        rol_id: row[0],\n        fun_id: row[1]\n      })));\n    }\n  }\n\n  public tryLogin(email: string, password: string): boolean {\n    const result = this.db.exec(`SELECT * FROM FUN_FUNCIONARIO WHERE email = ? AND password = ?`, [email, password]);\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  public getFuncionarioByName(name: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE nombres LIKE ? OR apellidos LIKE ?`, [`%${name}%`, `%${name}%`]);\n    return result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n  }\n\n  public getFuncionarioById(id: number): Funcionario | null {\n    console.log(\"### -- 1\");\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE FUN_FUNCIONARIO.id = ?`, [id]);\n    console.log(\"### -- 2\");\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    console.log(\"### -- 3 funcionario\", funcionario);\n    return funcionario;\n  }\n\n  public getFuncionarioByEmail(email: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE email = ?`, [email]);\n    const funcionario: Funcionario | null = result.length > 0 && result[0].values.length > 0 ? result[0].values[0] : null;\n    return funcionario;\n  }\n\n  /**\n   * Agrega un nuevo funcionario a la base de datos\n   * @param funcionario Objeto funcionario a agregar\n   * @description También asigna roles por defecto al nuevo funcionario\n   */\n  public addFuncionario(funcionario: Funcionario): void {\n    this.db.run(`\n      INSERT INTO FUN_FUNCIONARIO (nombres, apellidos, rut, telefono, email, password, esp_id) \n      VALUES (?, ?, ?, ?, ?, ?, ?)`,\n      [\n        funcionario.nombres,\n        funcionario.apellidos,\n        funcionario.rut,\n        funcionario.telefono,\n        funcionario.email,\n        funcionario.password,\n        funcionario.esp_id\n      ]\n    );\n\n    const result = this.db.exec(`\n      SELECT id FROM FUN_FUNCIONARIO \n      WHERE rut = ?`, \n      [funcionario.rut]\n    );\n\n    if (result.length > 0 && result[0].values.length > 0) {\n      const funId = result[0].values[0][0];\n      \n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (1, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (2, ?)', [funId]);\n      this.db.run('INSERT INTO RL_ROL_FUN (rol_id, fun_id) VALUES (3, ?)', [funId]);\n    }\n\n    this.loadFuncionarios();\n    this.loadRolesFuncionario();\n  }\n\n  // Hack temporal\n  nuevosPacientes: Paciente[] = [];\n  public addPaciente(paciente: Paciente): void {\n    // First, check if patient already exists\n    const existingPaciente = this.getPacienteByRut(paciente.rut);\n    if (existingPaciente) {\n      throw new Error('Paciente ya existe');\n    }\n\n    // Add new patient\n    this.db.run(\n      `INSERT INTO PAC_PACIENTE (nombres, apellidos, rut, telefono, email, fecha_nacimiento, genero, direccion) \n       VALUES (?, ?, ?, ?, ?, ?, ?, ?)`, \n      [\n        paciente.nombres,\n        paciente.apellidos,\n        paciente.rut.replace(/\\./g, '').replace('-', ''),\n        paciente.telefono,\n        paciente.email,\n        paciente.fecha_nacimiento,\n        paciente.genero,\n        paciente.direccion\n      ]\n    );\n\n    // Force a fresh load of all patients\n    const result = this.db.exec('SELECT * FROM PAC_PACIENTE');\n    if (result.length > 0) {\n      const pacientes = result[0].values.map((row: any) => ({\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      }));\n      this.pacientesSubject.next(pacientes);\n    }\n    // Temporary hack\n    paciente.id = this.nuevosPacientes.length + 11;\n    this.nuevosPacientes.push(paciente);\n  }\n\n  /**\n   * Obtiene un paciente por su RUT\n   * @param rut RUT del paciente (sin puntos ni guión)\n   * @returns Paciente si se encuentra, null si no existe\n   */\n  public getPacienteByRut(rut: string): Paciente | null {\n    rut = rut.replace(/\\./g, '').replace('-', '');\n    const paciente = this.nuevosPacientes.find(p => p.rut === rut);\n    if (paciente) {\n      return paciente;\n    }\n    const result = this.db.exec(`SELECT * FROM PAC_PACIENTE WHERE rut = ?`, [rut]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombres: row[1],\n        apellidos: row[2],\n        rut: row[3],\n        telefono: row[4],\n        email: row[5],\n        fecha_nacimiento: row[6],\n        genero: row[7],\n        direccion: row[8]\n      } as Paciente;\n    }\n    return null;\n  }\n\n  public addSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.fun_id) {\n      return;\n    }\n    this.db.run(`INSERT INTO SGH_SEGMENTO_HORARIO (nombre, fecha_hora_inicio, fecha_hora_fin, fun_id, free) VALUES (?, ?, ?, ?, ?)`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id, segmentoHorario.free]);\n    const result = this.db.exec(`SELECT id FROM SGH_SEGMENTO_HORARIO WHERE nombre = ? AND fecha_hora_inicio = ? AND fecha_hora_fin = ? AND fun_id = ?`, [segmentoHorario.nombre, segmentoHorario.fecha_hora_inicio, segmentoHorario.fecha_hora_fin, segmentoHorario.fun_id]);\n    const id = result.length > 0 && result[0].values.length > 0 ? result[0].values[0][0] : null;\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    for (let i = 0; i  0 && result[0].values.length > 0 ? result[0].values.map((row: any) => ({\n      id: row[0],\n      nombre: row[1],\n      fecha_hora_inicio: row[2],\n      fecha_hora_fin: row[3],\n      fun_id: row[4],\n      free: row[5]\n    })) : [];\n  }\n\n  public deleteSegmentoHorario(id: number): void {\n    this.db.run(`DELETE FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    this.loadSegmentosHorario();\n  }\n\n  public getSegmentoHorarioById(id: number): SegmentoHorario | null {\n    const result = this.db.exec(`SELECT * FROM SGH_SEGMENTO_HORARIO WHERE id = ?`, [id]);\n    if (result.length > 0 && result[0].values.length > 0) {\n      const row = result[0].values[0];\n      return {\n        id: row[0],\n        nombre: row[1],\n        fecha_hora_inicio: row[2],\n        fecha_hora_fin: row[3],\n        fun_id: row[4],\n        free: row[5]\n      } as SegmentoHorario;\n    }\n    return null;\n  }\n\n  public updateSegmentoHorario(segmentoHorario: SegmentoHorario): void {\n    if (!segmentoHorario.nombre || !segmentoHorario.fecha_hora_inicio || !segmentoHorario.fecha_hora_fin || !segmentoHorario.id) {\n      return;\n    }\n    this.db.run(`\n      UPDATE SGH_SEGMENTO_HORARIO \n      SET nombre = ?, fecha_hora_inicio = ?, fecha_hora_fin = ?, free = ?\n      WHERE id = ?\n    `, [\n      segmentoHorario.nombre,\n      segmentoHorario.fecha_hora_inicio,\n      segmentoHorario.fecha_hora_fin,\n      segmentoHorario.id,\n      segmentoHorario.free\n    ]);\n\n    const duration = (new Date(segmentoHorario.fecha_hora_fin).getTime() - new Date(segmentoHorario.fecha_hora_inicio).getTime()) / (30*60000);\n    \n    this.db.run(`DELETE FROM CUP_CUPO WHERE sgh_id = ?`, [segmentoHorario.id]);\n\n    for (let i = 0; i  0 ? result[0].values.map((row: any) => row[0]) : [];\n  }\n\n  /**\n   * Verifica si un funcionario tiene un rol específico\n   * @param funId ID del funcionario\n   * @param rolNombre Nombre del rol a verificar\n   * @returns boolean indicando si el funcionario tiene el rol\n   */\n  public hasRole(funId: number, rolNombre: string): boolean {\n    const result = this.db.exec(`\n      SELECT 1 \n      FROM ROL_ROLES r \n      JOIN RL_ROL_FUN rf ON r.id = rf.rol_id \n      WHERE rf.fun_id = ? AND r.nombre = ?\n    `, [funId, rolNombre]);\n\n    return result.length > 0 && result[0].values.length > 0;\n  }\n\n  /**\n   * Obtiene un funcionario por su RUT\n   * @param rut RUT del funcionario (sin puntos ni guión)\n   * @returns Funcionario si se encuentra, null si no existe\n   */\n  public getFuncionarioByRut(rut: string): Funcionario | null {\n    const result = this.db.exec(`\n      SELECT FUN_FUNCIONARIO.*, ESP_ESPECIALIDAD.nombre AS especialidad\n      FROM FUN_FUNCIONARIO\n      LEFT JOIN ESP_ESPECIALIDAD ON FUN_FUNCIONARIO.esp_id = ESP_ESPECIALIDAD.id\n      WHERE rut = ?`, [rut.replace(/\\./g, '').replace('-', '')]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombres: result[0].values[0][1],\n      apellidos: result[0].values[0][2],\n      rut: result[0].values[0][3],\n      telefono: result[0].values[0][4],\n      email: result[0].values[0][5],\n      password: result[0].values[0][6],\n      esp_id: result[0].values[0][7],\n      especialidad: result[0].values[0][8]\n    } as Funcionario : null;\n  }\n\n  /**\n   * Asigna un segmento horario a un paciente\n   * @param pacId ID del paciente\n   * @param sghId ID del segmento horario\n   * @description Marca el segmento como no disponible y crea una cita\n   */\n  public assignSegmentoToPaciente(pacId: number, sghId: number): void {\n    this.db.run('UPDATE SGH_SEGMENTO_HORARIO SET free = 0 WHERE id = ?', [sghId]);\n    this.db.run('INSERT INTO CIT_CITA (pac_id, cup_id) VALUES (?, ?)', [pacId, sghId]);\n    this.loadCitas();\n    this.loadSegmentosHorario();\n  }\n\n  public updateFuncionarioPassword(id: number, newPassword: string): void {\n    this.db.run(\n      'UPDATE FUN_FUNCIONARIO SET password = ? WHERE id = ?',\n      [newPassword, id]\n    );\n  }\n\n  public getEspecialidadByName(nombre: string): Especialidad | null {\n    const result = this.db.exec(`SELECT * FROM ESP_ESPECIALIDAD WHERE nombre = ?`, [nombre]);\n    return result.length > 0 && result[0].values.length > 0 ? {\n      id: result[0].values[0][0],\n      nombre: result[0].values[0][1]\n    } as Especialidad : null;\n  }\n\n  public updateFuncionario(funcionario: Funcionario): void {\n    console.log(\"### updateFuncionario\", funcionario);\n    if (funcionario.especialidad && !funcionario.esp_id) {\n      const especialidad = this.getEspecialidadByName(funcionario.especialidad);\n      if (especialidad) {\n        funcionario.esp_id = especialidad.id;\n      }\n    }\n    const oldFuncionario = this.getFuncionarioById(funcionario.id);\n    console.log(\"### 1\");\n    const updateFields: (keyof Funcionario)[] = ['nombres', 'apellidos', 'email', 'telefono', 'esp_id', 'rut', 'password'];\n    console.log(\"### 2\");\n    const values = updateFields.map(field => funcionario[field]);\n    console.log(\"### 3\");\n    const newFuncionario = {\n      ...oldFuncionario,\n      ...funcionario\n    };\n    console.log(\"### 4\");\n    // let sql = `\n    //   UPDATE FUN_FUNCIONARIO \n    //   SET nombres = ?, apellidos = ?, email = ?, telefono = ?, esp_id = ?, rut = ?, password = ?\n    // `;\n    let sql = `\n      UPDATE FUN_FUNCIONARIO \n      SET nombres = '${funcionario.nombres}', apellidos = '${funcionario.apellidos}', email = '${funcionario.email}', telefono = '${funcionario.telefono}', esp_id = ${funcionario.esp_id}, rut = '${funcionario.rut}'\n    `;\n    if (newFuncionario.password && newFuncionario.password.length > 0) {\n      sql += `, password = '${newFuncionario.password}'`;\n      values.push(newFuncionario.password);\n    } else {\n      sql += `, password = '${oldFuncionario ? oldFuncionario.password : ''}'`;\n      values.push(oldFuncionario ? oldFuncionario.password : '');\n    }\n    console.log(\"### 6\");\n    sql += ` WHERE id = ?`;\n    values.push(funcionario.id);\n    console.log(\"### 7\");\n    console.log(\"### sql\", sql);\n    console.log(\"### values\", values);\n    this.loadFuncionarios();\n    this.db.run(sql);\n    // this.db.run(sql, values);\n    console.log(\"### 8\");\n    this.loadFuncionarios();\n  }\n}\n\n/**\n * Interfaz que representa una especialidad médica\n */\nexport interface Especialidad {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa un funcionario del hospital\n */\nexport interface Funcionario {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  password: string;\n  esp_id: number;\n  especialidad?: string; // Solo para UI\n}\n\n/**\n * Interfaz que representa un paciente\n */\nexport interface Paciente {\n  id: number;\n  nombres: string;\n  apellidos: string;\n  rut: string;\n  telefono: string;\n  email: string;\n  fecha_nacimiento: string;\n  genero: string;\n  direccion: string;\n}\n\n/**\n * Interfaz que representa un segmento horario de atención\n */\nexport interface SegmentoHorario {\n  id: number;\n  nombre: string;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  fun_id: number;\n  free: boolean;\n}\n\n/**\n * Enum que representa el estado de un cupo\n */\nenum Estado {\n  DISPONIBLE = '0',\n  OCUPADO = '1'\n}\n\n/**\n * Interfaz que representa un cupo de atención\n */\nexport interface Cupo {\n  id: number;\n  estado: Estado;\n  fecha_hora_inicio: string;\n  fecha_hora_fin: string;\n  duracion: number; // En minutos\n}\n\n/**\n * Interfaz que representa una cita médica\n */\nexport interface Cita {\n  id: number;\n  cup_id: number;\n  pac_id: number;\n}\n\n/**\n * Interfaz que representa un rol de usuario\n */\nexport interface Rol {\n  id: number;\n  nombre: string;\n}\n\n/**\n * Interfaz que representa la relación entre un rol y un funcionario\n */\nexport interface RolFuncionario {\n  rol_id: number;\n  fun_id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SegmentoModalComponent.html":{"url":"components/SegmentoModalComponent.html","title":"component - SegmentoModalComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SegmentoModalComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/agenda/segmento-modal/segmento-modal.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente modal para la gestión de segmentos horarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-segmento-modal\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                            ReactiveFormsModule\n                \n            \n\n\n\n\n            \n                templateUrl\n                ./segmento-modal.component.html\n            \n\n\n\n            \n                styleUrl\n                ./segmento-modal.component.css\n            \n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isEditMode\n                            \n                            \n                                segmentoForm\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeModal\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onDelete\n                            \n                            \n                                onSubmit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                funcionario\n                            \n                            \n                                segmentoToEdit\n                            \n                            \n                                startDate\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                close\n                            \n                            \n                                delete\n                            \n                            \n                                submit\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(fb: FormBuilder)\n                    \n                \n                        \n                            \n                                Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:34\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        fb\n                                                  \n                                                        \n                                                                    FormBuilder\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        funcionario\n                    \n                \n                \n                    \n                        Type :         Funcionario\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:21\n                            \n                        \n                \n                    \n                        Funcionario al que pertenece el segmento\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        segmentoToEdit\n                    \n                \n                \n                    \n                        Type :         SegmentoHorario | null\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:23\n                            \n                        \n                \n                    \n                        Segmento a editar (null si es nuevo)\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        startDate\n                    \n                \n                \n                    \n                        Type :         Date\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:19\n                            \n                        \n                \n                    \n                        Fecha de inicio del segmento\n\n                    \n                \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        close\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:25\n                            \n                        \n                \n                    \n                        Evento emitido para cerrar el modal\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        delete\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:29\n                            \n                        \n                \n                    \n                        Evento emitido al eliminar el segmento\n\n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        submit\n                    \n                \n                \n                    \n                        Type :     EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:27\n                            \n                        \n                \n                    \n                        Evento emitido al guardar el segmento\n\n                    \n                \n            \n        \n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeModal\n                        \n                    \n                \n            \n            \n                \ncloseModal()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:64\n                        \n                    \n\n\n            \n                \n                        Cierra el modal\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:47\n                        \n                    \n\n\n            \n                \n                        Inicializa el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onDelete\n                        \n                    \n                \n            \n            \n                \nonDelete()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:72\n                        \n                    \n\n\n            \n                \n                        Maneja la eliminación de un segmento\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onSubmit\n                        \n                    \n                \n            \n            \n                \nonSubmit()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:83\n                        \n                    \n\n\n            \n                \n                        Maneja el envío del formulario\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isEditMode\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:34\n                        \n                    \n\n            \n                \n                    Indica si se está editando un segmento existente\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        segmentoForm\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/agenda/segmento-modal/segmento-modal.component.ts:32\n                        \n                    \n\n            \n                \n                    Formulario reactivo para los datos del segmento\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, EventEmitter, Input, Output, OnInit } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { DatabaseService, Funcionario, SegmentoHorario } from '../../services/database.service';\n\n/**\n * Componente modal para la gestión de segmentos horarios\n * @description Permite crear y editar segmentos horarios de los funcionarios\n */\n@Component({\n  selector: 'app-segmento-modal',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  templateUrl: './segmento-modal.component.html',\n  styleUrl: './segmento-modal.component.css'\n})\nexport class SegmentoModalComponent implements OnInit {\n  /** Fecha de inicio del segmento */\n  @Input() startDate!: Date;\n  /** Funcionario al que pertenece el segmento */\n  @Input() funcionario!: Funcionario;\n  /** Segmento a editar (null si es nuevo) */\n  @Input() segmentoToEdit: SegmentoHorario | null = null;\n  /** Evento emitido para cerrar el modal */\n  @Output() close = new EventEmitter();\n  /** Evento emitido al guardar el segmento */\n  @Output() submit = new EventEmitter();\n  /** Evento emitido al eliminar el segmento */\n  @Output() delete = new EventEmitter();\n\n  /** Formulario reactivo para los datos del segmento */\n  segmentoForm: FormGroup;\n  /** Indica si se está editando un segmento existente */\n  isEditMode: boolean = false;\n\n  constructor(private fb: FormBuilder) {\n    this.segmentoForm = this.fb.group({\n      nombre: ['', Validators.required],\n      cupos: [1, [Validators.required, Validators.min(1), Validators.max(48)]]\n    });\n  }\n\n  /**\n   * Inicializa el componente\n   * @description Configura el formulario si se está editando un segmento existente\n   */\n  ngOnInit() {\n    if (this.segmentoToEdit) {\n      this.isEditMode = true;\n      const duration = (new Date(this.segmentoToEdit.fecha_hora_fin).getTime() - \n                       new Date(this.segmentoToEdit.fecha_hora_inicio).getTime()) / (30 * 60000);\n      \n      this.segmentoForm.patchValue({\n        nombre: this.segmentoToEdit.nombre,\n        cupos: duration\n      });\n    }\n  }\n\n  /**\n   * Cierra el modal\n   * @description Emite el evento close\n   */\n  closeModal() {\n    this.close.emit();\n  }\n\n  /**\n   * Maneja la eliminación de un segmento\n   * @description Solicita confirmación antes de eliminar\n   */\n  onDelete() {\n    if (this.segmentoToEdit && confirm('¿Está seguro de eliminar este segmento horario?')) {\n      this.delete.emit(this.segmentoToEdit.id);\n      this.closeModal();\n    }\n  }\n\n  /**\n   * Maneja el envío del formulario\n   * @description Crea o actualiza un segmento horario\n   */\n  onSubmit() {\n    if (this.segmentoForm.valid) {\n      const formValue = this.segmentoForm.value;\n      const startDate = this.segmentoToEdit ? new Date(this.segmentoToEdit.fecha_hora_inicio) : this.startDate;\n      const endDate = new Date(startDate);\n      endDate.setMinutes(endDate.getMinutes() + (formValue.cupos * 30));\n\n      const segmento: SegmentoHorario = {\n        id: this.segmentoToEdit?.id || 0,\n        nombre: formValue.nombre,\n        fecha_hora_inicio: startDate.toISOString(),\n        fecha_hora_fin: endDate.toISOString(),\n        fun_id: this.funcionario.id,\n        free: true\n      };\n      \n      this.submit.emit(segmento);\n      this.closeModal();\n    }\n  }\n} \n    \n\n    \n        \n    \n    \n        {{ isEditMode ? 'Editar' : 'Crear' }} Segmento Horario\n        ×\n    \n    \n        \n        \n            Nombre del Segmento\n            \n                Seleccione un tipo de segmento\n                Atención general\n                Otro\n            \n            \n                El nombre es requerido\n            \n        \n\n        \n            Número de Cupos (30 min c/u)\n            \n            \n                El número de cupos es requerido\n                Mínimo 1 cupo\n                Máximo 48 cupos\n            \n        \n\n        \n            Fecha y Hora de Inicio\n            \n                {{ (segmentoToEdit ? segmentoToEdit.fecha_hora_inicio : startDate) | date:'dd/MM/yyyy HH:mm' }}\n            \n        \n\n        \n            Duración Total\n            \n                {{ segmentoForm.get('cupos')?.value * 30 }} minutos\n            \n        \n\n        \n            \n                Eliminar\n            \n            Cancelar\n            \n                {{ isEditMode ? 'Guardar Cambios' : 'Crear Segmento' }}\n            \n        \n        \n    \n    \n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                {{ isEditMode ? \\'Editar\\' : \\'Crear\\' }} Segmento Horario        ×                                    Nombre del Segmento                            Seleccione un tipo de segmento                Atención general                Otro                                        El nombre es requerido                                        Número de Cupos (30 min c/u)                                        El número de cupos es requerido                Mínimo 1 cupo                Máximo 48 cupos                                        Fecha y Hora de Inicio                            {{ (segmentoToEdit ? segmentoToEdit.fecha_hora_inicio : startDate) | date:\\'dd/MM/yyyy HH:mm\\' }}                                        Duración Total                            {{ segmentoForm.get(\\'cupos\\')?.value * 30 }} minutos                                                        Eliminar                        Cancelar                            {{ isEditMode ? \\'Guardar Cambios\\' : \\'Crear Segmento\\' }}                                    '\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SegmentoModalComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Toast.html":{"url":"interfaces/Toast.html","title":"interface - Toast","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Toast\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toast.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Interfaz que define la estructura de un mensaje toast\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            message\n                                        \n                                \n                                \n                                        \n                                            type\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        message\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        message:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Mensaje a mostrar\n\n                                \n                            \n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        type\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        type:     \"success\" | \"error\" | \"info\"\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     \"success\" | \"error\" | \"info\"\n\n                                        \n                                    \n\n\n\n\n\n                            \n                                \n                                    Tipo de mensaje: success, error o info\n\n                                \n                            \n                        \n                    \n            \n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Interfaz que define la estructura de un mensaje toast\n */\nexport interface Toast {\n  /** Mensaje a mostrar */\n  message: string;\n  /** Tipo de mensaje: success, error o info */\n  type: 'success' | 'error' | 'info';\n}\n\n/**\n * Servicio que maneja los mensajes toast de la aplicación\n * @description Permite mostrar notificaciones temporales en la interfaz\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  /** Subject que mantiene el estado del toast actual */\n  private toastSubject = new BehaviorSubject(null);\n  /** Observable público que emite los cambios en el toast */\n  toast$ = this.toastSubject.asObservable();\n\n  /**\n   * Muestra un nuevo mensaje toast\n   * @param message Texto del mensaje a mostrar\n   * @param type Tipo de mensaje (success, error, info)\n   * @description El mensaje se ocultará automáticamente después de 3 segundos\n   */\n  show(message: string, type: 'success' | 'error' | 'info' = 'info') {\n    this.toastSubject.next({ message, type });\n    setTimeout(() => this.toastSubject.next(null), 3000);\n  }\n\n  /**\n   * Oculta el mensaje toast actual\n   * @description Limpia el toast actual estableciéndolo a null\n   */\n  hide() {\n    this.toastSubject.next(null);\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ToastComponent.html":{"url":"components/ToastComponent.html","title":"component - ToastComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ToastComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/toast/toast.component.ts\n\n\n\n    \n        Description\n    \n    \n        Componente que muestra mensajes toast en la aplicación\n\n    \n\n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-toast\n            \n\n            \n                standalone\n                true\n            \n\n            \n                imports\n                \n                            CommonModule\n                \n            \n\n\n            \n                styles\n                \n    .toast {\n      position: fixed;\n      bottom: 2rem;\n      right: 2rem;\n      padding: 1rem 2rem;\n      border-radius: 6px;\n      color: white;\n      font-weight: 500;\n      animation: slideIn 0.3s ease-out;\n      z-index: 2000;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateX(100%);\n        opacity: 0;\n      }\n      to {\n        transform: translateX(0);\n        opacity: 1;\n      }\n    }\n\n    .success {\n      background-color: #48bb78;\n    }\n\n    .error {\n      background-color: #e53e3e;\n    }\n\n    .info {\n      background-color: #4299e1;\n    }\n  \n            \n\n            \n                template\n                \n  {{ toast.message }}\n\n\n            \n\n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                subscription\n                            \n                            \n                                toast\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(toastService: ToastService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/toast/toast.component.ts:60\n                            \n                        \n\n                \n                    \n                            Constructor del componente\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        toastService\n                                                  \n                                                        \n                                                                        ToastService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Servicio que maneja los mensajes toast\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/components/toast/toast.component.ts:77\n                        \n                    \n\n\n            \n                \n                        Limpia la suscripción al destruir el componente\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toast/toast.component.ts:60\n                        \n                    \n\n            \n                \n                    Suscripción al servicio de toast\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        toast\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Default value : null\n                    \n                \n                    \n                        \n                                Defined in src/app/components/toast/toast.component.ts:58\n                        \n                    \n\n            \n                \n                    Toast actual que se está mostrando\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import { Component, OnDestroy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ToastService } from '../../services/toast.service';\nimport { Subscription } from 'rxjs';\n\n/**\n * Componente que muestra mensajes toast en la aplicación\n * @description Muestra notificaciones temporales en la esquina inferior derecha\n */\n@Component({\n  selector: 'app-toast',\n  standalone: true,\n  imports: [CommonModule],\n  template: `\n    \n      {{ toast.message }}\n    \n  `,\n  styles: [`\n    .toast {\n      position: fixed;\n      bottom: 2rem;\n      right: 2rem;\n      padding: 1rem 2rem;\n      border-radius: 6px;\n      color: white;\n      font-weight: 500;\n      animation: slideIn 0.3s ease-out;\n      z-index: 2000;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateX(100%);\n        opacity: 0;\n      }\n      to {\n        transform: translateX(0);\n        opacity: 1;\n      }\n    }\n\n    .success {\n      background-color: #48bb78;\n    }\n\n    .error {\n      background-color: #e53e3e;\n    }\n\n    .info {\n      background-color: #4299e1;\n    }\n  `]\n})\nexport class ToastComponent implements OnDestroy {\n  /** Toast actual que se está mostrando */\n  toast: any = null;\n  /** Suscripción al servicio de toast */\n  private subscription: Subscription;\n\n  /**\n   * Constructor del componente\n   * @param toastService Servicio que maneja los mensajes toast\n   * @description Inicializa la suscripción al servicio de toast\n   */\n  constructor(private toastService: ToastService) {\n    this.subscription = this.toastService.toast$.subscribe(\n      toast => this.toast = toast\n    );\n  }\n\n  /**\n   * Limpia la suscripción al destruir el componente\n   * @description Evita memory leaks cancelando la suscripción\n   */\n  ngOnDestroy() {\n    if (this.subscription) {\n      this.subscription.unsubscribe();\n    }\n  }\n} \n    \n\n\n    \n            \n    .toast {\n      position: fixed;\n      bottom: 2rem;\n      right: 2rem;\n      padding: 1rem 2rem;\n      border-radius: 6px;\n      color: white;\n      font-weight: 500;\n      animation: slideIn 0.3s ease-out;\n      z-index: 2000;\n    }\n\n    @keyframes slideIn {\n      from {\n        transform: translateX(100%);\n        opacity: 0;\n      }\n      to {\n        transform: translateX(0);\n        opacity: 1;\n      }\n    }\n\n    .success {\n      background-color: #48bb78;\n    }\n\n    .error {\n      background-color: #e53e3e;\n    }\n\n    .info {\n      background-color: #4299e1;\n    }\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{ toast.message }}'\n    var COMPONENTS = [{'name': 'AgendaComponent', 'selector': 'app-agenda'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'CitasComponent', 'selector': 'app-citas'},{'name': 'DashboardComponent', 'selector': 'app-dashboard'},{'name': 'FuncionariosComponent', 'selector': 'app-funcionarios'},{'name': 'InscripcionComponent', 'selector': 'app-inscripcion'},{'name': 'LandingPageComponent', 'selector': 'app-landing-page'},{'name': 'LoginModalComponent', 'selector': 'app-login-modal'},{'name': 'ProfileModalComponent', 'selector': 'app-profile-modal'},{'name': 'RegisterModalComponent', 'selector': 'app-register-modal'},{'name': 'SegmentoModalComponent', 'selector': 'app-segmento-modal'},{'name': 'ToastComponent', 'selector': 'app-toast'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ToastComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ToastService.html":{"url":"injectables/ToastService.html","title":"injectable - ToastService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ToastService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/toast.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Servicio que maneja los mensajes toast de la aplicación\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                toast$\n                            \n                            \n                                    Private\n                                toastSubject\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                hide\n                            \n                            \n                                show\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        hide\n                        \n                    \n                \n            \n            \n                \nhide()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/toast.service.ts:42\n                        \n                    \n\n\n            \n                \n                        Oculta el mensaje toast actual\n\n\n                        \n                            Returns :         void\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        show\n                        \n                    \n                \n            \n            \n                \nshow(message: string, type: \"success\" | \"error\" | \"info\")\n                \n            \n\n\n                    \n                        \n                            Defined in src/app/services/toast.service.ts:33\n                        \n                    \n\n\n            \n                \n                        Muestra un nuevo mensaje toast\n\n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                                Default value\n                                                Description\n                                        \n                                    \n                                    \n                                        \n                                                message\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                            \n\n                                            \n                                                    Texto del mensaje a mostrar\n\n                                            \n                                        \n                                        \n                                                type\n                                            \n                                                        \"success\" | \"error\" | \"info\"\n                                            \n\n                                            \n                                                    No\n                                            \n\n                                            \n                                                    'info'\n                                            \n\n                                            \n                                                    Tipo de mensaje (success, error, info)\n\n                                            \n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        toast$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.toastSubject.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/toast.service.ts:25\n                        \n                    \n\n            \n                \n                    Observable público que emite los cambios en el toast\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        toastSubject\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new BehaviorSubject(null)\n                    \n                \n                    \n                        \n                                Defined in src/app/services/toast.service.ts:23\n                        \n                    \n\n            \n                \n                    Subject que mantiene el estado del toast actual\n\n                \n            \n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\n\n/**\n * Interfaz que define la estructura de un mensaje toast\n */\nexport interface Toast {\n  /** Mensaje a mostrar */\n  message: string;\n  /** Tipo de mensaje: success, error o info */\n  type: 'success' | 'error' | 'info';\n}\n\n/**\n * Servicio que maneja los mensajes toast de la aplicación\n * @description Permite mostrar notificaciones temporales en la interfaz\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastService {\n  /** Subject que mantiene el estado del toast actual */\n  private toastSubject = new BehaviorSubject(null);\n  /** Observable público que emite los cambios en el toast */\n  toast$ = this.toastSubject.asObservable();\n\n  /**\n   * Muestra un nuevo mensaje toast\n   * @param message Texto del mensaje a mostrar\n   * @param type Tipo de mensaje (success, error, info)\n   * @description El mensaje se ocultará automáticamente después de 3 segundos\n   */\n  show(message: string, type: 'success' | 'error' | 'info' = 'info') {\n    this.toastSubject.next({ message, type });\n    setTimeout(() => this.toastSubject.next(null), 3000);\n  }\n\n  /**\n   * Oculta el mensaje toast actual\n   * @description Limpia el toast actual estableciéndolo a null\n   */\n  hide() {\n    this.toastSubject.next(null);\n  }\n} \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/agenda/agenda.component.ts\n            \n            component\n            AgendaComponent\n            \n                96 %\n                (24/25)\n            \n        \n        \n            \n                \n                src/app/agenda/segmento-modal/segmento-modal.component.ts\n            \n            component\n            SegmentoModalComponent\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                73 %\n                (14/19)\n            \n        \n        \n            \n                \n                        src/app/app.config.ts\n            \n            variable\n            appConfig\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/citas/citas.component.ts\n            \n            component\n            CitasComponent\n            \n                93 %\n                (31/33)\n            \n        \n        \n            \n                \n                src/app/citas/citas.component.ts\n            \n            interface\n            FuncionarioWithAvailability\n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                src/app/components/login-modal/login-modal.component.ts\n            \n            component\n            LoginModalComponent\n            \n                95 %\n                (20/21)\n            \n        \n        \n            \n                \n                src/app/components/profile-modal/profile-modal.component.ts\n            \n            component\n            ProfileModalComponent\n            \n                100 %\n                (13/13)\n            \n        \n        \n            \n                \n                src/app/components/register-modal/register-modal.component.ts\n            \n            component\n            RegisterModalComponent\n            \n                94 %\n                (16/17)\n            \n        \n        \n            \n                \n                src/app/components/toast/toast.component.ts\n            \n            component\n            ToastComponent\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                53 %\n                (7/13)\n            \n        \n        \n            \n                \n                src/app/dashboard/dashboard.component.ts\n            \n            interface\n            NavItem\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/funcionarios/funcionarios.component.ts\n            \n            component\n            FuncionariosComponent\n            \n                95 %\n                (21/22)\n            \n        \n        \n            \n                \n                src/app/guards/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                66 %\n                (2/3)\n            \n        \n        \n            \n                \n                src/app/inscripcion/inscripcion.component.ts\n            \n            component\n            InscripcionComponent\n            \n                89 %\n                (17/19)\n            \n        \n        \n            \n                \n                src/app/landing-page/landing-page.component.ts\n            \n            component\n            LandingPageComponent\n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            injectable\n            DatabaseService\n            \n                25 %\n                (13/52)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            Cita\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            Cupo\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            Especialidad\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            Funcionario\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            Paciente\n            \n                10 %\n                (1/10)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            Rol\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            RolFuncionario\n            \n                33 %\n                (1/3)\n            \n        \n        \n            \n                \n                src/app/services/database.service.ts\n            \n            interface\n            SegmentoHorario\n            \n                14 %\n                (1/7)\n            \n        \n        \n            \n                \n                src/app/services/toast.service.ts\n            \n            injectable\n            ToastService\n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                src/app/services/toast.service.ts\n            \n            interface\n            Toast\n            \n                100 %\n                (3/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^18.2.0\n        \n            @angular/common : ^18.2.0\n        \n            @angular/compiler : ^18.2.0\n        \n            @angular/core : ^18.2.0\n        \n            @angular/forms : ^18.2.0\n        \n            @angular/platform-browser : ^18.2.0\n        \n            @angular/platform-browser-dynamic : ^18.2.0\n        \n            @angular/router : ^18.2.0\n        \n            @compodoc/compodoc : ^1.1.26\n        \n            @fullcalendar/angular : ^6.1.15\n        \n            @fullcalendar/core : ^6.1.15\n        \n            @fullcalendar/daygrid : ^6.1.15\n        \n            @fullcalendar/interaction : ^6.1.15\n        \n            @fullcalendar/timegrid : ^6.1.15\n        \n            @types/sql.js : ^1.4.9\n        \n            ngx-mask : ^19.0.0\n        \n            rxjs : ~7.8.0\n        \n            sql.js : ^1.12.0\n        \n            tarea-duoc : file:\n        \n            tslib : ^2.3.0\n        \n            zone.js : ~0.14.10\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Estado   (src/.../database.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/services/database.service.ts\n    \n        \n            \n                \n                    \n                        \n                        Estado\n                    \n                \n                    \n                        \n                            Enum que representa el estado de un cupo\n\n                        \n                    \n                        \n                            \n                                 DISPONIBLE\n                            \n                        \n                        \n                            \n                                Value : 0\n                            \n                        \n                        \n                            \n                                 OCUPADO\n                            \n                        \n                        \n                            \n                                Value : 1\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nTareaDuoc\nThis project was generated with Angular CLI version 18.2.12.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n        \n            \n                \n                    \n                    12 Components\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    1 Guard\n                \n            \n        \n        \n            \n                \n                    \n                    11 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            appConfig   (src/.../app.config.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/app.config.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        appConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ApplicationConfig\n\n                    \n                \n                \n                    \n                        Default value : {\n  providers: [provideRouter(routes)]\n}\n                    \n                \n\n            \n                \n                    Configuración de la aplicación\n\n                \n            \n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
